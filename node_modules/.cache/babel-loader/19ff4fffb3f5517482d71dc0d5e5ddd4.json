{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { UNSAVED_NEW_NODE } from '../constants';\n/**\n * Add key and title fields to a TreeRecord.\n *\n * These fields are required by rc-tree.\n *\n * Use the id field as source for the key, and turns it into a string\n * (since keys must be strings in rc-tree).\n *\n * @param {TreeRecord} treeRecord The record to augment\n * @param {string} titleField the name of the field to use for title (defaults to 'title')\n *\n * @returns {RCTreeDatum} A new record object with key and title\n *\n * @example\n *\n * getRCTreeDatum({ id: 1, name: 'hello', children: [] })\n * => {\n *   id: 1,\n *   name: 'hello',\n *   children: [],\n *   key: '1',\n *   title: 'hello',\n * }\n */\nvar getRCTreeDatum = function (treeRecord, titleField, new_node_title) {\n  if (titleField === void 0) {\n    titleField = 'title';\n  }\n  if (new_node_title === void 0) {\n    new_node_title = 'new node';\n  }\n  return __assign(__assign({}, treeRecord), {\n    key: String(treeRecord.id),\n    title: treeRecord.id === UNSAVED_NEW_NODE ? new_node_title : treeRecord[titleField]\n  });\n};\nexport default getRCTreeDatum;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","UNSAVED_NEW_NODE","getRCTreeDatum","treeRecord","titleField","new_node_title","key","String","id","title"],"sources":["F:/project/front-end/hei-admin-ui/node_modules/@react-admin/ra-tree/esm/src/util/getRCTreeDatum.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { UNSAVED_NEW_NODE } from '../constants';\n/**\n * Add key and title fields to a TreeRecord.\n *\n * These fields are required by rc-tree.\n *\n * Use the id field as source for the key, and turns it into a string\n * (since keys must be strings in rc-tree).\n *\n * @param {TreeRecord} treeRecord The record to augment\n * @param {string} titleField the name of the field to use for title (defaults to 'title')\n *\n * @returns {RCTreeDatum} A new record object with key and title\n *\n * @example\n *\n * getRCTreeDatum({ id: 1, name: 'hello', children: [] })\n * => {\n *   id: 1,\n *   name: 'hello',\n *   children: [],\n *   key: '1',\n *   title: 'hello',\n * }\n */\nvar getRCTreeDatum = function (treeRecord, titleField, new_node_title) {\n    if (titleField === void 0) { titleField = 'title'; }\n    if (new_node_title === void 0) { new_node_title = 'new node'; }\n    return (__assign(__assign({}, treeRecord), { key: String(treeRecord.id), title: treeRecord.id === UNSAVED_NEW_NODE\n            ? new_node_title\n            : treeRecord[titleField] }));\n};\nexport default getRCTreeDatum;\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IACnB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD,SAASO,gBAAgB,QAAQ,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,cAAc,GAAG,UAAUC,UAAU,EAAEC,UAAU,EAAEC,cAAc,EAAE;EACnE,IAAID,UAAU,KAAK,KAAK,CAAC,EAAE;IAAEA,UAAU,GAAG,OAAO;EAAE;EACnD,IAAIC,cAAc,KAAK,KAAK,CAAC,EAAE;IAAEA,cAAc,GAAG,UAAU;EAAE;EAC9D,OAAQlB,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEgB,UAAU,CAAC,EAAE;IAAEG,GAAG,EAAEC,MAAM,CAACJ,UAAU,CAACK,EAAE,CAAC;IAAEC,KAAK,EAAEN,UAAU,CAACK,EAAE,KAAKP,gBAAgB,GACxGI,cAAc,GACdF,UAAU,CAACC,UAAU;EAAE,CAAC,CAAC;AACvC,CAAC;AACD,eAAeF,cAAc"},"metadata":{},"sourceType":"module"}