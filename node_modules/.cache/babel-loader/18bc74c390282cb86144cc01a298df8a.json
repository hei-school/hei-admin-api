{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Snackbar } from '@mui/material';\nimport clsx from 'clsx';\nimport { useNotificationContext, undoableEventEmitter, useTranslate } from 'ra-core';\nvar defaultAnchorOrigin = {\n  vertical: 'bottom',\n  horizontal: 'center'\n};\n/**\n * Provides a way to show a notification.\n * @see useNotify\n *\n * @example <caption>Basic usage</caption>\n * <Notification />\n *\n * @param props The component props\n * @param {string} props.type The notification type. Defaults to 'info'.\n * @param {number} props.autoHideDuration Duration in milliseconds to wait until hiding a given notification. Defaults to 4000.\n * @param {boolean} props.multiLine Set it to `true` if the notification message should be shown in more than one line.\n */\nexport var Notification = function (props) {\n  var _a;\n  var className = props.className,\n    _b = props.type,\n    type = _b === void 0 ? 'info' : _b,\n    _c = props.autoHideDuration,\n    autoHideDuration = _c === void 0 ? 4000 : _c,\n    _d = props.multiLine,\n    multiLine = _d === void 0 ? false : _d,\n    _e = props.anchorOrigin,\n    anchorOrigin = _e === void 0 ? defaultAnchorOrigin : _e,\n    rest = __rest(props, [\"className\", \"type\", \"autoHideDuration\", \"multiLine\", \"anchorOrigin\"]);\n  var _f = useNotificationContext(),\n    notifications = _f.notifications,\n    takeNotification = _f.takeNotification;\n  var _g = useState(false),\n    open = _g[0],\n    setOpen = _g[1];\n  var _h = React.useState(undefined),\n    messageInfo = _h[0],\n    setMessageInfo = _h[1];\n  var translate = useTranslate();\n  useEffect(function () {\n    if (notifications.length && !messageInfo) {\n      // Set a new snack when we don't have an active one\n      setMessageInfo(takeNotification());\n      setOpen(true);\n    } else if (notifications.length && messageInfo && open) {\n      // Close an active snack when a new one is added\n      setOpen(false);\n    }\n  }, [notifications, messageInfo, open, takeNotification]);\n  var handleRequestClose = useCallback(function () {\n    setOpen(false);\n  }, [setOpen]);\n  var handleExited = useCallback(function () {\n    if (messageInfo && messageInfo.notificationOptions.undoable) {\n      undoableEventEmitter.emit('end', {\n        isUndo: false\n      });\n    }\n    setMessageInfo(undefined);\n  }, [messageInfo]);\n  var handleUndo = useCallback(function () {\n    undoableEventEmitter.emit('end', {\n      isUndo: true\n    });\n    setOpen(false);\n  }, []);\n  if (!messageInfo) return null;\n  return React.createElement(StyledSnackbar, __assign({\n    className: className,\n    open: open,\n    message: messageInfo.message && translate(messageInfo.message, messageInfo.notificationOptions.messageArgs),\n    autoHideDuration: messageInfo.notificationOptions.autoHideDuration || autoHideDuration,\n    disableWindowBlurListener: messageInfo.notificationOptions.undoable,\n    TransitionProps: {\n      onExited: handleExited\n    },\n    onClose: handleRequestClose,\n    ContentProps: {\n      className: clsx(NotificationClasses[messageInfo.type || type], (_a = {}, _a[NotificationClasses.multiLine] = messageInfo.notificationOptions.multiLine || multiLine, _a))\n    },\n    action: messageInfo.notificationOptions.undoable ? React.createElement(Button, {\n      color: \"primary\",\n      className: NotificationClasses.undo,\n      size: \"small\",\n      onClick: handleUndo\n    }, React.createElement(React.Fragment, null, translate('ra.action.undo'))) : null,\n    anchorOrigin: anchorOrigin\n  }, rest));\n};\nNotification.propTypes = {\n  type: PropTypes.string,\n  autoHideDuration: PropTypes.number,\n  multiLine: PropTypes.bool\n};\nvar PREFIX = 'RaNotification';\nexport var NotificationClasses = {\n  success: \"\".concat(PREFIX, \"-success\"),\n  error: \"\".concat(PREFIX, \"-error\"),\n  warning: \"\".concat(PREFIX, \"-warning\"),\n  undo: \"\".concat(PREFIX, \"-undo\"),\n  multiLine: \"\".concat(PREFIX, \"-multiLine\")\n};\nvar StyledSnackbar = styled(Snackbar, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme,\n    type = _a.type;\n  return _b = {}, _b[\"& .\".concat(NotificationClasses.success)] = {\n    backgroundColor: theme.palette.success.main,\n    color: theme.palette.success.contrastText\n  }, _b[\"& .\".concat(NotificationClasses.error)] = {\n    backgroundColor: theme.palette.error.dark,\n    color: theme.palette.error.contrastText\n  }, _b[\"& .\".concat(NotificationClasses.warning)] = {\n    backgroundColor: theme.palette.error.light,\n    color: theme.palette.error.contrastText\n  }, _b[\"& .\".concat(NotificationClasses.undo)] = {\n    color: type === 'success' ? theme.palette.success.contrastText : theme.palette.primary.light\n  }, _b[\"& .\".concat(NotificationClasses.multiLine)] = {\n    whiteSpace: 'pre-wrap'\n  }, _b;\n});","map":{"version":3,"sources":["../../../src/layout/Notification.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Snackbar } from '@mui/material';\nimport clsx from 'clsx';\nimport { useNotificationContext, undoableEventEmitter, useTranslate, } from 'ra-core';\nvar defaultAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'center',\n};\n/**\n * Provides a way to show a notification.\n * @see useNotify\n *\n * @example <caption>Basic usage</caption>\n * <Notification />\n *\n * @param props The component props\n * @param {string} props.type The notification type. Defaults to 'info'.\n * @param {number} props.autoHideDuration Duration in milliseconds to wait until hiding a given notification. Defaults to 4000.\n * @param {boolean} props.multiLine Set it to `true` if the notification message should be shown in more than one line.\n */\nexport var Notification = function (props) {\n    var _a;\n    var className = props.className, _b = props.type, type = _b === void 0 ? 'info' : _b, _c = props.autoHideDuration, autoHideDuration = _c === void 0 ? 4000 : _c, _d = props.multiLine, multiLine = _d === void 0 ? false : _d, _e = props.anchorOrigin, anchorOrigin = _e === void 0 ? defaultAnchorOrigin : _e, rest = __rest(props, [\"className\", \"type\", \"autoHideDuration\", \"multiLine\", \"anchorOrigin\"]);\n    var _f = useNotificationContext(), notifications = _f.notifications, takeNotification = _f.takeNotification;\n    var _g = useState(false), open = _g[0], setOpen = _g[1];\n    var _h = React.useState(undefined), messageInfo = _h[0], setMessageInfo = _h[1];\n    var translate = useTranslate();\n    useEffect(function () {\n        if (notifications.length && !messageInfo) {\n            // Set a new snack when we don't have an active one\n            setMessageInfo(takeNotification());\n            setOpen(true);\n        }\n        else if (notifications.length && messageInfo && open) {\n            // Close an active snack when a new one is added\n            setOpen(false);\n        }\n    }, [notifications, messageInfo, open, takeNotification]);\n    var handleRequestClose = useCallback(function () {\n        setOpen(false);\n    }, [setOpen]);\n    var handleExited = useCallback(function () {\n        if (messageInfo && messageInfo.notificationOptions.undoable) {\n            undoableEventEmitter.emit('end', { isUndo: false });\n        }\n        setMessageInfo(undefined);\n    }, [messageInfo]);\n    var handleUndo = useCallback(function () {\n        undoableEventEmitter.emit('end', { isUndo: true });\n        setOpen(false);\n    }, []);\n    if (!messageInfo)\n        return null;\n    return (React.createElement(StyledSnackbar, __assign({ className: className, open: open, message: messageInfo.message &&\n            translate(messageInfo.message, messageInfo.notificationOptions.messageArgs), autoHideDuration: messageInfo.notificationOptions.autoHideDuration ||\n            autoHideDuration, disableWindowBlurListener: messageInfo.notificationOptions.undoable, TransitionProps: { onExited: handleExited }, onClose: handleRequestClose, ContentProps: {\n            className: clsx(NotificationClasses[messageInfo.type || type], (_a = {},\n                _a[NotificationClasses.multiLine] = messageInfo.notificationOptions.multiLine || multiLine,\n                _a)),\n        }, action: messageInfo.notificationOptions.undoable ? (React.createElement(Button, { color: \"primary\", className: NotificationClasses.undo, size: \"small\", onClick: handleUndo },\n            React.createElement(React.Fragment, null, translate('ra.action.undo')))) : null, anchorOrigin: anchorOrigin }, rest)));\n};\nNotification.propTypes = {\n    type: PropTypes.string,\n    autoHideDuration: PropTypes.number,\n    multiLine: PropTypes.bool,\n};\nvar PREFIX = 'RaNotification';\nexport var NotificationClasses = {\n    success: \"\".concat(PREFIX, \"-success\"),\n    error: \"\".concat(PREFIX, \"-error\"),\n    warning: \"\".concat(PREFIX, \"-warning\"),\n    undo: \"\".concat(PREFIX, \"-undo\"),\n    multiLine: \"\".concat(PREFIX, \"-multiLine\"),\n};\nvar StyledSnackbar = styled(Snackbar, {\n    name: PREFIX,\n    overridesResolver: function (props, styles) { return styles.root; },\n})(function (_a) {\n    var _b;\n    var theme = _a.theme, type = _a.type;\n    return (_b = {},\n        _b[\"& .\".concat(NotificationClasses.success)] = {\n            backgroundColor: theme.palette.success.main,\n            color: theme.palette.success.contrastText,\n        },\n        _b[\"& .\".concat(NotificationClasses.error)] = {\n            backgroundColor: theme.palette.error.dark,\n            color: theme.palette.error.contrastText,\n        },\n        _b[\"& .\".concat(NotificationClasses.warning)] = {\n            backgroundColor: theme.palette.error.light,\n            color: theme.palette.error.contrastText,\n        },\n        _b[\"& .\".concat(NotificationClasses.undo)] = {\n            color: type === 'success'\n                ? theme.palette.success.contrastText\n                : theme.palette.primary.light,\n        },\n        _b[\"& .\".concat(NotificationClasses.multiLine)] = {\n            whiteSpace: 'pre-wrap',\n        },\n        _b);\n});\n//# sourceMappingURL=Notification.js.map"]},"metadata":{},"sourceType":"module"}