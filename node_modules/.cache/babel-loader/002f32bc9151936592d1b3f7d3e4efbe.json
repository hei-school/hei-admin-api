{"ast":null,"code":"/*\n * Copyright 2017-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport { Amplify, ConsoleLogger as Logger, Hub, Parser } from '@aws-amplify/core';\nimport { AWSPinpointProvider } from './Providers/AWSPinpointProvider';\nimport { PageViewTracker, EventTracker, SessionTracker } from './trackers';\nvar logger = new Logger('AnalyticsClass');\nvar AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';\nvar dispatchAnalyticsEvent = function (event, data, message) {\n  Hub.dispatch('analytics', {\n    event: event,\n    data: data,\n    message: message\n  }, 'Analytics', AMPLIFY_SYMBOL);\n};\nvar trackers = {\n  pageView: PageViewTracker,\n  event: EventTracker,\n  session: SessionTracker\n};\nvar _instance = null;\n/**\n * Provide mobile analytics client functions\n */\nvar AnalyticsClass = /** @class */function () {\n  /**\n   * Initialize Analtyics\n   * @param config - Configuration of the Analytics\n   */\n  function AnalyticsClass() {\n    this._config = {};\n    this._pluggables = [];\n    this._disabled = false;\n    this._trackers = {};\n    _instance = this;\n    this.record = this.record.bind(this);\n    Hub.listen('auth', listener);\n    Hub.listen('storage', listener);\n    Hub.listen('analytics', listener);\n  }\n  AnalyticsClass.prototype.getModuleName = function () {\n    return 'Analytics';\n  };\n  /**\n   * configure Analytics\n   * @param {Object} config - Configuration of the Analytics\n   */\n  AnalyticsClass.prototype.configure = function (config) {\n    var _this = this;\n    if (!config) return this._config;\n    logger.debug('configure Analytics', config);\n    var amplifyConfig = Parser.parseMobilehubConfig(config);\n    this._config = Object.assign({}, this._config, amplifyConfig.Analytics, config);\n    if (this._config['disabled']) {\n      this._disabled = true;\n    }\n    // turn on the autoSessionRecord if not specified\n    if (this._config['autoSessionRecord'] === undefined) {\n      this._config['autoSessionRecord'] = true;\n    }\n    this._pluggables.forEach(function (pluggable) {\n      // for backward compatibility\n      var providerConfig = pluggable.getProviderName() === 'AWSPinpoint' && !_this._config['AWSPinpoint'] ? _this._config : _this._config[pluggable.getProviderName()];\n      pluggable.configure(__assign({\n        disabled: _this._config['disabled'],\n        autoSessionRecord: _this._config['autoSessionRecord']\n      }, providerConfig));\n    });\n    if (this._pluggables.length === 0) {\n      this.addPluggable(new AWSPinpointProvider());\n    }\n    dispatchAnalyticsEvent('configured', null, \"The Analytics category has been configured successfully\");\n    logger.debug('current configuration', this._config);\n    return this._config;\n  };\n  /**\n   * add plugin into Analytics category\n   * @param pluggable - an instance of the plugin\n   */\n  AnalyticsClass.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategory() === 'Analytics') {\n      this._pluggables.push(pluggable);\n      // for backward compatibility\n      var providerConfig = pluggable.getProviderName() === 'AWSPinpoint' && !this._config['AWSPinpoint'] ? this._config : this._config[pluggable.getProviderName()];\n      var config = __assign({\n        disabled: this._config['disabled']\n      }, providerConfig);\n      pluggable.configure(config);\n      return config;\n    }\n  };\n  /**\n   * Get the plugin object\n   * @param providerName - the name of the provider to be removed\n   */\n  AnalyticsClass.prototype.getPluggable = function (providerName) {\n    for (var i = 0; i < this._pluggables.length; i += 1) {\n      var pluggable = this._pluggables[i];\n      if (pluggable.getProviderName() === providerName) {\n        return pluggable;\n      }\n    }\n    logger.debug('No plugin found with providerName', providerName);\n    return null;\n  };\n  /**\n   * Remove the plugin object\n   * @param providerName - the name of the provider to be removed\n   */\n  AnalyticsClass.prototype.removePluggable = function (providerName) {\n    var idx = 0;\n    while (idx < this._pluggables.length) {\n      if (this._pluggables[idx].getProviderName() === providerName) {\n        break;\n      }\n      idx += 1;\n    }\n    if (idx === this._pluggables.length) {\n      logger.debug('No plugin found with providerName', providerName);\n      return;\n    } else {\n      this._pluggables.splice(idx, idx + 1);\n      return;\n    }\n  };\n  /**\n   * stop sending events\n   */\n  AnalyticsClass.prototype.disable = function () {\n    this._disabled = true;\n  };\n  /**\n   * start sending events\n   */\n  AnalyticsClass.prototype.enable = function () {\n    this._disabled = false;\n  };\n  /**\n   * Record Session start\n   * @param [provider] - name of the provider.\n   * @return - A promise which resolves if buffer doesn't overflow\n   */\n  AnalyticsClass.prototype.startSession = function (provider) {\n    return __awaiter(this, void 0, void 0, function () {\n      var params;\n      return __generator(this, function (_a) {\n        params = {\n          event: {\n            name: '_session.start'\n          },\n          provider: provider\n        };\n        return [2 /*return*/, this._sendEvent(params)];\n      });\n    });\n  };\n  /**\n   * Record Session stop\n   * @param [provider] - name of the provider.\n   * @return - A promise which resolves if buffer doesn't overflow\n   */\n  AnalyticsClass.prototype.stopSession = function (provider) {\n    return __awaiter(this, void 0, void 0, function () {\n      var params;\n      return __generator(this, function (_a) {\n        params = {\n          event: {\n            name: '_session.stop'\n          },\n          provider: provider\n        };\n        return [2 /*return*/, this._sendEvent(params)];\n      });\n    });\n  };\n  AnalyticsClass.prototype.record = function (event, providerOrAttributes, metrics) {\n    return __awaiter(this, void 0, void 0, function () {\n      var params;\n      return __generator(this, function (_a) {\n        params = null;\n        // this is just for compatibility, going to be deprecated\n        if (typeof event === 'string') {\n          params = {\n            event: {\n              name: event,\n              attributes: providerOrAttributes,\n              metrics: metrics\n            },\n            provider: 'AWSPinpoint'\n          };\n        } else {\n          params = {\n            event: event,\n            provider: providerOrAttributes\n          };\n        }\n        return [2 /*return*/, this._sendEvent(params)];\n      });\n    });\n  };\n  AnalyticsClass.prototype.updateEndpoint = function (attrs, provider) {\n    return __awaiter(this, void 0, void 0, function () {\n      var event;\n      return __generator(this, function (_a) {\n        event = __assign(__assign({}, attrs), {\n          name: '_update_endpoint'\n        });\n        return [2 /*return*/, this.record(event, provider)];\n      });\n    });\n  };\n  AnalyticsClass.prototype._sendEvent = function (params) {\n    var _this = this;\n    if (this._disabled) {\n      logger.debug('Analytics has been disabled');\n      return Promise.resolve();\n    }\n    var provider = params.provider ? params.provider : 'AWSPinpoint';\n    return new Promise(function (resolve, reject) {\n      _this._pluggables.forEach(function (pluggable) {\n        if (pluggable.getProviderName() === provider) {\n          pluggable.record(params, {\n            resolve: resolve,\n            reject: reject\n          });\n        }\n      });\n    });\n  };\n  AnalyticsClass.prototype.autoTrack = function (trackerType, opts) {\n    if (!trackers[trackerType]) {\n      logger.debug('invalid tracker type');\n      return;\n    }\n    // to sync up two different configuration ways of auto session tracking\n    if (trackerType === 'session') {\n      this._config['autoSessionRecord'] = opts['enable'];\n    }\n    var tracker = this._trackers[trackerType];\n    if (!tracker) {\n      this._trackers[trackerType] = new trackers[trackerType](this.record, opts);\n    } else {\n      tracker.configure(opts);\n    }\n  };\n  return AnalyticsClass;\n}();\nexport { AnalyticsClass };\nvar endpointUpdated = false;\nvar authConfigured = false;\nvar analyticsConfigured = false;\nvar listener = function (capsule) {\n  var channel = capsule.channel,\n    payload = capsule.payload;\n  logger.debug('on hub capsule ' + channel, payload);\n  switch (channel) {\n    case 'auth':\n      authEvent(payload);\n      break;\n    case 'storage':\n      storageEvent(payload);\n      break;\n    case 'analytics':\n      analyticsEvent(payload);\n      break;\n    default:\n      break;\n  }\n};\nvar storageEvent = function (payload) {\n  var _a = payload.data,\n    attrs = _a.attrs,\n    metrics = _a.metrics;\n  if (!attrs) return;\n  if (analyticsConfigured) {\n    _instance.record({\n      name: 'Storage',\n      attributes: attrs,\n      metrics: metrics\n    }).catch(function (e) {\n      logger.debug('Failed to send the storage event automatically', e);\n    });\n  }\n};\nvar authEvent = function (payload) {\n  var event = payload.event;\n  if (!event) {\n    return;\n  }\n  var recordAuthEvent = function (eventName) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var err_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(authConfigured && analyticsConfigured)) return [3 /*break*/, 4];\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, _instance.record({\n              name: \"_userauth.\" + eventName\n            })];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n          case 3:\n            err_1 = _a.sent();\n            logger.debug(\"Failed to send the \" + eventName + \" event automatically\", err_1);\n            return [3 /*break*/, 4];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  switch (event) {\n    case 'signIn':\n      return recordAuthEvent('sign_in');\n    case 'signUp':\n      return recordAuthEvent('sign_up');\n    case 'signOut':\n      return recordAuthEvent('sign_out');\n    case 'signIn_failure':\n      return recordAuthEvent('auth_fail');\n    case 'configured':\n      authConfigured = true;\n      if (authConfigured && analyticsConfigured) {\n        sendEvents();\n      }\n      break;\n  }\n};\nvar analyticsEvent = function (payload) {\n  var event = payload.event;\n  if (!event) return;\n  switch (event) {\n    case 'pinpointProvider_configured':\n      analyticsConfigured = true;\n      if (authConfigured && analyticsConfigured) {\n        sendEvents();\n      }\n      break;\n  }\n};\nvar sendEvents = function () {\n  var config = _instance.configure();\n  if (!endpointUpdated && config['autoSessionRecord']) {\n    _instance.updateEndpoint({\n      immediate: true\n    }).catch(function (e) {\n      logger.debug('Failed to update the endpoint', e);\n    });\n    endpointUpdated = true;\n  }\n  _instance.autoTrack('session', {\n    enable: config['autoSessionRecord']\n  });\n};\nexport var Analytics = new AnalyticsClass();\nAmplify.register(Analytics);","map":{"version":3,"sources":["../src/Analytics.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Amplify, ConsoleLogger as Logger, Hub, Parser, } from '@aws-amplify/core';\nimport { AWSPinpointProvider } from './Providers/AWSPinpointProvider';\nimport { PageViewTracker, EventTracker, SessionTracker } from './trackers';\nvar logger = new Logger('AnalyticsClass');\nvar AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function'\n    ? Symbol.for('amplify_default')\n    : '@@amplify_default');\nvar dispatchAnalyticsEvent = function (event, data, message) {\n    Hub.dispatch('analytics', { event: event, data: data, message: message }, 'Analytics', AMPLIFY_SYMBOL);\n};\nvar trackers = {\n    pageView: PageViewTracker,\n    event: EventTracker,\n    session: SessionTracker,\n};\nvar _instance = null;\n/**\n * Provide mobile analytics client functions\n */\nvar AnalyticsClass = /** @class */ (function () {\n    /**\n     * Initialize Analtyics\n     * @param config - Configuration of the Analytics\n     */\n    function AnalyticsClass() {\n        this._config = {};\n        this._pluggables = [];\n        this._disabled = false;\n        this._trackers = {};\n        _instance = this;\n        this.record = this.record.bind(this);\n        Hub.listen('auth', listener);\n        Hub.listen('storage', listener);\n        Hub.listen('analytics', listener);\n    }\n    AnalyticsClass.prototype.getModuleName = function () {\n        return 'Analytics';\n    };\n    /**\n     * configure Analytics\n     * @param {Object} config - Configuration of the Analytics\n     */\n    AnalyticsClass.prototype.configure = function (config) {\n        var _this = this;\n        if (!config)\n            return this._config;\n        logger.debug('configure Analytics', config);\n        var amplifyConfig = Parser.parseMobilehubConfig(config);\n        this._config = Object.assign({}, this._config, amplifyConfig.Analytics, config);\n        if (this._config['disabled']) {\n            this._disabled = true;\n        }\n        // turn on the autoSessionRecord if not specified\n        if (this._config['autoSessionRecord'] === undefined) {\n            this._config['autoSessionRecord'] = true;\n        }\n        this._pluggables.forEach(function (pluggable) {\n            // for backward compatibility\n            var providerConfig = pluggable.getProviderName() === 'AWSPinpoint' &&\n                !_this._config['AWSPinpoint']\n                ? _this._config\n                : _this._config[pluggable.getProviderName()];\n            pluggable.configure(__assign({ disabled: _this._config['disabled'], autoSessionRecord: _this._config['autoSessionRecord'] }, providerConfig));\n        });\n        if (this._pluggables.length === 0) {\n            this.addPluggable(new AWSPinpointProvider());\n        }\n        dispatchAnalyticsEvent('configured', null, \"The Analytics category has been configured successfully\");\n        logger.debug('current configuration', this._config);\n        return this._config;\n    };\n    /**\n     * add plugin into Analytics category\n     * @param pluggable - an instance of the plugin\n     */\n    AnalyticsClass.prototype.addPluggable = function (pluggable) {\n        if (pluggable && pluggable.getCategory() === 'Analytics') {\n            this._pluggables.push(pluggable);\n            // for backward compatibility\n            var providerConfig = pluggable.getProviderName() === 'AWSPinpoint' &&\n                !this._config['AWSPinpoint']\n                ? this._config\n                : this._config[pluggable.getProviderName()];\n            var config = __assign({ disabled: this._config['disabled'] }, providerConfig);\n            pluggable.configure(config);\n            return config;\n        }\n    };\n    /**\n     * Get the plugin object\n     * @param providerName - the name of the provider to be removed\n     */\n    AnalyticsClass.prototype.getPluggable = function (providerName) {\n        for (var i = 0; i < this._pluggables.length; i += 1) {\n            var pluggable = this._pluggables[i];\n            if (pluggable.getProviderName() === providerName) {\n                return pluggable;\n            }\n        }\n        logger.debug('No plugin found with providerName', providerName);\n        return null;\n    };\n    /**\n     * Remove the plugin object\n     * @param providerName - the name of the provider to be removed\n     */\n    AnalyticsClass.prototype.removePluggable = function (providerName) {\n        var idx = 0;\n        while (idx < this._pluggables.length) {\n            if (this._pluggables[idx].getProviderName() === providerName) {\n                break;\n            }\n            idx += 1;\n        }\n        if (idx === this._pluggables.length) {\n            logger.debug('No plugin found with providerName', providerName);\n            return;\n        }\n        else {\n            this._pluggables.splice(idx, idx + 1);\n            return;\n        }\n    };\n    /**\n     * stop sending events\n     */\n    AnalyticsClass.prototype.disable = function () {\n        this._disabled = true;\n    };\n    /**\n     * start sending events\n     */\n    AnalyticsClass.prototype.enable = function () {\n        this._disabled = false;\n    };\n    /**\n     * Record Session start\n     * @param [provider] - name of the provider.\n     * @return - A promise which resolves if buffer doesn't overflow\n     */\n    AnalyticsClass.prototype.startSession = function (provider) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params;\n            return __generator(this, function (_a) {\n                params = { event: { name: '_session.start' }, provider: provider };\n                return [2 /*return*/, this._sendEvent(params)];\n            });\n        });\n    };\n    /**\n     * Record Session stop\n     * @param [provider] - name of the provider.\n     * @return - A promise which resolves if buffer doesn't overflow\n     */\n    AnalyticsClass.prototype.stopSession = function (provider) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params;\n            return __generator(this, function (_a) {\n                params = { event: { name: '_session.stop' }, provider: provider };\n                return [2 /*return*/, this._sendEvent(params)];\n            });\n        });\n    };\n    AnalyticsClass.prototype.record = function (event, providerOrAttributes, metrics) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params;\n            return __generator(this, function (_a) {\n                params = null;\n                // this is just for compatibility, going to be deprecated\n                if (typeof event === 'string') {\n                    params = {\n                        event: {\n                            name: event,\n                            attributes: providerOrAttributes,\n                            metrics: metrics,\n                        },\n                        provider: 'AWSPinpoint',\n                    };\n                }\n                else {\n                    params = { event: event, provider: providerOrAttributes };\n                }\n                return [2 /*return*/, this._sendEvent(params)];\n            });\n        });\n    };\n    AnalyticsClass.prototype.updateEndpoint = function (attrs, provider) {\n        return __awaiter(this, void 0, void 0, function () {\n            var event;\n            return __generator(this, function (_a) {\n                event = __assign(__assign({}, attrs), { name: '_update_endpoint' });\n                return [2 /*return*/, this.record(event, provider)];\n            });\n        });\n    };\n    AnalyticsClass.prototype._sendEvent = function (params) {\n        var _this = this;\n        if (this._disabled) {\n            logger.debug('Analytics has been disabled');\n            return Promise.resolve();\n        }\n        var provider = params.provider ? params.provider : 'AWSPinpoint';\n        return new Promise(function (resolve, reject) {\n            _this._pluggables.forEach(function (pluggable) {\n                if (pluggable.getProviderName() === provider) {\n                    pluggable.record(params, { resolve: resolve, reject: reject });\n                }\n            });\n        });\n    };\n    AnalyticsClass.prototype.autoTrack = function (trackerType, opts) {\n        if (!trackers[trackerType]) {\n            logger.debug('invalid tracker type');\n            return;\n        }\n        // to sync up two different configuration ways of auto session tracking\n        if (trackerType === 'session') {\n            this._config['autoSessionRecord'] = opts['enable'];\n        }\n        var tracker = this._trackers[trackerType];\n        if (!tracker) {\n            this._trackers[trackerType] = new trackers[trackerType](this.record, opts);\n        }\n        else {\n            tracker.configure(opts);\n        }\n    };\n    return AnalyticsClass;\n}());\nexport { AnalyticsClass };\nvar endpointUpdated = false;\nvar authConfigured = false;\nvar analyticsConfigured = false;\nvar listener = function (capsule) {\n    var channel = capsule.channel, payload = capsule.payload;\n    logger.debug('on hub capsule ' + channel, payload);\n    switch (channel) {\n        case 'auth':\n            authEvent(payload);\n            break;\n        case 'storage':\n            storageEvent(payload);\n            break;\n        case 'analytics':\n            analyticsEvent(payload);\n            break;\n        default:\n            break;\n    }\n};\nvar storageEvent = function (payload) {\n    var _a = payload.data, attrs = _a.attrs, metrics = _a.metrics;\n    if (!attrs)\n        return;\n    if (analyticsConfigured) {\n        _instance\n            .record({\n            name: 'Storage',\n            attributes: attrs,\n            metrics: metrics,\n        })\n            .catch(function (e) {\n            logger.debug('Failed to send the storage event automatically', e);\n        });\n    }\n};\nvar authEvent = function (payload) {\n    var event = payload.event;\n    if (!event) {\n        return;\n    }\n    var recordAuthEvent = function (eventName) { return __awaiter(void 0, void 0, void 0, function () {\n        var err_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!(authConfigured && analyticsConfigured)) return [3 /*break*/, 4];\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, _instance.record({ name: \"_userauth.\" + eventName })];\n                case 2: return [2 /*return*/, _a.sent()];\n                case 3:\n                    err_1 = _a.sent();\n                    logger.debug(\"Failed to send the \" + eventName + \" event automatically\", err_1);\n                    return [3 /*break*/, 4];\n                case 4: return [2 /*return*/];\n            }\n        });\n    }); };\n    switch (event) {\n        case 'signIn':\n            return recordAuthEvent('sign_in');\n        case 'signUp':\n            return recordAuthEvent('sign_up');\n        case 'signOut':\n            return recordAuthEvent('sign_out');\n        case 'signIn_failure':\n            return recordAuthEvent('auth_fail');\n        case 'configured':\n            authConfigured = true;\n            if (authConfigured && analyticsConfigured) {\n                sendEvents();\n            }\n            break;\n    }\n};\nvar analyticsEvent = function (payload) {\n    var event = payload.event;\n    if (!event)\n        return;\n    switch (event) {\n        case 'pinpointProvider_configured':\n            analyticsConfigured = true;\n            if (authConfigured && analyticsConfigured) {\n                sendEvents();\n            }\n            break;\n    }\n};\nvar sendEvents = function () {\n    var config = _instance.configure();\n    if (!endpointUpdated && config['autoSessionRecord']) {\n        _instance.updateEndpoint({ immediate: true }).catch(function (e) {\n            logger.debug('Failed to update the endpoint', e);\n        });\n        endpointUpdated = true;\n    }\n    _instance.autoTrack('session', {\n        enable: config['autoSessionRecord'],\n    });\n};\nexport var Analytics = new AnalyticsClass();\nAmplify.register(Analytics);\n//# sourceMappingURL=Analytics.js.map"]},"metadata":{},"sourceType":"module"}