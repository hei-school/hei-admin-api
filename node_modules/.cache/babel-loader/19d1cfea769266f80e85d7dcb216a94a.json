{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@mui/material';\nimport { useReferenceOneFieldController, useRecordContext, ResourceContextProvider, useCreatePath, useTranslate } from 'ra-core';\nimport { fieldPropTypes } from './types';\nimport { ReferenceFieldView } from './ReferenceField';\n/**\n * Render the related record in a one-to-one relationship\n *\n * Expects a single field as child\n *\n * @example // display the bio of the current author\n * <ReferenceOneField reference=\"bios\" target=\"author_id\">\n *     <TextField source=\"body\" />\n * </ReferenceOneField>\n */\nexport var ReferenceOneField = function (props) {\n  var children = props.children,\n    reference = props.reference,\n    source = props.source,\n    target = props.target,\n    emptyText = props.emptyText,\n    sort = props.sort,\n    filter = props.filter,\n    _a = props.link,\n    link = _a === void 0 ? false : _a;\n  var record = useRecordContext(props);\n  var createPath = useCreatePath();\n  var translate = useTranslate();\n  var _b = useReferenceOneFieldController({\n      record: record,\n      reference: reference,\n      source: source,\n      target: target,\n      sort: sort,\n      filter: filter\n    }),\n    isLoading = _b.isLoading,\n    isFetching = _b.isFetching,\n    referenceRecord = _b.referenceRecord,\n    error = _b.error,\n    refetch = _b.refetch;\n  var resourceLinkPath = link === false ? false : createPath({\n    resource: reference,\n    id: referenceRecord === null || referenceRecord === void 0 ? void 0 : referenceRecord.id,\n    type: typeof link === 'function' ? link(record, reference) : link\n  });\n  return !record || !isLoading && referenceRecord == null ? emptyText ? React.createElement(Typography, {\n    component: \"span\",\n    variant: \"body2\"\n  }, emptyText && translate(emptyText, {\n    _: emptyText\n  })) : null : React.createElement(ResourceContextProvider, {\n    value: reference\n  }, React.createElement(ReferenceFieldView, {\n    isLoading: isLoading,\n    isFetching: isFetching,\n    referenceRecord: referenceRecord,\n    resourceLinkPath: resourceLinkPath,\n    reference: reference,\n    refetch: refetch,\n    error: error\n  }, children));\n};\nReferenceOneField.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  label: fieldPropTypes.label,\n  record: PropTypes.any,\n  reference: PropTypes.string.isRequired,\n  source: PropTypes.string.isRequired,\n  target: PropTypes.string.isRequired\n};\nReferenceOneField.defaultProps = {\n  source: 'id'\n};","map":{"version":3,"sources":["../../../src/field/ReferenceOneField.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@mui/material';\nimport { useReferenceOneFieldController, useRecordContext, ResourceContextProvider, useCreatePath, useTranslate, } from 'ra-core';\nimport { fieldPropTypes } from './types';\nimport { ReferenceFieldView } from './ReferenceField';\n/**\n * Render the related record in a one-to-one relationship\n *\n * Expects a single field as child\n *\n * @example // display the bio of the current author\n * <ReferenceOneField reference=\"bios\" target=\"author_id\">\n *     <TextField source=\"body\" />\n * </ReferenceOneField>\n */\nexport var ReferenceOneField = function (props) {\n    var children = props.children, reference = props.reference, source = props.source, target = props.target, emptyText = props.emptyText, sort = props.sort, filter = props.filter, _a = props.link, link = _a === void 0 ? false : _a;\n    var record = useRecordContext(props);\n    var createPath = useCreatePath();\n    var translate = useTranslate();\n    var _b = useReferenceOneFieldController({\n        record: record,\n        reference: reference,\n        source: source,\n        target: target,\n        sort: sort,\n        filter: filter,\n    }), isLoading = _b.isLoading, isFetching = _b.isFetching, referenceRecord = _b.referenceRecord, error = _b.error, refetch = _b.refetch;\n    var resourceLinkPath = link === false\n        ? false\n        : createPath({\n            resource: reference,\n            id: referenceRecord === null || referenceRecord === void 0 ? void 0 : referenceRecord.id,\n            type: typeof link === 'function'\n                ? link(record, reference)\n                : link,\n        });\n    return !record || (!isLoading && referenceRecord == null) ? (emptyText ? (React.createElement(Typography, { component: \"span\", variant: \"body2\" }, emptyText && translate(emptyText, { _: emptyText }))) : null) : (React.createElement(ResourceContextProvider, { value: reference },\n        React.createElement(ReferenceFieldView, { isLoading: isLoading, isFetching: isFetching, referenceRecord: referenceRecord, resourceLinkPath: resourceLinkPath, reference: reference, refetch: refetch, error: error }, children)));\n};\nReferenceOneField.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    label: fieldPropTypes.label,\n    record: PropTypes.any,\n    reference: PropTypes.string.isRequired,\n    source: PropTypes.string.isRequired,\n    target: PropTypes.string.isRequired,\n};\nReferenceOneField.defaultProps = {\n    source: 'id',\n};\n//# sourceMappingURL=ReferenceOneField.js.map"]},"metadata":{},"sourceType":"module"}