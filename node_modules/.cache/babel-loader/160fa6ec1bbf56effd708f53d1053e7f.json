{"ast":null,"code":"import { useStore } from '../store/useStore';\nimport { usePreferenceKey } from './PreferenceKeyContext';\n/**\n * Get a preference value from the store\n *\n * Relies on the store, using a key namespaced with the preference key from the PreferenceKeyContext\n * @example\n *\n * // when used inside a PreferenceKeyContext of value 'my-app'\n * const [theme, setTheme] = usePreference('theme', 'light');\n * // this is equivalent to\n * const [theme, setTheme] = useStore('my-app.theme', 'light');\n */\nexport var usePreference = function (key, defaultValue) {\n  var preferenceKey = usePreferenceKey();\n  return useStore(preferenceKey && key ? \"\".concat(preferenceKey, \".\").concat(key) : preferenceKey !== null && preferenceKey !== void 0 ? preferenceKey : key, defaultValue);\n};","map":{"version":3,"sources":["../../../src/preferences/usePreference.ts"],"names":[],"mappings":"AAAA,SAAS,QAAQ,QAAQ,mBAAmB;AAC5C,SAAS,gBAAgB,QAAQ,wBAAwB;AAEzD;;;;;;;;;;AAUG;AACH,OAAO,IAAM,aAAa,GAAG,UAAU,GAAY,EAAE,YAAgB,EAAA;EACjE,IAAM,aAAa,GAAG,gBAAgB,EAAE;EACxC,OAAO,QAAQ,CACX,aAAa,IAAI,GAAG,GAAG,EAAA,CAAA,MAAA,CAAG,aAAa,EAAA,GAAA,CAAA,CAAA,MAAA,CAAI,GAAG,CAAE,GAAG,aAAa,KAAA,IAAA,IAAb,aAAa,KAAA,KAAA,CAAA,GAAb,aAAa,GAAI,GAAG,EACvE,YAAY,CACf;AACL,CAAC","sourceRoot":"","sourcesContent":["import { useStore } from '../store/useStore';\nimport { usePreferenceKey } from './PreferenceKeyContext';\n/**\n * Get a preference value from the store\n *\n * Relies on the store, using a key namespaced with the preference key from the PreferenceKeyContext\n * @example\n *\n * // when used inside a PreferenceKeyContext of value 'my-app'\n * const [theme, setTheme] = usePreference('theme', 'light');\n * // this is equivalent to\n * const [theme, setTheme] = useStore('my-app.theme', 'light');\n */\nexport var usePreference = function (key, defaultValue) {\n    var preferenceKey = usePreferenceKey();\n    return useStore(preferenceKey && key ? \"\".concat(preferenceKey, \".\").concat(key) : preferenceKey !== null && preferenceKey !== void 0 ? preferenceKey : key, defaultValue);\n};\n//# sourceMappingURL=usePreference.js.map"]},"metadata":{},"sourceType":"module"}