{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { normalizeProvider } from \"@aws-sdk/util-middleware\";\nimport { getEndpointFromRegion } from \"./utils/getEndpointFromRegion\";\nexport var resolveEndpointsConfig = function (input) {\n  var _a;\n  var useDualstackEndpoint = normalizeProvider(input.useDualstackEndpoint);\n  var endpoint = input.endpoint,\n    useFipsEndpoint = input.useFipsEndpoint,\n    urlParser = input.urlParser;\n  return __assign(__assign({}, input), {\n    tls: (_a = input.tls) !== null && _a !== void 0 ? _a : true,\n    endpoint: endpoint ? normalizeProvider(typeof endpoint === \"string\" ? urlParser(endpoint) : endpoint) : function () {\n      return getEndpointFromRegion(__assign(__assign({}, input), {\n        useDualstackEndpoint: useDualstackEndpoint,\n        useFipsEndpoint: useFipsEndpoint\n      }));\n    },\n    isCustomEndpoint: !!endpoint,\n    useDualstackEndpoint: useDualstackEndpoint\n  });\n};","map":{"version":3,"names":["__assign","normalizeProvider","getEndpointFromRegion","resolveEndpointsConfig","input","_a","useDualstackEndpoint","endpoint","useFipsEndpoint","urlParser","tls","isCustomEndpoint"],"sources":["F:/project/front-end/hei-admin-ui/node_modules/@aws-sdk/client-location/node_modules/@aws-sdk/config-resolver/dist-es/endpointsConfig/resolveEndpointsConfig.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { normalizeProvider } from \"@aws-sdk/util-middleware\";\nimport { getEndpointFromRegion } from \"./utils/getEndpointFromRegion\";\nexport var resolveEndpointsConfig = function (input) {\n    var _a;\n    var useDualstackEndpoint = normalizeProvider(input.useDualstackEndpoint);\n    var endpoint = input.endpoint, useFipsEndpoint = input.useFipsEndpoint, urlParser = input.urlParser;\n    return __assign(__assign({}, input), { tls: (_a = input.tls) !== null && _a !== void 0 ? _a : true, endpoint: endpoint\n            ? normalizeProvider(typeof endpoint === \"string\" ? urlParser(endpoint) : endpoint)\n            : function () { return getEndpointFromRegion(__assign(__assign({}, input), { useDualstackEndpoint: useDualstackEndpoint, useFipsEndpoint: useFipsEndpoint })); }, isCustomEndpoint: !!endpoint, useDualstackEndpoint: useDualstackEndpoint });\n};\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,iBAAiB,QAAQ,0BAA0B;AAC5D,SAASC,qBAAqB,QAAQ,+BAA+B;AACrE,OAAO,IAAIC,sBAAsB,GAAG,UAAUC,KAAK,EAAE;EACjD,IAAIC,EAAE;EACN,IAAIC,oBAAoB,GAAGL,iBAAiB,CAACG,KAAK,CAACE,oBAAoB,CAAC;EACxE,IAAIC,QAAQ,GAAGH,KAAK,CAACG,QAAQ;IAAEC,eAAe,GAAGJ,KAAK,CAACI,eAAe;IAAEC,SAAS,GAAGL,KAAK,CAACK,SAAS;EACnG,OAAOT,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEI,KAAK,CAAC,EAAE;IAAEM,GAAG,EAAE,CAACL,EAAE,GAAGD,KAAK,CAACM,GAAG,MAAM,IAAI,IAAIL,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,IAAI;IAAEE,QAAQ,EAAEA,QAAQ,GAC5GN,iBAAiB,CAAC,OAAOM,QAAQ,KAAK,QAAQ,GAAGE,SAAS,CAACF,QAAQ,CAAC,GAAGA,QAAQ,CAAC,GAChF,YAAY;MAAE,OAAOL,qBAAqB,CAACF,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEI,KAAK,CAAC,EAAE;QAAEE,oBAAoB,EAAEA,oBAAoB;QAAEE,eAAe,EAAEA;MAAgB,CAAC,CAAC,CAAC;IAAE,CAAC;IAAEG,gBAAgB,EAAE,CAAC,CAACJ,QAAQ;IAAED,oBAAoB,EAAEA;EAAqB,CAAC,CAAC;AACzP,CAAC"},"metadata":{},"sourceType":"module"}