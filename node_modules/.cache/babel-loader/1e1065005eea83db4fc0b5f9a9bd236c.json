{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nexport function createRequest(client, command) {\n  return __awaiter(this, void 0, void 0, function () {\n    var interceptMiddleware, clientStack, handler;\n    var _this = this;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          interceptMiddleware = function (next) {\n            return function (args) {\n              return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                  return [2 /*return*/, {\n                    output: {\n                      request: args.request\n                    },\n                    response: undefined\n                  }];\n                });\n              });\n            };\n          };\n          clientStack = client.middlewareStack.clone();\n          // @ts-ignore: add middleware to the last of 'build' step\n          clientStack.add(interceptMiddleware, {\n            step: \"build\",\n            priority: \"low\"\n          });\n          handler = command.resolveMiddleware(clientStack, client.config, undefined);\n          return [4 /*yield*/, handler(command).then(function (output) {\n            return output.output.request;\n          })];\n        case 1:\n          // @ts-ignore\n          return [2 /*return*/, _a.sent()];\n      }\n    });\n  });\n}","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":";AAGA,OAAM,SAAgB,aAAa,CAKjC,MAAyD,EACzD,OAA6E,EAAA;;;;;;;UAGvE,mBAAmB,GAA2C,UAAC,IAAI,EAAA;YAAK,OAAA,UAAO,IAAI,EAAA;cAAA,OAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;kBACvF,OAAA,CAAA,CAAA,CAAA,YAAO;oBAAE,MAAM,EAAE;sBAAE,OAAO,EAAE,IAAI,CAAC;oBAAO,CAAS;oBAAE,QAAQ,EAAE;kBAAS,CAAE,CAAA;;;aACzE;UAF6E,CAE7E;UACK,WAAW,GAAG,MAAM,CAAC,eAAe,CAAC,KAAK,EAAE;UAElD;UACA,WAAW,CAAC,GAAG,CAAC,mBAAmB,EAAE;YACnC,IAAI,EAAE,OAAO;YACb,QAAQ,EAAE;WACX,CAAC;UAEI,OAAO,GAAG,OAAO,CAAC,iBAAiB,CAAC,WAAW,EAAE,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC;UAGzE,OAAA,CAAA,CAAA,CAAA,WAAM,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM,EAAA;YAAK,OAAA,MAAM,CAAC,MAAM,CAAC,OAAO;UAArB,CAAqB,CAAC,CAAA;;UADrE;UACA,OAAA,CAAA,CAAA,CAAA,YAAO,EAAA,CAAA,IAAA,EAA8D,CAAA;MAAC;;;AACvE","sourcesContent":["import { Client, Command } from \"@aws-sdk/smithy-client\";\nimport { BuildMiddleware, HttpRequest, MetadataBearer } from \"@aws-sdk/types\";\n\nexport async function createRequest<\n  InputTypesUnion extends object,\n  InputType extends InputTypesUnion,\n  OutputType extends MetadataBearer = MetadataBearer\n>(\n  client: Client<any, InputTypesUnion, MetadataBearer, any>,\n  command: Command<InputType, OutputType, any, InputTypesUnion, MetadataBearer>\n): Promise<HttpRequest> {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const interceptMiddleware: BuildMiddleware<InputType, OutputType> = (next) => async (args) => {\n    return { output: { request: args.request } as any, response: undefined };\n  };\n  const clientStack = client.middlewareStack.clone();\n\n  // @ts-ignore: add middleware to the last of 'build' step\n  clientStack.add(interceptMiddleware, {\n    step: \"build\",\n    priority: \"low\",\n  });\n\n  const handler = command.resolveMiddleware(clientStack, client.config, undefined);\n\n  // @ts-ignore\n  return await handler(command).then((output) => output.output.request);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}