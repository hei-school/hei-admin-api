{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar dataMemory = {};\n/** @class */\nvar MemoryStorage = /** @class */function () {\n  function MemoryStorage() {}\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n  MemoryStorage.setItem = function (key, value) {\n    dataMemory[key] = value;\n    return dataMemory[key];\n  };\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n  MemoryStorage.getItem = function (key) {\n    return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n  };\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n  MemoryStorage.removeItem = function (key) {\n    return delete dataMemory[key];\n  };\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n  MemoryStorage.clear = function () {\n    dataMemory = {};\n    return dataMemory;\n  };\n  return MemoryStorage;\n}();\nexport { MemoryStorage };\nvar StorageHelper = /** @class */function () {\n  /**\n   * This is used to get a storage object\n   * @returns {object} the storage\n   */\n  function StorageHelper() {\n    try {\n      this.storageWindow = window.localStorage;\n      this.storageWindow.setItem('aws.amplify.test-ls', 1);\n      this.storageWindow.removeItem('aws.amplify.test-ls');\n    } catch (exception) {\n      this.storageWindow = MemoryStorage;\n    }\n  }\n  /**\n   * This is used to return the storage\n   * @returns {object} the storage\n   */\n  StorageHelper.prototype.getStorage = function () {\n    return this.storageWindow;\n  };\n  return StorageHelper;\n}();\nexport { StorageHelper };\n/**\n * @deprecated use named import\n */\nexport default StorageHelper;","map":{"version":3,"sources":["../../src/StorageHelper/index.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;AAWG;AAEH,IAAI,UAAU,GAAG,CAAA,CAAE;AAEnB;AACA,IAAA,aAAA,GAAA,aAAA,YAAA;EAAA,SAAA,aAAA,GAAA,CAyCA;EAxCC;;;;;AAKG;EACI,aAAA,CAAA,OAAO,GAAd,UAAe,GAAW,EAAE,KAAU,EAAA;IACrC,UAAU,CAAC,GAAG,CAAC,GAAG,KAAK;IACvB,OAAO,UAAU,CAAC,GAAG,CAAC;EACvB,CAAC;EAED;;;;;AAKG;EACI,aAAA,CAAA,OAAO,GAAd,UAAe,GAAW,EAAA;IACzB,OAAO,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,GACzD,UAAU,CAAC,GAAG,CAAC,GACf,SAAS;EACb,CAAC;EAED;;;;AAIG;EACI,aAAA,CAAA,UAAU,GAAjB,UAAkB,GAAW,EAAA;IAC5B,OAAO,OAAO,UAAU,CAAC,GAAG,CAAC;EAC9B,CAAC;EAED;;;AAGG;EACI,aAAA,CAAA,KAAK,GAAZ,YAAA;IACC,UAAU,GAAG,CAAA,CAAE;IACf,OAAO,UAAU;EAClB,CAAC;EACF,OAAA,aAAC;AAAD,CAAC,EAAA;;AAED,IAAA,aAAA,GAAA,aAAA,YAAA;EAEC;;;AAGG;EACH,SAAA,aAAA,GAAA;IACC,IAAI;MACH,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,YAAY;MACxC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC,CAAC;MACpD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,qBAAqB,CAAC;KACpD,CAAC,OAAO,SAAS,EAAE;MACnB,IAAI,CAAC,aAAa,GAAG,aAAa;IAClC;EACF;EAEA;;;AAGG;EACH,aAAA,CAAA,SAAA,CAAA,UAAU,GAAV,YAAA;IACC,OAAO,IAAI,CAAC,aAAa;EAC1B,CAAC;EACF,OAAA,aAAC;AAAD,CAAC,EAAA;;AAED;;AAEG;AACH,eAAe,aAAa","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar dataMemory = {};\n/** @class */\nvar MemoryStorage = /** @class */ (function () {\n    function MemoryStorage() {\n    }\n    /**\n     * This is used to set a specific item in storage\n     * @param {string} key - the key for the item\n     * @param {object} value - the value\n     * @returns {string} value that was set\n     */\n    MemoryStorage.setItem = function (key, value) {\n        dataMemory[key] = value;\n        return dataMemory[key];\n    };\n    /**\n     * This is used to get a specific key from storage\n     * @param {string} key - the key for the item\n     * This is used to clear the storage\n     * @returns {string} the data item\n     */\n    MemoryStorage.getItem = function (key) {\n        return Object.prototype.hasOwnProperty.call(dataMemory, key)\n            ? dataMemory[key]\n            : undefined;\n    };\n    /**\n     * This is used to remove an item from storage\n     * @param {string} key - the key being set\n     * @returns {string} value - value that was deleted\n     */\n    MemoryStorage.removeItem = function (key) {\n        return delete dataMemory[key];\n    };\n    /**\n     * This is used to clear the storage\n     * @returns {string} nothing\n     */\n    MemoryStorage.clear = function () {\n        dataMemory = {};\n        return dataMemory;\n    };\n    return MemoryStorage;\n}());\nexport { MemoryStorage };\nvar StorageHelper = /** @class */ (function () {\n    /**\n     * This is used to get a storage object\n     * @returns {object} the storage\n     */\n    function StorageHelper() {\n        try {\n            this.storageWindow = window.localStorage;\n            this.storageWindow.setItem('aws.amplify.test-ls', 1);\n            this.storageWindow.removeItem('aws.amplify.test-ls');\n        }\n        catch (exception) {\n            this.storageWindow = MemoryStorage;\n        }\n    }\n    /**\n     * This is used to return the storage\n     * @returns {object} the storage\n     */\n    StorageHelper.prototype.getStorage = function () {\n        return this.storageWindow;\n    };\n    return StorageHelper;\n}());\nexport { StorageHelper };\n/**\n * @deprecated use named import\n */\nexport default StorageHelper;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}