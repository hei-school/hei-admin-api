{"ast":null,"code":"/**\n * Builds a proper UTC HttpDate timestamp from a Date object\n * since not all environments will have this as the expected\n * format.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString\n * > Prior to ECMAScript 2018, the format of the return value\n * > varied according to the platform. The most common return\n * > value was an RFC-1123 formatted date stamp, which is a\n * > slightly updated version of RFC-822 date stamps.\n */\n// Build indexes outside so we allocate them once.\nvar days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n// prettier-ignore\nvar months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nexport function dateToUtcString(date) {\n  var year = date.getUTCFullYear();\n  var month = date.getUTCMonth();\n  var dayOfWeek = date.getUTCDay();\n  var dayOfMonthInt = date.getUTCDate();\n  var hoursInt = date.getUTCHours();\n  var minutesInt = date.getUTCMinutes();\n  var secondsInt = date.getUTCSeconds();\n  // Build 0 prefixed strings for contents that need to be\n  // two digits and where we get an integer back.\n  var dayOfMonthString = dayOfMonthInt < 10 ? \"0\" + dayOfMonthInt : \"\" + dayOfMonthInt;\n  var hoursString = hoursInt < 10 ? \"0\" + hoursInt : \"\" + hoursInt;\n  var minutesString = minutesInt < 10 ? \"0\" + minutesInt : \"\" + minutesInt;\n  var secondsString = secondsInt < 10 ? \"0\" + secondsInt : \"\" + secondsInt;\n  return days[dayOfWeek] + \", \" + dayOfMonthString + \" \" + months[month] + \" \" + year + \" \" + hoursString + \":\" + minutesString + \":\" + secondsString + \" GMT\";\n}","map":{"version":3,"sources":["../../src/date-utils.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;AAUG;AAEH;AACA,IAAM,IAAI,GAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;AAC7E;AACA,IAAM,MAAM,GAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;AAElH,OAAM,SAAU,eAAe,CAAC,IAAU,EAAA;EACxC,IAAM,IAAI,GAAG,IAAI,CAAC,cAAc,EAAE;EAClC,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE;EAChC,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE;EAClC,IAAM,aAAa,GAAG,IAAI,CAAC,UAAU,EAAE;EACvC,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE;EACnC,IAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE;EACvC,IAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE;EAEvC;EACA;EACA,IAAM,gBAAgB,GAAG,aAAa,GAAG,EAAE,GAAG,GAAA,GAAI,aAAe,GAAG,EAAA,GAAG,aAAe;EACtF,IAAM,WAAW,GAAG,QAAQ,GAAG,EAAE,GAAG,GAAA,GAAI,QAAU,GAAG,EAAA,GAAG,QAAU;EAClE,IAAM,aAAa,GAAG,UAAU,GAAG,EAAE,GAAG,GAAA,GAAI,UAAY,GAAG,EAAA,GAAG,UAAY;EAC1E,IAAM,aAAa,GAAG,UAAU,GAAG,EAAE,GAAG,GAAA,GAAI,UAAY,GAAG,EAAA,GAAG,UAAY;EAE1E,OAAU,IAAI,CAAC,SAAS,CAAC,GAAA,IAAA,GAAK,gBAAgB,GAAA,GAAA,GAAI,MAAM,CAAC,KAAK,CAAC,GAAA,GAAA,GAAI,IAAI,GAAA,GAAA,GAAI,WAAW,GAAA,GAAA,GAAI,aAAa,GAAA,GAAA,GAAI,aAAa,GAAA,MAAM;AAChI","sourcesContent":["/**\n * Builds a proper UTC HttpDate timestamp from a Date object\n * since not all environments will have this as the expected\n * format.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString\n * > Prior to ECMAScript 2018, the format of the return value\n * > varied according to the platform. The most common return\n * > value was an RFC-1123 formatted date stamp, which is a\n * > slightly updated version of RFC-822 date stamps.\n */\n\n// Build indexes outside so we allocate them once.\nconst days: Array<String> = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n// prettier-ignore\nconst months: Array<String> = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nexport function dateToUtcString(date: Date): string {\n  const year = date.getUTCFullYear();\n  const month = date.getUTCMonth();\n  const dayOfWeek = date.getUTCDay();\n  const dayOfMonthInt = date.getUTCDate();\n  const hoursInt = date.getUTCHours();\n  const minutesInt = date.getUTCMinutes();\n  const secondsInt = date.getUTCSeconds();\n\n  // Build 0 prefixed strings for contents that need to be\n  // two digits and where we get an integer back.\n  const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n  const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n  const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n  const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n\n  return `${days[dayOfWeek]}, ${dayOfMonthString} ${months[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}