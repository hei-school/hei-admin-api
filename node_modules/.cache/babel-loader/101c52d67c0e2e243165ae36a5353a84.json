{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nexport var getEndpointFromRegion = function (input) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, tls, region, dnsHostRegex, useDualstackEndpoint, useFipsEndpoint, hostname;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = input.tls, tls = _a === void 0 ? true : _a;\n          return [4, input.region()];\n        case 1:\n          region = _c.sent();\n          dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n          if (!dnsHostRegex.test(region)) {\n            throw new Error(\"Invalid region in client config\");\n          }\n          return [4, input.useDualstackEndpoint()];\n        case 2:\n          useDualstackEndpoint = _c.sent();\n          return [4, input.useFipsEndpoint()];\n        case 3:\n          useFipsEndpoint = _c.sent();\n          return [4, input.regionInfoProvider(region, {\n            useDualstackEndpoint: useDualstackEndpoint,\n            useFipsEndpoint: useFipsEndpoint\n          })];\n        case 4:\n          hostname = ((_b = _c.sent()) !== null && _b !== void 0 ? _b : {}).hostname;\n          if (!hostname) {\n            throw new Error(\"Cannot resolve hostname from client config\");\n          }\n          return [2, input.urlParser(\"\".concat(tls ? \"https:\" : \"http:\", \"//\").concat(hostname))];\n      }\n    });\n  });\n};","map":{"version":3,"names":["__awaiter","__generator","getEndpointFromRegion","input","_a","tls","region","dnsHostRegex","useDualstackEndpoint","useFipsEndpoint","hostname","_b","_c","label","sent","RegExp","test","Error","regionInfoProvider","urlParser","concat"],"sources":["F:/project/front-end/hei-admin-ui/node_modules/@aws-sdk/client-lex-runtime-v2/node_modules/@aws-sdk/config-resolver/dist-es/endpointsConfig/utils/getEndpointFromRegion.js"],"sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nexport var getEndpointFromRegion = function (input) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, tls, region, dnsHostRegex, useDualstackEndpoint, useFipsEndpoint, hostname;\n    var _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _a = input.tls, tls = _a === void 0 ? true : _a;\n                return [4, input.region()];\n            case 1:\n                region = _c.sent();\n                dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n                if (!dnsHostRegex.test(region)) {\n                    throw new Error(\"Invalid region in client config\");\n                }\n                return [4, input.useDualstackEndpoint()];\n            case 2:\n                useDualstackEndpoint = _c.sent();\n                return [4, input.useFipsEndpoint()];\n            case 3:\n                useFipsEndpoint = _c.sent();\n                return [4, input.regionInfoProvider(region, { useDualstackEndpoint: useDualstackEndpoint, useFipsEndpoint: useFipsEndpoint })];\n            case 4:\n                hostname = ((_b = (_c.sent())) !== null && _b !== void 0 ? _b : {}).hostname;\n                if (!hostname) {\n                    throw new Error(\"Cannot resolve hostname from client config\");\n                }\n                return [2, input.urlParser(\"\".concat(tls ? \"https:\" : \"http:\", \"//\").concat(hostname))];\n        }\n    });\n}); };\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC9C,OAAO,IAAIC,qBAAqB,GAAG,UAAUC,KAAK,EAAE;EAAE,OAAOH,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;IACvG,IAAII,EAAE,EAAEC,GAAG,EAAEC,MAAM,EAAEC,YAAY,EAAEC,oBAAoB,EAAEC,eAAe,EAAEC,QAAQ;IAClF,IAAIC,EAAE;IACN,OAAOV,WAAW,CAAC,IAAI,EAAE,UAAUW,EAAE,EAAE;MACnC,QAAQA,EAAE,CAACC,KAAK;QACZ,KAAK,CAAC;UACFT,EAAE,GAAGD,KAAK,CAACE,GAAG,EAAEA,GAAG,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,EAAE;UAC/C,OAAO,CAAC,CAAC,EAAED,KAAK,CAACG,MAAM,EAAE,CAAC;QAC9B,KAAK,CAAC;UACFA,MAAM,GAAGM,EAAE,CAACE,IAAI,EAAE;UAClBP,YAAY,GAAG,IAAIQ,MAAM,CAAC,0DAA0D,CAAC;UACrF,IAAI,CAACR,YAAY,CAACS,IAAI,CAACV,MAAM,CAAC,EAAE;YAC5B,MAAM,IAAIW,KAAK,CAAC,iCAAiC,CAAC;UACtD;UACA,OAAO,CAAC,CAAC,EAAEd,KAAK,CAACK,oBAAoB,EAAE,CAAC;QAC5C,KAAK,CAAC;UACFA,oBAAoB,GAAGI,EAAE,CAACE,IAAI,EAAE;UAChC,OAAO,CAAC,CAAC,EAAEX,KAAK,CAACM,eAAe,EAAE,CAAC;QACvC,KAAK,CAAC;UACFA,eAAe,GAAGG,EAAE,CAACE,IAAI,EAAE;UAC3B,OAAO,CAAC,CAAC,EAAEX,KAAK,CAACe,kBAAkB,CAACZ,MAAM,EAAE;YAAEE,oBAAoB,EAAEA,oBAAoB;YAAEC,eAAe,EAAEA;UAAgB,CAAC,CAAC,CAAC;QAClI,KAAK,CAAC;UACFC,QAAQ,GAAG,CAAC,CAACC,EAAE,GAAIC,EAAE,CAACE,IAAI,EAAG,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,CAAC,EAAED,QAAQ;UAC5E,IAAI,CAACA,QAAQ,EAAE;YACX,MAAM,IAAIO,KAAK,CAAC,4CAA4C,CAAC;UACjE;UACA,OAAO,CAAC,CAAC,EAAEd,KAAK,CAACgB,SAAS,CAAC,EAAE,CAACC,MAAM,CAACf,GAAG,GAAG,QAAQ,GAAG,OAAO,EAAE,IAAI,CAAC,CAACe,MAAM,CAACV,QAAQ,CAAC,CAAC,CAAC;MAAC;IAEpG,CAAC,CAAC;EACN,CAAC,CAAC;AAAE,CAAC"},"metadata":{},"sourceType":"module"}