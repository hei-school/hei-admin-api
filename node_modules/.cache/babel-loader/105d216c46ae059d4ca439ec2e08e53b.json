{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport * as React from 'react';\nimport { cloneElement, useCallback } from 'react';\nimport clsx from 'clsx';\nimport { ListContextProvider, useChoicesContext, useInput } from 'ra-core';\nimport { InputHelperText } from './InputHelperText';\nimport { Datagrid } from '../list/datagrid';\nimport { FilterButton, FilterForm } from '../list/filter';\nimport { FilterContext } from '../list/FilterContext';\nimport { Pagination as DefaultPagination } from '../list/pagination';\nvar defaultPagination = React.createElement(DefaultPagination, null);\n/**\n * WIP: This component is not yet ready to be used.\n *\n * An input for selecting items displayed in a datagrid\n *\n * @example\n * const membersFilters = [\n *     <TextInput label=\"Search\" source=\"q\" alwaysOn />,\n * ];\n * const TeamEdit = () => (\n *    <Edit>\n *        <SimpleForm>\n *            <TextInput source=\"name\" />\n *            <ReferenceArrayInput\n *                source=\"members\"\n *                reference=\"users\"\n *                filter={{ is_retired: false }}\n *                perPage={50}\n *                sort={{ field: 'lastName', order: 'ASC' }}\n *            >\n *                <DatagridInput\n *                    filters={membersFilters}\n *                >\n *                    <TextField source=\"firstName\" />\n *                    <TextField source=\"lastName\" />\n *                </DatagridInput>\n *            </ReferenceArrayInput>\n *        </SimpleForm>\n *    </Edit>\n * );\n */\nexport var DatagridInput = function (props) {\n  var _a;\n  var choices = props.choices,\n    className = props.className,\n    _b = props.pagination,\n    pagination = _b === void 0 ? defaultPagination : _b,\n    filters = props.filters,\n    sourceProp = props.source,\n    resourceProp = props.resource,\n    rest = __rest(props, [\"choices\", \"className\", \"pagination\", \"filters\", \"source\", \"resource\"]);\n  var _c = useChoicesContext({\n      choices: choices,\n      resource: resourceProp,\n      source: sourceProp\n    }),\n    allChoices = _c.allChoices,\n    availableChoices = _c.availableChoices,\n    selectedChoices = _c.selectedChoices,\n    fetchError = _c.error,\n    source = _c.source,\n    choicesContext = __rest(_c, [\"allChoices\", \"availableChoices\", \"selectedChoices\", \"error\", \"source\"]);\n  var _d = useInput(__assign(__assign(__assign({}, props), choicesContext), {\n      source: source\n    })),\n    field = _d.field,\n    fieldState = _d.fieldState,\n    formState = _d.formState;\n  var onSelect = useCallback(function (idsToAdd) {\n    field.onChange(idsToAdd);\n  }, [field]);\n  var onToggleItem = useCallback(function (id) {\n    if (field.value.includes(id)) {\n      field.onChange(field.value.filter(function (item) {\n        return item !== id;\n      }));\n    } else {\n      field.onChange(__spreadArray(__spreadArray([], field.value, true), [id], false));\n    }\n  }, [field]);\n  var onUnselectItems = useCallback(function () {\n    field.onChange([]);\n  }, [field]);\n  var listContext = React.useMemo(function () {\n    return __assign(__assign({}, choicesContext), {\n      data: availableChoices,\n      onSelect: onSelect,\n      onToggleItem: onToggleItem,\n      onUnselectItems: onUnselectItems,\n      selectedIds: field.value\n    });\n  }, [availableChoices, choicesContext, field, onSelect, onToggleItem, onUnselectItems]);\n  return React.createElement(\"div\", {\n    className: clsx('ra-input', \"ra-input-\".concat(source), className)\n  }, React.createElement(ListContextProvider, {\n    value: listContext\n  }, filters ? Array.isArray(filters) ? React.createElement(FilterContext.Provider, {\n    value: filters\n  }, React.createElement(React.Fragment, null, React.createElement(FilterForm, null), React.createElement(FilterButton, null))) : React.createElement(React.Fragment, null, cloneElement(filters, {\n    context: 'form'\n  }), cloneElement(filters, {\n    context: 'button'\n  })) : null, !fieldState.error && !fetchError && React.createElement(React.Fragment, null, React.createElement(Datagrid, __assign({}, rest)), pagination !== false && pagination), React.createElement(InputHelperText, {\n    touched: fieldState.isTouched || formState.isSubmitted || fetchError,\n    error: ((_a = fieldState.error) === null || _a === void 0 ? void 0 : _a.message) || (fetchError === null || fetchError === void 0 ? void 0 : fetchError.message)\n  })));\n};","map":{"version":3,"sources":["../../../src/input/DatagridInput.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,YAAY,EAA2B,WAAW,QAAQ,OAAO;AAC1E,OAAO,IAAI,MAAM,MAAM;AACvB,SAGI,mBAAmB,EACnB,iBAAiB,EACjB,QAAQ,QACL,SAAS;AAEhB,SAAS,eAAe,QAAQ,mBAAmB;AAEnD,SAAS,QAAQ,QAAuB,kBAAkB;AAC1D,SAAS,YAAY,EAAE,UAAU,QAAQ,gBAAgB;AACzD,SAAS,aAAa,QAAQ,uBAAuB;AACrD,SAAS,UAAU,IAAI,iBAAiB,QAAQ,oBAAoB;AAEpE,IAAM,iBAAiB,GAAG,KAAA,CAAA,aAAA,CAAC,iBAAiB,EAAA,IAAA,CAAG;AAE/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BG;AACH,OAAO,IAAM,aAAa,GAAG,UAAC,KAAyB,EAAA;;EAE/C,IAAA,OAAO,GAOP,KAAK,CAAA,OAPE;IACP,SAAS,GAMT,KAAK,CAAA,SANI;IACT,EAAA,GAKA,KAAK,CAAA,UALyB;IAA9B,UAAU,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,iBAAiB,GAAA,EAAA;IAC9B,OAAO,GAIP,KAAK,CAAA,OAJE;IACC,UAAU,GAGlB,KAAK,CAAA,MAHa;IACR,YAAY,GAEtB,KAAK,CAAA,QAFiB;IACnB,IAAI,GAAA,MAAA,CACP,KAAK,EARH,CAAA,SAAA,EAAA,WAAA,EAAA,YAAA,EAAA,SAAA,EAAA,QAAA,EAAA,UAAA,CAQL,CADU;EAGX,IAAM,EAAA,GAOF,iBAAiB,CAAC;MAClB,OAAO,EAAA,OAAA;MACP,QAAQ,EAAE,YAAY;MACtB,MAAM,EAAE;KACX,CAAC;IAVE,UAAU,GAAA,EAAA,CAAA,UAAA;IACV,gBAAgB,GAAA,EAAA,CAAA,gBAAA;IAChB,eAAe,GAAA,EAAA,CAAA,eAAA;IACR,UAAU,GAAA,EAAA,CAAA,KAAA;IACjB,MAAM,GAAA,EAAA,CAAA,MAAA;IACH,cAAc,GAAA,MAAA,CAAA,EAAA,EANf,CAAA,YAAA,EAAA,kBAAA,EAAA,iBAAA,EAAA,OAAA,EAAA,QAAA,CAOL,CAIC;EACI,IAAA,EAAA,GAAmC,QAAQ,CAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAC1C,KAAK,CAAA,EACL,cAAc,CAAA,EAAA;MACjB,MAAM,EAAA;IAAA,CAAA,CAAA,CACR;IAJM,KAAK,GAAA,EAAA,CAAA,KAAA;IAAE,UAAU,GAAA,EAAA,CAAA,UAAA;IAAE,SAAS,GAAA,EAAA,CAAA,SAIlC;EAEF,IAAM,QAAQ,GAAG,WAAW,CACxB,UAAC,QAAsB,EAAA;IACnB,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC;EAC5B,CAAC,EACD,CAAC,KAAK,CAAC,CACV;EAED,IAAM,YAAY,GAAG,WAAW,CAC5B,UAAC,EAAc,EAAA;IACX,IAAI,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;MAC1B,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,UAAA,IAAI,EAAA;QAAI,OAAA,IAAI,KAAK,EAAE;MAAX,CAAW,CAAC,CAAC;KAC1D,MAAM;MACH,KAAK,CAAC,QAAQ,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAK,KAAK,CAAC,KAAK,EAAA,IAAA,CAAA,EAAA,CAAE,EAAE,CAAA,EAAA,KAAA,CAAA,CAAE;IACvC;EACL,CAAC,EACD,CAAC,KAAK,CAAC,CACV;EAED,IAAM,eAAe,GAAG,WAAW,CAAC,YAAA;IAChC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC;EACtB,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;EAEX,IAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAC7B,YAAA;IAAM,OAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EACC,cAAc,CAAA,EAAA;MACjB,IAAI,EAAE,gBAAgB;MACtB,QAAQ,EAAA,QAAA;MACR,YAAY,EAAA,YAAA;MACZ,eAAe,EAAA,eAAA;MACf,WAAW,EAAE,KAAK,CAAC;IAAK,CAAA,CAAA;EANtB,CAOJ,EACF,CACI,gBAAgB,EAChB,cAAc,EACd,KAAK,EACL,QAAQ,EACR,YAAY,EACZ,eAAe,CAClB,CACJ;EACD,OACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,WAAA,CAAA,MAAA,CAAY,MAAM,CAAE,EAAE,SAAS;EAAC,CAAA,EAC7D,KAAA,CAAA,aAAA,CAAC,mBAAmB,EAAA;IAAC,KAAK,EAAE;EAAW,CAAA,EAClC,OAAO,GACJ,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAClB,KAAA,CAAA,aAAA,CAAC,aAAa,CAAC,QAAQ,EAAA;IAAC,KAAK,EAAE;EAAO,CAAA,EAClC,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACI,KAAA,CAAA,aAAA,CAAC,UAAU,EAAA,IAAA,CAAG,EACd,KAAA,CAAA,aAAA,CAAC,YAAY,EAAA,IAAA,CAAG,CACjB,CACkB,GAEzB,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACK,YAAY,CAAC,OAAO,EAAE;IACnB,OAAO,EAAE;GACZ,CAAC,EACD,YAAY,CAAC,OAAO,EAAE;IACnB,OAAO,EAAE;GACZ,CAAC,CAET,GACD,IAAI,EACP,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC,UAAU,IAC7B,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACI,KAAA,CAAA,aAAA,CAAC,QAAQ,EAAA,QAAA,CAAA,CAAA,CAAA,EAAK,IAAI,CAAA,CAAI,EACrB,UAAU,KAAK,KAAK,IAAI,UAAU,CAE1C,EACD,KAAA,CAAA,aAAA,CAAC,eAAe,EAAA;IACZ,OAAO,EACH,UAAU,CAAC,SAAS,IACpB,SAAS,CAAC,WAAW,IACrB,UAAU;IAEd,KAAK,EAAE,CAAA,CAAA,EAAA,GAAA,UAAU,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,MAAI,UAAU,KAAA,IAAA,IAAV,UAAU,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAV,UAAU,CAAE,OAAO;EAAA,CAAA,CACzD,CACgB,CACpB;AAEd,CAAC","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport * as React from 'react';\nimport { cloneElement, useCallback } from 'react';\nimport clsx from 'clsx';\nimport { ListContextProvider, useChoicesContext, useInput, } from 'ra-core';\nimport { InputHelperText } from './InputHelperText';\nimport { Datagrid } from '../list/datagrid';\nimport { FilterButton, FilterForm } from '../list/filter';\nimport { FilterContext } from '../list/FilterContext';\nimport { Pagination as DefaultPagination } from '../list/pagination';\nvar defaultPagination = React.createElement(DefaultPagination, null);\n/**\n * WIP: This component is not yet ready to be used.\n *\n * An input for selecting items displayed in a datagrid\n *\n * @example\n * const membersFilters = [\n *     <TextInput label=\"Search\" source=\"q\" alwaysOn />,\n * ];\n * const TeamEdit = () => (\n *    <Edit>\n *        <SimpleForm>\n *            <TextInput source=\"name\" />\n *            <ReferenceArrayInput\n *                source=\"members\"\n *                reference=\"users\"\n *                filter={{ is_retired: false }}\n *                perPage={50}\n *                sort={{ field: 'lastName', order: 'ASC' }}\n *            >\n *                <DatagridInput\n *                    filters={membersFilters}\n *                >\n *                    <TextField source=\"firstName\" />\n *                    <TextField source=\"lastName\" />\n *                </DatagridInput>\n *            </ReferenceArrayInput>\n *        </SimpleForm>\n *    </Edit>\n * );\n */\nexport var DatagridInput = function (props) {\n    var _a;\n    var choices = props.choices, className = props.className, _b = props.pagination, pagination = _b === void 0 ? defaultPagination : _b, filters = props.filters, sourceProp = props.source, resourceProp = props.resource, rest = __rest(props, [\"choices\", \"className\", \"pagination\", \"filters\", \"source\", \"resource\"]);\n    var _c = useChoicesContext({\n        choices: choices,\n        resource: resourceProp,\n        source: sourceProp,\n    }), allChoices = _c.allChoices, availableChoices = _c.availableChoices, selectedChoices = _c.selectedChoices, fetchError = _c.error, source = _c.source, choicesContext = __rest(_c, [\"allChoices\", \"availableChoices\", \"selectedChoices\", \"error\", \"source\"]);\n    var _d = useInput(__assign(__assign(__assign({}, props), choicesContext), { source: source })), field = _d.field, fieldState = _d.fieldState, formState = _d.formState;\n    var onSelect = useCallback(function (idsToAdd) {\n        field.onChange(idsToAdd);\n    }, [field]);\n    var onToggleItem = useCallback(function (id) {\n        if (field.value.includes(id)) {\n            field.onChange(field.value.filter(function (item) { return item !== id; }));\n        }\n        else {\n            field.onChange(__spreadArray(__spreadArray([], field.value, true), [id], false));\n        }\n    }, [field]);\n    var onUnselectItems = useCallback(function () {\n        field.onChange([]);\n    }, [field]);\n    var listContext = React.useMemo(function () { return (__assign(__assign({}, choicesContext), { data: availableChoices, onSelect: onSelect, onToggleItem: onToggleItem, onUnselectItems: onUnselectItems, selectedIds: field.value })); }, [\n        availableChoices,\n        choicesContext,\n        field,\n        onSelect,\n        onToggleItem,\n        onUnselectItems,\n    ]);\n    return (React.createElement(\"div\", { className: clsx('ra-input', \"ra-input-\".concat(source), className) },\n        React.createElement(ListContextProvider, { value: listContext },\n            filters ? (Array.isArray(filters) ? (React.createElement(FilterContext.Provider, { value: filters },\n                React.createElement(React.Fragment, null,\n                    React.createElement(FilterForm, null),\n                    React.createElement(FilterButton, null)))) : (React.createElement(React.Fragment, null,\n                cloneElement(filters, {\n                    context: 'form',\n                }),\n                cloneElement(filters, {\n                    context: 'button',\n                })))) : null,\n            !fieldState.error && !fetchError && (React.createElement(React.Fragment, null,\n                React.createElement(Datagrid, __assign({}, rest)),\n                pagination !== false && pagination)),\n            React.createElement(InputHelperText, { touched: fieldState.isTouched ||\n                    formState.isSubmitted ||\n                    fetchError, error: ((_a = fieldState.error) === null || _a === void 0 ? void 0 : _a.message) || (fetchError === null || fetchError === void 0 ? void 0 : fetchError.message) }))));\n};\n//# sourceMappingURL=DatagridInput.js.map"]},"metadata":{},"sourceType":"module"}