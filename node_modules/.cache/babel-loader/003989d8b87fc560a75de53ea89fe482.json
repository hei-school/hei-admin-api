{"ast":null,"code":"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { IconButton, Tooltip } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { useTranslate } from 'ra-core';\nimport { useSidebarState } from './useSidebarState';\n/**\n * A button that toggles the sidebar. Used by default in the <AppBar>.\n * @param props The component props\n * @param {String} props.className An optional class name to apply to the button\n */\nexport var SidebarToggleButton = function (props) {\n  var translate = useTranslate();\n  var className = props.className;\n  var _a = useSidebarState(),\n    open = _a[0],\n    setOpen = _a[1];\n  return React.createElement(Tooltip, {\n    className: className,\n    title: translate(open ? 'ra.action.close_menu' : 'ra.action.open_menu', {\n      _: 'Open/Close menu'\n    }),\n    enterDelay: 500\n  }, React.createElement(StyledIconButton, {\n    color: \"inherit\",\n    onClick: function () {\n      return setOpen(!open);\n    }\n  }, React.createElement(MenuIcon, {\n    classes: {\n      root: open ? SidebarToggleButtonClasses.menuButtonIconOpen : SidebarToggleButtonClasses.menuButtonIconClosed\n    }\n  })));\n};\nvar PREFIX = 'RaSidebarToggleButton';\nexport var SidebarToggleButtonClasses = {\n  menuButtonIconClosed: \"\".concat(PREFIX, \"-menuButtonIconClosed\"),\n  menuButtonIconOpen: \"\".concat(PREFIX, \"-menuButtonIconOpen\")\n};\nvar StyledIconButton = styled(IconButton, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {}, _b[\"& .\".concat(SidebarToggleButtonClasses.menuButtonIconClosed)] = {\n    transition: theme.transitions.create(['transform'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    transform: 'rotate(0deg)'\n  }, _b[\"& .\".concat(SidebarToggleButtonClasses.menuButtonIconOpen)] = {\n    transition: theme.transitions.create(['transform'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    transform: 'rotate(180deg)'\n  }, _b;\n});","map":{"version":3,"sources":["../../../src/layout/SidebarToggleButton.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,MAAM,QAAQ,sBAAsB;AAC7C,SAAS,UAAU,EAAE,OAAO,QAAQ,eAAe;AACnD,OAAO,QAAQ,MAAM,0BAA0B;AAC/C,SAAS,YAAY,QAAQ,SAAS;AAEtC,SAAS,eAAe,QAAQ,mBAAmB;AAEnD;;;;AAIG;AACH,OAAO,IAAM,mBAAmB,GAAG,UAAC,KAA+B,EAAA;EAC/D,IAAM,SAAS,GAAG,YAAY,EAAE;EAExB,IAAA,SAAS,GAAK,KAAK,CAAA,SAAV;EACX,IAAA,EAAA,GAAkB,eAAe,EAAE;IAAlC,IAAI,GAAA,EAAA,CAAA,CAAA,CAAA;IAAE,OAAO,GAAA,EAAA,CAAA,CAAA,CAAqB;EAEzC,OACI,KAAA,CAAA,aAAA,CAAC,OAAO,EAAA;IACJ,SAAS,EAAE,SAAS;IACpB,KAAK,EAAE,SAAS,CACZ,IAAI,GAAG,sBAAsB,GAAG,qBAAqB,EACrD;MAAE,CAAC,EAAE;IAAiB,CAAE,CAC3B;IACD,UAAU,EAAE;EAAG,CAAA,EAEf,KAAA,CAAA,aAAA,CAAC,gBAAgB,EAAA;IAAC,KAAK,EAAC,SAAS;IAAC,OAAO,EAAE,YAAA;MAAM,OAAA,OAAO,CAAC,CAAC,IAAI,CAAC;IAAd;EAAc,CAAA,EAC3D,KAAA,CAAA,aAAA,CAAC,QAAQ,EAAA;IACL,OAAO,EAAE;MACL,IAAI,EAAE,IAAI,GACJ,0BAA0B,CAAC,kBAAkB,GAC7C,0BAA0B,CAAC;IACpC;EAAA,CAAA,CACH,CACa,CACb;AAElB,CAAC;AAMD,IAAM,MAAM,GAAG,uBAAuB;AAEtC,OAAO,IAAM,0BAA0B,GAAG;EACtC,oBAAoB,EAAE,EAAA,CAAA,MAAA,CAAG,MAAM,EAAA,uBAAA,CAAuB;EACtD,kBAAkB,EAAE,EAAA,CAAA,MAAA,CAAG,MAAM,EAAA,qBAAA;CAChC;AAED,IAAM,gBAAgB,GAAG,MAAM,CAAC,UAAU,EAAE;EACxC,IAAI,EAAE,MAAM;EACZ,iBAAiB,EAAE,UAAC,KAAK,EAAE,MAAM,EAAA;IAAK,OAAA,MAAM,CAAC,IAAI;EAAX;CACzC,CAAC,CAAC,UAAC,EAAS,EAAA;;MAAP,KAAK,GAAA,EAAA,CAAA,KAAA;EAAO,OAAA,EAAA,GAAA,CAAA,CAAA,EACd,EAAA,CAAC,KAAA,CAAA,MAAA,CAAM,0BAA0B,CAAC,oBAAoB,CAAE,CAAA,GAAG;IACvD,UAAU,EAAE,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,EAAE;MAChD,MAAM,EAAE,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK;MACtC,QAAQ,EAAE,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC;KACxC,CAAC;IACF,SAAS,EAAE;GACd,EAED,EAAA,CAAC,KAAA,CAAA,MAAA,CAAM,0BAA0B,CAAC,kBAAkB,CAAE,CAAA,GAAG;IACrD,UAAU,EAAE,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,EAAE;MAChD,MAAM,EAAE,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK;MACtC,QAAQ,EAAE,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC;KACxC,CAAC;IACF,SAAS,EAAE;GACd,E,EACH;AAhBgB,CAgBhB,CAAC","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { IconButton, Tooltip } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { useTranslate } from 'ra-core';\nimport { useSidebarState } from './useSidebarState';\n/**\n * A button that toggles the sidebar. Used by default in the <AppBar>.\n * @param props The component props\n * @param {String} props.className An optional class name to apply to the button\n */\nexport var SidebarToggleButton = function (props) {\n    var translate = useTranslate();\n    var className = props.className;\n    var _a = useSidebarState(), open = _a[0], setOpen = _a[1];\n    return (React.createElement(Tooltip, { className: className, title: translate(open ? 'ra.action.close_menu' : 'ra.action.open_menu', { _: 'Open/Close menu' }), enterDelay: 500 },\n        React.createElement(StyledIconButton, { color: \"inherit\", onClick: function () { return setOpen(!open); } },\n            React.createElement(MenuIcon, { classes: {\n                    root: open\n                        ? SidebarToggleButtonClasses.menuButtonIconOpen\n                        : SidebarToggleButtonClasses.menuButtonIconClosed,\n                } }))));\n};\nvar PREFIX = 'RaSidebarToggleButton';\nexport var SidebarToggleButtonClasses = {\n    menuButtonIconClosed: \"\".concat(PREFIX, \"-menuButtonIconClosed\"),\n    menuButtonIconOpen: \"\".concat(PREFIX, \"-menuButtonIconOpen\"),\n};\nvar StyledIconButton = styled(IconButton, {\n    name: PREFIX,\n    overridesResolver: function (props, styles) { return styles.root; },\n})(function (_a) {\n    var _b;\n    var theme = _a.theme;\n    return (_b = {},\n        _b[\"& .\".concat(SidebarToggleButtonClasses.menuButtonIconClosed)] = {\n            transition: theme.transitions.create(['transform'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            transform: 'rotate(0deg)',\n        },\n        _b[\"& .\".concat(SidebarToggleButtonClasses.menuButtonIconOpen)] = {\n            transition: theme.transitions.create(['transform'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            transform: 'rotate(180deg)',\n        },\n        _b);\n});\n//# sourceMappingURL=SidebarToggleButton.js.map"]},"metadata":{},"sourceType":"module"}