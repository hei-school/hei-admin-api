{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HeadObjectCommand } from \"../commands/HeadObjectCommand\";\nimport { WaiterState, createWaiter } from \"@aws-sdk/util-waiter\";\nvar checkState = function (client, input) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var result, exception_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4 /*yield*/, client.send(new HeadObjectCommand(input))];\n        case 1:\n          result = _a.sent();\n          return [2 /*return*/, {\n            state: WaiterState.SUCCESS\n          }];\n        case 2:\n          exception_1 = _a.sent();\n          return [3 /*break*/, 3];\n        case 3:\n          return [2 /*return*/, {\n            state: WaiterState.RETRY\n          }];\n      }\n    });\n  });\n};\n/**\n *\n *  @param params : Waiter configuration options.\n *  @param input : the input to HeadObjectCommand for polling.\n */\nexport var waitForObjectExists = function (params, input) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var serviceDefaults;\n    return __generator(this, function (_a) {\n      serviceDefaults = {\n        minDelay: 5,\n        maxDelay: 120\n      };\n      return [2 /*return*/, createWaiter(__assign(__assign({}, serviceDefaults), params), input, checkState)];\n    });\n  });\n};","map":{"version":3,"sources":["../../../waiters/waitForObjectExists.ts"],"names":[],"mappings":";AACA,SAAS,iBAAiB,QAAgC,+BAA+B;AACzF,SAA4C,WAAW,EAAE,YAAY,QAAQ,sBAAsB;AAEnG,IAAM,UAAU,GAAG,UAAO,MAAgB,EAAE,KAA6B,EAAA;EAAA,OAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;;UAEnD,OAAA,CAAA,CAAA,CAAA,WAAM,MAAM,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAA;;UAA7D,MAAM,GAAQ,EAAA,CAAA,IAAA,EAA+C;UACjE,OAAA,CAAA,CAAA,CAAA,YAAO;YAAE,KAAK,EAAE,WAAW,CAAC;UAAO,CAAE,CAAA;;;;;UAEvC,OAAA,CAAA,CAAA,CAAA,YAAO;YAAE,KAAK,EAAE,WAAW,CAAC;UAAK,CAAE,CAAA;MAAC;;;CACrC;AACD;;;;AAIG;AACH,OAAO,IAAM,mBAAmB,GAAG,UACjC,MAAqC,EACrC,KAA6B,EAAA;EAAA,OAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;MAEvB,eAAe,GAAG;QAAE,QAAQ,EAAE,CAAC;QAAE,QAAQ,EAAE;MAAG,CAAE;MACtD,OAAA,CAAA,CAAA,CAAA,YAAO,YAAY,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAAM,eAAe,CAAA,EAAK,MAAM,CAAA,EAAI,KAAK,EAAE,UAAU,CAAC,CAAA;;;CAC1E","sourceRoot":"","sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HeadObjectCommand } from \"../commands/HeadObjectCommand\";\nimport { WaiterState, createWaiter } from \"@aws-sdk/util-waiter\";\nvar checkState = function (client, input) { return __awaiter(void 0, void 0, void 0, function () {\n    var result, exception_1;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                _a.trys.push([0, 2, , 3]);\n                return [4 /*yield*/, client.send(new HeadObjectCommand(input))];\n            case 1:\n                result = _a.sent();\n                return [2 /*return*/, { state: WaiterState.SUCCESS }];\n            case 2:\n                exception_1 = _a.sent();\n                return [3 /*break*/, 3];\n            case 3: return [2 /*return*/, { state: WaiterState.RETRY }];\n        }\n    });\n}); };\n/**\n *\n *  @param params : Waiter configuration options.\n *  @param input : the input to HeadObjectCommand for polling.\n */\nexport var waitForObjectExists = function (params, input) { return __awaiter(void 0, void 0, void 0, function () {\n    var serviceDefaults;\n    return __generator(this, function (_a) {\n        serviceDefaults = { minDelay: 5, maxDelay: 120 };\n        return [2 /*return*/, createWaiter(__assign(__assign({}, serviceDefaults), params), input, checkState)];\n    });\n}); };\n//# sourceMappingURL=waitForObjectExists.js.map"]},"metadata":{},"sourceType":"module"}