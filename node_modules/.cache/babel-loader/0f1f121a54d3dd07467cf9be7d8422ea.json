{"ast":null,"code":"import { __assign, __read, __spreadArray } from \"tslib\";\nvar HttpRequest = function () {\n  function HttpRequest(options) {\n    this.method = options.method || \"GET\";\n    this.hostname = options.hostname || \"localhost\";\n    this.port = options.port;\n    this.query = options.query || {};\n    this.headers = options.headers || {};\n    this.body = options.body;\n    this.protocol = options.protocol ? options.protocol.slice(-1) !== \":\" ? \"\".concat(options.protocol, \":\") : options.protocol : \"https:\";\n    this.path = options.path ? options.path.charAt(0) !== \"/\" ? \"/\".concat(options.path) : options.path : \"/\";\n  }\n  HttpRequest.isInstance = function (request) {\n    if (!request) return false;\n    var req = request;\n    return \"method\" in req && \"protocol\" in req && \"hostname\" in req && \"path\" in req && typeof req[\"query\"] === \"object\" && typeof req[\"headers\"] === \"object\";\n  };\n  HttpRequest.prototype.clone = function () {\n    var cloned = new HttpRequest(__assign(__assign({}, this), {\n      headers: __assign({}, this.headers)\n    }));\n    if (cloned.query) cloned.query = cloneQuery(cloned.query);\n    return cloned;\n  };\n  return HttpRequest;\n}();\nexport { HttpRequest };\nfunction cloneQuery(query) {\n  return Object.keys(query).reduce(function (carry, paramName) {\n    var _a;\n    var param = query[paramName];\n    return __assign(__assign({}, carry), (_a = {}, _a[paramName] = Array.isArray(param) ? __spreadArray([], __read(param), false) : param, _a));\n  }, {});\n}","map":{"version":3,"names":["__assign","__read","__spreadArray","HttpRequest","options","method","hostname","port","query","headers","body","protocol","slice","concat","path","charAt","isInstance","request","req","prototype","clone","cloned","cloneQuery","Object","keys","reduce","carry","paramName","_a","param","Array","isArray"],"sources":["F:/project/front-end/hei-admin-ui/node_modules/@aws-sdk/middleware-recursion-detection/node_modules/@aws-sdk/protocol-http/dist-es/httpRequest.js"],"sourcesContent":["import { __assign, __read, __spreadArray } from \"tslib\";\nvar HttpRequest = (function () {\n    function HttpRequest(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.slice(-1) !== \":\"\n                ? \"\".concat(options.protocol, \":\")\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? \"/\".concat(options.path) : options.path) : \"/\";\n    }\n    HttpRequest.isInstance = function (request) {\n        if (!request)\n            return false;\n        var req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    };\n    HttpRequest.prototype.clone = function () {\n        var cloned = new HttpRequest(__assign(__assign({}, this), { headers: __assign({}, this.headers) }));\n        if (cloned.query)\n            cloned.query = cloneQuery(cloned.query);\n        return cloned;\n    };\n    return HttpRequest;\n}());\nexport { HttpRequest };\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce(function (carry, paramName) {\n        var _a;\n        var param = query[paramName];\n        return __assign(__assign({}, carry), (_a = {}, _a[paramName] = Array.isArray(param) ? __spreadArray([], __read(param), false) : param, _a));\n    }, {});\n}\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,aAAa,QAAQ,OAAO;AACvD,IAAIC,WAAW,GAAI,YAAY;EAC3B,SAASA,WAAW,CAACC,OAAO,EAAE;IAC1B,IAAI,CAACC,MAAM,GAAGD,OAAO,CAACC,MAAM,IAAI,KAAK;IACrC,IAAI,CAACC,QAAQ,GAAGF,OAAO,CAACE,QAAQ,IAAI,WAAW;IAC/C,IAAI,CAACC,IAAI,GAAGH,OAAO,CAACG,IAAI;IACxB,IAAI,CAACC,KAAK,GAAGJ,OAAO,CAACI,KAAK,IAAI,CAAC,CAAC;IAChC,IAAI,CAACC,OAAO,GAAGL,OAAO,CAACK,OAAO,IAAI,CAAC,CAAC;IACpC,IAAI,CAACC,IAAI,GAAGN,OAAO,CAACM,IAAI;IACxB,IAAI,CAACC,QAAQ,GAAGP,OAAO,CAACO,QAAQ,GAC1BP,OAAO,CAACO,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAC9B,EAAE,CAACC,MAAM,CAACT,OAAO,CAACO,QAAQ,EAAE,GAAG,CAAC,GAChCP,OAAO,CAACO,QAAQ,GACpB,QAAQ;IACd,IAAI,CAACG,IAAI,GAAGV,OAAO,CAACU,IAAI,GAAIV,OAAO,CAACU,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,GAAG,CAACF,MAAM,CAACT,OAAO,CAACU,IAAI,CAAC,GAAGV,OAAO,CAACU,IAAI,GAAI,GAAG;EAC/G;EACAX,WAAW,CAACa,UAAU,GAAG,UAAUC,OAAO,EAAE;IACxC,IAAI,CAACA,OAAO,EACR,OAAO,KAAK;IAChB,IAAIC,GAAG,GAAGD,OAAO;IACjB,OAAQ,QAAQ,IAAIC,GAAG,IACnB,UAAU,IAAIA,GAAG,IACjB,UAAU,IAAIA,GAAG,IACjB,MAAM,IAAIA,GAAG,IACb,OAAOA,GAAG,CAAC,OAAO,CAAC,KAAK,QAAQ,IAChC,OAAOA,GAAG,CAAC,SAAS,CAAC,KAAK,QAAQ;EAC1C,CAAC;EACDf,WAAW,CAACgB,SAAS,CAACC,KAAK,GAAG,YAAY;IACtC,IAAIC,MAAM,GAAG,IAAIlB,WAAW,CAACH,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE;MAAES,OAAO,EAAET,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAACS,OAAO;IAAE,CAAC,CAAC,CAAC;IACnG,IAAIY,MAAM,CAACb,KAAK,EACZa,MAAM,CAACb,KAAK,GAAGc,UAAU,CAACD,MAAM,CAACb,KAAK,CAAC;IAC3C,OAAOa,MAAM;EACjB,CAAC;EACD,OAAOlB,WAAW;AACtB,CAAC,EAAG;AACJ,SAASA,WAAW;AACpB,SAASmB,UAAU,CAACd,KAAK,EAAE;EACvB,OAAOe,MAAM,CAACC,IAAI,CAAChB,KAAK,CAAC,CAACiB,MAAM,CAAC,UAAUC,KAAK,EAAEC,SAAS,EAAE;IACzD,IAAIC,EAAE;IACN,IAAIC,KAAK,GAAGrB,KAAK,CAACmB,SAAS,CAAC;IAC5B,OAAO3B,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE0B,KAAK,CAAC,GAAGE,EAAE,GAAG,CAAC,CAAC,EAAEA,EAAE,CAACD,SAAS,CAAC,GAAGG,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,GAAG3B,aAAa,CAAC,EAAE,EAAED,MAAM,CAAC4B,KAAK,CAAC,EAAE,KAAK,CAAC,GAAGA,KAAK,EAAED,EAAE,EAAE;EAC/I,CAAC,EAAE,CAAC,CAAC,CAAC;AACV"},"metadata":{},"sourceType":"module"}