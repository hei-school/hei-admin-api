{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nimport { alpha } from '@mui/material/styles';\nimport ActionCheck from '@mui/icons-material/CheckCircle';\nimport AlertError from '@mui/icons-material/ErrorOutline';\nimport clsx from 'clsx';\nimport { useTranslate } from 'ra-core';\n/**\n * Confirmation dialog\n *\n * @example\n * <Confirm\n *     isOpen={true}\n *     title=\"Delete Item\"\n *     content=\"Are you sure you want to delete this item?\"\n *     confirm=\"Yes\"\n *     confirmColor=\"primary\"\n *     ConfirmIcon=ActionCheck\n *     CancelIcon=AlertError\n *     cancel=\"Cancel\"\n *     onConfirm={() => { // do something }}\n *     onClose={() => { // do something }}\n * />\n */\nexport var Confirm = function (props) {\n  var _a;\n  var className = props.className,\n    _b = props.isOpen,\n    isOpen = _b === void 0 ? false : _b,\n    loading = props.loading,\n    title = props.title,\n    content = props.content,\n    _c = props.cancel,\n    cancel = _c === void 0 ? 'ra.action.cancel' : _c,\n    _d = props.confirm,\n    confirm = _d === void 0 ? 'ra.action.confirm' : _d,\n    _e = props.confirmColor,\n    confirmColor = _e === void 0 ? 'primary' : _e,\n    _f = props.ConfirmIcon,\n    ConfirmIcon = _f === void 0 ? ActionCheck : _f,\n    _g = props.CancelIcon,\n    CancelIcon = _g === void 0 ? AlertError : _g,\n    onClose = props.onClose,\n    onConfirm = props.onConfirm,\n    _h = props.translateOptions,\n    translateOptions = _h === void 0 ? {} : _h,\n    rest = __rest(props, [\"className\", \"isOpen\", \"loading\", \"title\", \"content\", \"cancel\", \"confirm\", \"confirmColor\", \"ConfirmIcon\", \"CancelIcon\", \"onClose\", \"onConfirm\", \"translateOptions\"]);\n  var translate = useTranslate();\n  var handleConfirm = useCallback(function (e) {\n    e.stopPropagation();\n    onConfirm(e);\n  }, [onConfirm]);\n  var handleClick = useCallback(function (e) {\n    e.stopPropagation();\n  }, []);\n  return React.createElement(StyledDialog, __assign({\n    className: className,\n    open: isOpen,\n    onClose: onClose,\n    onClick: handleClick,\n    \"aria-labelledby\": \"alert-dialog-title\"\n  }, rest), React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\"\n  }, translate(title, __assign({\n    _: title\n  }, translateOptions))), React.createElement(DialogContent, null, typeof content === 'string' ? React.createElement(DialogContentText, null, translate(content, __assign({\n    _: content\n  }, translateOptions))) : content), React.createElement(DialogActions, null, React.createElement(Button, {\n    disabled: loading,\n    onClick: onClose,\n    startIcon: React.createElement(CancelIcon, null)\n  }, translate(cancel, {\n    _: cancel\n  })), React.createElement(Button, {\n    disabled: loading,\n    onClick: handleConfirm,\n    className: clsx('ra-confirm', (_a = {}, _a[ConfirmClasses.confirmWarning] = confirmColor === 'warning', _a[ConfirmClasses.confirmPrimary] = confirmColor === 'primary', _a)),\n    autoFocus: true,\n    startIcon: React.createElement(ConfirmIcon, null)\n  }, translate(confirm, {\n    _: confirm\n  }))));\n};\nConfirm.propTypes = {\n  cancel: PropTypes.string,\n  className: PropTypes.string,\n  confirm: PropTypes.string,\n  confirmColor: PropTypes.string,\n  ConfirmIcon: PropTypes.elementType,\n  CancelIcon: PropTypes.elementType,\n  content: PropTypes.node.isRequired,\n  isOpen: PropTypes.bool,\n  loading: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  sx: PropTypes.any\n};\nvar PREFIX = 'RaConfirm';\nexport var ConfirmClasses = {\n  confirmPrimary: \"\".concat(PREFIX, \"-confirmPrimary\"),\n  confirmWarning: \"\".concat(PREFIX, \"-confirmWarning\")\n};\nvar StyledDialog = styled(Dialog, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {}, _b[\"& .\".concat(ConfirmClasses.confirmPrimary)] = {\n    color: theme.palette.primary.main\n  }, _b[\"& .\".concat(ConfirmClasses.confirmWarning)] = {\n    color: theme.palette.error.main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.error.main, 0.12),\n      // Reset on mouse devices\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  }, _b;\n});","map":{"version":3,"sources":["../../../src/layout/Confirm.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,MAAM,QAAQ,sBAAsB;AAC7C,SAAS,WAAW,QAA2B,OAAO;AACtD,OAAO,SAAiC,MAAM,YAAY;AAC1D,OAAO,MAAuB,MAAM,sBAAsB;AAC1D,OAAO,aAAa,MAAM,6BAA6B;AACvD,OAAO,aAAa,MAAM,6BAA6B;AACvD,OAAO,iBAAiB,MAAM,iCAAiC;AAC/D,OAAO,WAAW,MAAM,2BAA2B;AACnD,OAAO,MAAM,MAAM,sBAAsB;AACzC,SAAS,KAAK,QAAQ,sBAAsB;AAC5C,OAAO,WAAW,MAAM,iCAAiC;AACzD,OAAO,UAAU,MAAM,kCAAkC;AACzD,OAAO,IAAI,MAAM,MAAM;AACvB,SAAS,YAAY,QAAQ,SAAS;AAEtC;;;;;;;;;;;;;;;;AAgBG;AACH,OAAO,IAAM,OAAO,GAAG,UAAC,KAAmB,EAAA;;EAEnC,IAAA,SAAS,GAcT,KAAK,CAAA,SAdI;IACT,EAAA,GAaA,KAAK,CAAA,MAbS;IAAd,MAAM,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAK,GAAA,EAAA;IACd,OAAO,GAYP,KAAK,CAAA,OAZE;IACP,KAAK,GAWL,KAAK,CAAA,KAXA;IACL,OAAO,GAUP,KAAK,CAAA,OAVE;IACP,EAAA,GASA,KAAK,CAAA,MATsB;IAA3B,MAAM,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,kBAAkB,GAAA,EAAA;IAC3B,EAAA,GAQA,KAAK,CAAA,OARwB;IAA7B,OAAO,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,mBAAmB,GAAA,EAAA;IAC7B,EAAA,GAOA,KAAK,CAAA,YAPmB;IAAxB,YAAY,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,SAAS,GAAA,EAAA;IACxB,EAAA,GAMA,KAAK,CAAA,WANoB;IAAzB,WAAW,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,WAAW,GAAA,EAAA;IACzB,EAAA,GAKA,KAAK,CAAA,UALkB;IAAvB,UAAU,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,UAAU,GAAA,EAAA;IACvB,OAAO,GAIP,KAAK,CAAA,OAJE;IACP,SAAS,GAGT,KAAK,CAAA,SAHI;IACT,EAAA,GAEA,KAAK,CAAA,gBAFgB;IAArB,gBAAgB,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,CAAA,CAAE,GAAA,EAAA;IAClB,IAAI,GAAA,MAAA,CACP,KAAK,EAfH,CAAA,WAAA,EAAA,QAAA,EAAA,SAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,SAAA,EAAA,cAAA,EAAA,aAAA,EAAA,YAAA,EAAA,SAAA,EAAA,WAAA,EAAA,kBAAA,CAeL,CADU;EAGX,IAAM,SAAS,GAAG,YAAY,EAAE;EAEhC,IAAM,aAAa,GAAG,WAAW,CAC7B,UAAA,CAAC,EAAA;IACG,CAAC,CAAC,eAAe,EAAE;IACnB,SAAS,CAAC,CAAC,CAAC;EAChB,CAAC,EACD,CAAC,SAAS,CAAC,CACd;EAED,IAAM,WAAW,GAAG,WAAW,CAAC,UAAA,CAAC,EAAA;IAC7B,CAAC,CAAC,eAAe,EAAE;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,OACI,KAAA,CAAA,aAAA,CAAC,YAAY,EAAA,QAAA,CAAA;IACT,SAAS,EAAE,SAAS;IACpB,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,OAAO;IAChB,OAAO,EAAE,WAAW;IAAA,iBAAA,EACJ;EAAoB,CAAA,EAChC,IAAI,CAAA,EAER,KAAA,CAAA,aAAA,CAAC,WAAW,EAAA;IAAC,EAAE,EAAC;EAAoB,CAAA,EAC/B,SAAS,CAAC,KAAK,EAAA,QAAA,CAAA;IAAI,CAAC,EAAE;EAAK,CAAA,EAAK,gBAAgB,CAAA,CAAG,CAC1C,EACd,KAAA,CAAA,aAAA,CAAC,aAAa,EAAA,IAAA,EACT,OAAO,OAAO,KAAK,QAAQ,GACxB,KAAA,CAAA,aAAA,CAAC,iBAAiB,EAAA,IAAA,EACb,SAAS,CAAC,OAAO,EAAA,QAAA,CAAA;IACd,CAAC,EAAE;EAAO,CAAA,EACP,gBAAgB,CAAA,CACrB,CACc,GAEpB,OACH,CACW,EAChB,KAAA,CAAA,aAAA,CAAC,aAAa,EAAA,IAAA,EACV,KAAA,CAAA,aAAA,CAAC,MAAM,EAAA;IACH,QAAQ,EAAE,OAAO;IACjB,OAAO,EAAE,OAAO;IAChB,SAAS,EAAE,KAAA,CAAA,aAAA,CAAC,UAAU,EAAA,IAAA;EAAG,CAAA,EAExB,SAAS,CAAC,MAAM,EAAE;IAAE,CAAC,EAAE;EAAM,CAAE,CAAC,CAC5B,EACT,KAAA,CAAA,aAAA,CAAC,MAAM,EAAA;IACH,QAAQ,EAAE,OAAO;IACjB,OAAO,EAAE,aAAa;IACtB,SAAS,EAAE,IAAI,CAAC,YAAY,GAAA,EAAA,GAAA,CAAA,CAAA,EACxB,EAAA,CAAC,cAAc,CAAC,cAAc,CAAA,GAC1B,YAAY,KAAK,SAAS,EAC9B,EAAA,CAAC,cAAc,CAAC,cAAc,CAAA,GAC1B,YAAY,KAAK,SAAS,E,IAChC;IACF,SAAS,EAAA,IAAA;IACT,SAAS,EAAE,KAAA,CAAA,aAAA,CAAC,WAAW,EAAA,IAAA;EAAG,CAAA,EAEzB,SAAS,CAAC,OAAO,EAAE;IAAE,CAAC,EAAE;EAAO,CAAE,CAAC,CAC9B,CACG,CACL;AAEvB,CAAC;AAkBD,OAAO,CAAC,SAAS,GAAG;EAChB,MAAM,EAAE,SAAS,CAAC,MAAM;EACxB,SAAS,EAAE,SAAS,CAAC,MAAM;EAC3B,OAAO,EAAE,SAAS,CAAC,MAAM;EACzB,YAAY,EAAE,SAAS,CAAC,MAAM;EAC9B,WAAW,EAAE,SAAS,CAAC,WAAW;EAClC,UAAU,EAAE,SAAS,CAAC,WAAW;EACjC,OAAO,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU;EAClC,MAAM,EAAE,SAAS,CAAC,IAAI;EACtB,OAAO,EAAE,SAAS,CAAC,IAAI;EACvB,OAAO,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU;EAClC,SAAS,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU;EACpC,KAAK,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU;EAClC,EAAE,EAAE,SAAS,CAAC;CACjB;AAED,IAAM,MAAM,GAAG,WAAW;AAE1B,OAAO,IAAM,cAAc,GAAG;EAC1B,cAAc,EAAE,EAAA,CAAA,MAAA,CAAG,MAAM,EAAA,iBAAA,CAAiB;EAC1C,cAAc,EAAE,EAAA,CAAA,MAAA,CAAG,MAAM,EAAA,iBAAA;CAC5B;AAED,IAAM,YAAY,GAAG,MAAM,CAAC,MAAM,EAAE;EAChC,IAAI,EAAE,MAAM;EACZ,iBAAiB,EAAE,UAAC,KAAK,EAAE,MAAM,EAAA;IAAK,OAAA,MAAM,CAAC,IAAI;EAAX;CACzC,CAAC,CAAC,UAAC,EAAS,EAAA;;MAAP,KAAK,GAAA,EAAA,CAAA,KAAA;EAAO,OAAA,EAAA,GAAA,CAAA,CAAA,EACd,EAAA,CAAC,KAAA,CAAA,MAAA,CAAM,cAAc,CAAC,cAAc,CAAE,CAAA,GAAG;IACrC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC;GAChC,EAED,EAAA,CAAC,KAAA,CAAA,MAAA,CAAM,cAAc,CAAC,cAAc,CAAE,CAAA,GAAG;IACrC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI;IAC/B,SAAS,EAAE;MACP,eAAe,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;MACtD;MACA,sBAAsB,EAAE;QACpB,eAAe,EAAE;MACpB;IACJ;GACJ,E,EACH;AAfgB,CAehB,CAAC","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nimport { alpha } from '@mui/material/styles';\nimport ActionCheck from '@mui/icons-material/CheckCircle';\nimport AlertError from '@mui/icons-material/ErrorOutline';\nimport clsx from 'clsx';\nimport { useTranslate } from 'ra-core';\n/**\n * Confirmation dialog\n *\n * @example\n * <Confirm\n *     isOpen={true}\n *     title=\"Delete Item\"\n *     content=\"Are you sure you want to delete this item?\"\n *     confirm=\"Yes\"\n *     confirmColor=\"primary\"\n *     ConfirmIcon=ActionCheck\n *     CancelIcon=AlertError\n *     cancel=\"Cancel\"\n *     onConfirm={() => { // do something }}\n *     onClose={() => { // do something }}\n * />\n */\nexport var Confirm = function (props) {\n    var _a;\n    var className = props.className, _b = props.isOpen, isOpen = _b === void 0 ? false : _b, loading = props.loading, title = props.title, content = props.content, _c = props.cancel, cancel = _c === void 0 ? 'ra.action.cancel' : _c, _d = props.confirm, confirm = _d === void 0 ? 'ra.action.confirm' : _d, _e = props.confirmColor, confirmColor = _e === void 0 ? 'primary' : _e, _f = props.ConfirmIcon, ConfirmIcon = _f === void 0 ? ActionCheck : _f, _g = props.CancelIcon, CancelIcon = _g === void 0 ? AlertError : _g, onClose = props.onClose, onConfirm = props.onConfirm, _h = props.translateOptions, translateOptions = _h === void 0 ? {} : _h, rest = __rest(props, [\"className\", \"isOpen\", \"loading\", \"title\", \"content\", \"cancel\", \"confirm\", \"confirmColor\", \"ConfirmIcon\", \"CancelIcon\", \"onClose\", \"onConfirm\", \"translateOptions\"]);\n    var translate = useTranslate();\n    var handleConfirm = useCallback(function (e) {\n        e.stopPropagation();\n        onConfirm(e);\n    }, [onConfirm]);\n    var handleClick = useCallback(function (e) {\n        e.stopPropagation();\n    }, []);\n    return (React.createElement(StyledDialog, __assign({ className: className, open: isOpen, onClose: onClose, onClick: handleClick, \"aria-labelledby\": \"alert-dialog-title\" }, rest),\n        React.createElement(DialogTitle, { id: \"alert-dialog-title\" }, translate(title, __assign({ _: title }, translateOptions))),\n        React.createElement(DialogContent, null, typeof content === 'string' ? (React.createElement(DialogContentText, null, translate(content, __assign({ _: content }, translateOptions)))) : (content)),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { disabled: loading, onClick: onClose, startIcon: React.createElement(CancelIcon, null) }, translate(cancel, { _: cancel })),\n            React.createElement(Button, { disabled: loading, onClick: handleConfirm, className: clsx('ra-confirm', (_a = {},\n                    _a[ConfirmClasses.confirmWarning] = confirmColor === 'warning',\n                    _a[ConfirmClasses.confirmPrimary] = confirmColor === 'primary',\n                    _a)), autoFocus: true, startIcon: React.createElement(ConfirmIcon, null) }, translate(confirm, { _: confirm })))));\n};\nConfirm.propTypes = {\n    cancel: PropTypes.string,\n    className: PropTypes.string,\n    confirm: PropTypes.string,\n    confirmColor: PropTypes.string,\n    ConfirmIcon: PropTypes.elementType,\n    CancelIcon: PropTypes.elementType,\n    content: PropTypes.node.isRequired,\n    isOpen: PropTypes.bool,\n    loading: PropTypes.bool,\n    onClose: PropTypes.func.isRequired,\n    onConfirm: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    sx: PropTypes.any,\n};\nvar PREFIX = 'RaConfirm';\nexport var ConfirmClasses = {\n    confirmPrimary: \"\".concat(PREFIX, \"-confirmPrimary\"),\n    confirmWarning: \"\".concat(PREFIX, \"-confirmWarning\"),\n};\nvar StyledDialog = styled(Dialog, {\n    name: PREFIX,\n    overridesResolver: function (props, styles) { return styles.root; },\n})(function (_a) {\n    var _b;\n    var theme = _a.theme;\n    return (_b = {},\n        _b[\"& .\".concat(ConfirmClasses.confirmPrimary)] = {\n            color: theme.palette.primary.main,\n        },\n        _b[\"& .\".concat(ConfirmClasses.confirmWarning)] = {\n            color: theme.palette.error.main,\n            '&:hover': {\n                backgroundColor: alpha(theme.palette.error.main, 0.12),\n                // Reset on mouse devices\n                '@media (hover: none)': {\n                    backgroundColor: 'transparent',\n                },\n            },\n        },\n        _b);\n});\n//# sourceMappingURL=Confirm.js.map"]},"metadata":{},"sourceType":"module"}