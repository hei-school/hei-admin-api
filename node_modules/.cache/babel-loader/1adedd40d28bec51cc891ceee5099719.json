{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { Edit as RaEdit } from 'react-admin';\nimport { EditActions } from './EditActions';\n/**\n * Replacement for react-admin's Edit that adds RBAC control to actions\n *\n * Users must have the 'show' permission on the resource and record to see the ShowButton.\n * Users must have the 'clone' permission on the resource and record to see the CloneButton.\n *\n * @example\n * import { Edit } from '@react-admin/ra-rbac';\n *\n * const authProvider = {\n *      // ...\n *      getPermissions: () => Promise.resolve([\n *          { action: ['list', 'edit', 'clone'], resource: 'products' },\n *      ]),\n * };\n *\n * export const PostEdit = () => (\n *     <Edit>\n *         ...\n *     </Edit>\n * );\n * // user will see the clone button but not the show button\n */\nexport var Edit = function (props) {\n  return React.createElement(RaEdit, __assign({\n    actions: React.createElement(EditActions, null)\n  }, props));\n};\nEdit.propTypes = RaEdit.propTypes;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","Edit","RaEdit","EditActions","props","createElement","actions","propTypes"],"sources":["F:/project/front-end/hei-admin-ui/node_modules/@react-admin/ra-rbac/esm/src/detail/Edit.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { Edit as RaEdit } from 'react-admin';\nimport { EditActions } from './EditActions';\n/**\n * Replacement for react-admin's Edit that adds RBAC control to actions\n *\n * Users must have the 'show' permission on the resource and record to see the ShowButton.\n * Users must have the 'clone' permission on the resource and record to see the CloneButton.\n *\n * @example\n * import { Edit } from '@react-admin/ra-rbac';\n *\n * const authProvider = {\n *      // ...\n *      getPermissions: () => Promise.resolve([\n *          { action: ['list', 'edit', 'clone'], resource: 'products' },\n *      ]),\n * };\n *\n * export const PostEdit = () => (\n *     <Edit>\n *         ...\n *     </Edit>\n * );\n * // user will see the clone button but not the show button\n */\nexport var Edit = function (props) {\n    return React.createElement(RaEdit, __assign({ actions: React.createElement(EditActions, null) }, props));\n};\nEdit.propTypes = RaEdit.propTypes;\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IACnB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD,OAAO,KAAKO,KAAK,MAAM,OAAO;AAC9B,SAASC,IAAI,IAAIC,MAAM,QAAQ,aAAa;AAC5C,SAASC,WAAW,QAAQ,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIF,IAAI,GAAG,UAAUG,KAAK,EAAE;EAC/B,OAAOJ,KAAK,CAACK,aAAa,CAACH,MAAM,EAAEhB,QAAQ,CAAC;IAAEoB,OAAO,EAAEN,KAAK,CAACK,aAAa,CAACF,WAAW,EAAE,IAAI;EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC;AAC5G,CAAC;AACDH,IAAI,CAACM,SAAS,GAAGL,MAAM,CAACK,SAAS"},"metadata":{},"sourceType":"module"}