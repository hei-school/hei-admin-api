{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react')) : typeof define === 'function' && define.amd ? define(['exports', 'react'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ReactErrorBoundary = {}, global.React));\n})(this, function (exports, React) {\n  'use strict';\n\n  function _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n      'default': e\n    };\n  }\n  var React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n  var changedArray = function (a, b) {\n    if (a === void 0) {\n      a = [];\n    }\n    if (b === void 0) {\n      b = [];\n    }\n    return a.length !== b.length || a.some(function (item, index) {\n      return !Object.is(item, b[index]);\n    });\n  };\n  var initialState = {\n    error: null,\n    info: null\n  };\n  var ErrorBoundary = /*#__PURE__*/function (_React$Component) {\n    _inheritsLoose(ErrorBoundary, _React$Component);\n    function ErrorBoundary() {\n      var _this;\n      for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n        _args[_key] = arguments[_key];\n      }\n      _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;\n      _this.state = initialState;\n      _this.resetErrorBoundary = function () {\n        var _this$props;\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        _this.props.onReset == null ? void 0 : (_this$props = _this.props).onReset.apply(_this$props, args);\n        _this.setState(initialState);\n      };\n      return _this;\n    }\n    ErrorBoundary.getDerivedStateFromError = function getDerivedStateFromError(error) {\n      return {\n        error: error\n      };\n    };\n    var _proto = ErrorBoundary.prototype;\n    _proto.componentDidCatch = function componentDidCatch(error, info) {\n      var _this$props$onError, _this$props2;\n      (_this$props$onError = (_this$props2 = this.props).onError) == null ? void 0 : _this$props$onError.call(_this$props2, error, info == null ? void 0 : info.componentStack);\n      this.setState({\n        info: info\n      });\n    };\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n      var _this$state = this.state,\n        error = _this$state.error,\n        info = _this$state.info;\n      var resetKeys = this.props.resetKeys;\n      if (error !== null && info !== null && changedArray(prevProps.resetKeys, resetKeys)) {\n        var _this$props$onResetKe, _this$props3;\n        (_this$props$onResetKe = (_this$props3 = this.props).onResetKeysChange) == null ? void 0 : _this$props$onResetKe.call(_this$props3, prevProps.resetKeys, resetKeys);\n        this.setState(initialState);\n      }\n    };\n    _proto.render = function render() {\n      var _this$state2 = this.state,\n        error = _this$state2.error,\n        info = _this$state2.info;\n      var _this$props4 = this.props,\n        fallbackRender = _this$props4.fallbackRender,\n        FallbackComponent = _this$props4.FallbackComponent,\n        fallback = _this$props4.fallback;\n      if (error !== null) {\n        // we'll get a re-render with the error state in getDerivedStateFromError\n        // but we don't have the info yet, so just render null\n        // note that this won't be committed to the DOM thanks to our componentDidCatch\n        // so the user won't see a flash of nothing, so this works fine.\n        // the benefit of doing things this way rather than just putting both the\n        // error and info setState within componentDidCatch is we avoid re-rendering\n        // busted stuff: https://github.com/bvaughn/react-error-boundary/issues/66\n        if (!info) return null;\n        var props = {\n          componentStack: info == null ? void 0 : info.componentStack,\n          error: error,\n          resetErrorBoundary: this.resetErrorBoundary\n        };\n        if ( /*#__PURE__*/React__default['default'].isValidElement(fallback)) {\n          return fallback;\n        } else if (typeof fallbackRender === 'function') {\n          return fallbackRender(props);\n        } else if (FallbackComponent) {\n          return /*#__PURE__*/React__default['default'].createElement(FallbackComponent, props);\n        } else {\n          throw new Error('react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop');\n        }\n      }\n      return this.props.children;\n    };\n    return ErrorBoundary;\n  }(React__default['default'].Component);\n  function withErrorBoundary(Component, errorBoundaryProps) {\n    function Wrapped(props) {\n      return /*#__PURE__*/React__default['default'].createElement(ErrorBoundary, errorBoundaryProps, /*#__PURE__*/React__default['default'].createElement(Component, props));\n    } // Format for display in DevTools\n\n    var name = Component.displayName || Component.name || 'Unknown';\n    Wrapped.displayName = \"withErrorBoundary(\" + name + \")\";\n    return Wrapped;\n  }\n  function useErrorHandler(givenError) {\n    var _React$useState = React__default['default'].useState(null),\n      error = _React$useState[0],\n      setError = _React$useState[1];\n    if (givenError) throw givenError;\n    if (error) throw error;\n    return setError;\n  }\n  exports.ErrorBoundary = ErrorBoundary;\n  exports.useErrorHandler = useErrorHandler;\n  exports.withErrorBoundary = withErrorBoundary;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../src/index.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","changedArray","a","b","length","some","item","index","is","initialState","error","info","ErrorBoundary","React","Component","getDerivedStateFromError","state","resetErrorBoundary","args","props","onReset","setState","componentDidCatch","onError","componentStack","componentDidUpdate","prevProps","resetKeys","onResetKeysChange","render","fallbackRender","FallbackComponent","fallback","isValidElement","Error","children","withErrorBoundary","errorBoundaryProps","Wrapped","name","displayName","useErrorHandler","givenError","setError","useState"],"mappings":"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","sourcesContent":["export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import React from 'react'\n\nconst changedArray = (a = [], b = []) =>\n  a.length !== b.length || a.some((item, index) => !Object.is(item, b[index]))\n\nconst initialState = {error: null, info: null}\nclass ErrorBoundary extends React.Component {\n  static getDerivedStateFromError(error) {\n    return {error}\n  }\n\n  state = initialState\n  resetErrorBoundary = (...args) => {\n    this.props.onReset?.(...args)\n    this.setState(initialState)\n  }\n\n  componentDidCatch(error, info) {\n    this.props.onError?.(error, info?.componentStack)\n    this.setState({info})\n  }\n\n  componentDidUpdate(prevProps) {\n    const {error, info} = this.state\n    const {resetKeys} = this.props\n    if (\n      error !== null &&\n      info !== null &&\n      changedArray(prevProps.resetKeys, resetKeys)\n    ) {\n      this.props.onResetKeysChange?.(prevProps.resetKeys, resetKeys)\n      this.setState(initialState)\n    }\n  }\n\n  render() {\n    const {error, info} = this.state\n    const {fallbackRender, FallbackComponent, fallback} = this.props\n\n    if (error !== null) {\n      // we'll get a re-render with the error state in getDerivedStateFromError\n      // but we don't have the info yet, so just render null\n      // note that this won't be committed to the DOM thanks to our componentDidCatch\n      // so the user won't see a flash of nothing, so this works fine.\n      // the benefit of doing things this way rather than just putting both the\n      // error and info setState within componentDidCatch is we avoid re-rendering\n      // busted stuff: https://github.com/bvaughn/react-error-boundary/issues/66\n      if (!info) return null\n\n      const props = {\n        componentStack: info?.componentStack,\n        error,\n        resetErrorBoundary: this.resetErrorBoundary,\n      }\n      if (React.isValidElement(fallback)) {\n        return fallback\n      } else if (typeof fallbackRender === 'function') {\n        return fallbackRender(props)\n      } else if (FallbackComponent) {\n        return <FallbackComponent {...props} />\n      } else {\n        throw new Error(\n          'react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop',\n        )\n      }\n    }\n\n    return this.props.children\n  }\n}\n\nfunction withErrorBoundary(Component, errorBoundaryProps) {\n  function Wrapped(props) {\n    return (\n      <ErrorBoundary {...errorBoundaryProps}>\n        <Component {...props} />\n      </ErrorBoundary>\n    )\n  }\n\n  // Format for display in DevTools\n  const name = Component.displayName || Component.name || 'Unknown'\n  Wrapped.displayName = `withErrorBoundary(${name})`\n\n  return Wrapped\n}\n\nfunction useErrorHandler(givenError) {\n  const [error, setError] = React.useState(null)\n  if (givenError) throw givenError\n  if (error) throw error\n  return setError\n}\n\nexport {ErrorBoundary, withErrorBoundary, useErrorHandler}\n"]},"metadata":{},"sourceType":"script"}