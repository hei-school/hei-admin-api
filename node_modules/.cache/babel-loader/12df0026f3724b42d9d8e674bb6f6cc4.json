{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Tab as MuiTab, Stack } from '@mui/material';\nimport { useTranslate } from 'ra-core';\nimport clsx from 'clsx';\nimport { Labeled } from '../Labeled';\n/**\n * Tab element for the TabbedShowLayout.\n *\n * The `<Tab>` component accepts the following props:\n *\n * - label: The string displayed for each tab\n * - icon: The icon to show before the label (optional). Must be a component.\n * - path: The string used for custom urls\n *\n * @example\n *     // in src/posts.js\n *     import * as React from \"react\";\n *     import FavoriteIcon from '@mui/icons-material/Favorite';\n *     import PersonPinIcon from '@mui/icons-material/PersonPin';\n *     import { Show, TabbedShowLayout, Tab, TextField } from 'react-admin';\n *\n *     export const PostShow = (props) => (\n *         <Show {...props}>\n *             <TabbedShowLayout>\n *                 <Tab label=\"Content\" icon={<FavoriteIcon />}>\n *                     <TextField source=\"title\" />\n *                     <TextField source=\"subtitle\" />\n *                </Tab>\n *                 <Tab label=\"Metadata\" icon={<PersonIcon />} path=\"metadata\">\n *                     <TextField source=\"category\" />\n *                </Tab>\n *             </TabbedShowLayout>\n *         </Show>\n *     );\n *\n *     // in src/App.js\n *     import * as React from \"react\";\n *     import { Admin, Resource } from 'react-admin';\n *\n *     import { PostShow } from './posts';\n *\n *     const App = () => (\n *         <Admin dataProvider={...}>\n *             <Resource name=\"posts\" show={PostShow} />\n *         </Admin>\n *     );\n *     export default App;\n */\nexport var Tab = function (_a) {\n  var children = _a.children,\n    contentClassName = _a.contentClassName,\n    context = _a.context,\n    className = _a.className,\n    divider = _a.divider,\n    icon = _a.icon,\n    label = _a.label,\n    record = _a.record,\n    _b = _a.spacing,\n    spacing = _b === void 0 ? 1 : _b,\n    _c = _a.syncWithLocation,\n    syncWithLocation = _c === void 0 ? true : _c,\n    value = _a.value,\n    rest = __rest(_a, [\"children\", \"contentClassName\", \"context\", \"className\", \"divider\", \"icon\", \"label\", \"record\", \"spacing\", \"syncWithLocation\", \"value\"]);\n  var translate = useTranslate();\n  var location = useLocation();\n  var propsForLink = {\n    component: Link,\n    to: __assign(__assign({}, location), {\n      pathname: value\n    })\n  };\n  var renderHeader = function () {\n    return React.createElement(MuiTab, __assign({\n      key: \"tab-header-\".concat(value),\n      label: typeof label === 'string' ? translate(label, {\n        _: label\n      }) : label,\n      value: value,\n      icon: icon,\n      className: clsx('show-tab', className)\n    }, syncWithLocation ? propsForLink : {}, rest));\n  };\n  var renderContent = function () {\n    return React.createElement(Stack, {\n      className: contentClassName,\n      spacing: spacing,\n      divider: divider\n    }, React.Children.map(children, function (field) {\n      return field && isValidElement(field) ? React.createElement(Labeled, {\n        key: field.props.source,\n        className: clsx('ra-field', field.props.source && \"ra-field-\".concat(field.props.source), field.props.className)\n      }, field) : null;\n    }));\n  };\n  return context === 'header' ? renderHeader() : renderContent();\n};\nTab.propTypes = {\n  className: PropTypes.string,\n  contentClassName: PropTypes.string,\n  children: PropTypes.node,\n  context: PropTypes.oneOf(['header', 'content']),\n  icon: PropTypes.element,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  path: PropTypes.string,\n  spacing: PropTypes.any,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};","map":{"version":3,"sources":["../../../src/detail/Tab.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Tab as MuiTab, Stack } from '@mui/material';\nimport { useTranslate } from 'ra-core';\nimport clsx from 'clsx';\nimport { Labeled } from '../Labeled';\n/**\n * Tab element for the TabbedShowLayout.\n *\n * The `<Tab>` component accepts the following props:\n *\n * - label: The string displayed for each tab\n * - icon: The icon to show before the label (optional). Must be a component.\n * - path: The string used for custom urls\n *\n * @example\n *     // in src/posts.js\n *     import * as React from \"react\";\n *     import FavoriteIcon from '@mui/icons-material/Favorite';\n *     import PersonPinIcon from '@mui/icons-material/PersonPin';\n *     import { Show, TabbedShowLayout, Tab, TextField } from 'react-admin';\n *\n *     export const PostShow = (props) => (\n *         <Show {...props}>\n *             <TabbedShowLayout>\n *                 <Tab label=\"Content\" icon={<FavoriteIcon />}>\n *                     <TextField source=\"title\" />\n *                     <TextField source=\"subtitle\" />\n *                </Tab>\n *                 <Tab label=\"Metadata\" icon={<PersonIcon />} path=\"metadata\">\n *                     <TextField source=\"category\" />\n *                </Tab>\n *             </TabbedShowLayout>\n *         </Show>\n *     );\n *\n *     // in src/App.js\n *     import * as React from \"react\";\n *     import { Admin, Resource } from 'react-admin';\n *\n *     import { PostShow } from './posts';\n *\n *     const App = () => (\n *         <Admin dataProvider={...}>\n *             <Resource name=\"posts\" show={PostShow} />\n *         </Admin>\n *     );\n *     export default App;\n */\nexport var Tab = function (_a) {\n    var children = _a.children, contentClassName = _a.contentClassName, context = _a.context, className = _a.className, divider = _a.divider, icon = _a.icon, label = _a.label, record = _a.record, _b = _a.spacing, spacing = _b === void 0 ? 1 : _b, _c = _a.syncWithLocation, syncWithLocation = _c === void 0 ? true : _c, value = _a.value, rest = __rest(_a, [\"children\", \"contentClassName\", \"context\", \"className\", \"divider\", \"icon\", \"label\", \"record\", \"spacing\", \"syncWithLocation\", \"value\"]);\n    var translate = useTranslate();\n    var location = useLocation();\n    var propsForLink = {\n        component: Link,\n        to: __assign(__assign({}, location), { pathname: value }),\n    };\n    var renderHeader = function () { return (React.createElement(MuiTab, __assign({ key: \"tab-header-\".concat(value), label: typeof label === 'string'\n            ? translate(label, { _: label })\n            : label, value: value, icon: icon, className: clsx('show-tab', className) }, (syncWithLocation ? propsForLink : {}), rest))); };\n    var renderContent = function () { return (React.createElement(Stack, { className: contentClassName, spacing: spacing, divider: divider }, React.Children.map(children, function (field) {\n        return field && isValidElement(field) ? (React.createElement(Labeled, { key: field.props.source, className: clsx('ra-field', field.props.source &&\n                \"ra-field-\".concat(field.props.source), field.props.className) }, field)) : null;\n    }))); };\n    return context === 'header' ? renderHeader() : renderContent();\n};\nTab.propTypes = {\n    className: PropTypes.string,\n    contentClassName: PropTypes.string,\n    children: PropTypes.node,\n    context: PropTypes.oneOf(['header', 'content']),\n    icon: PropTypes.element,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n        .isRequired,\n    path: PropTypes.string,\n    spacing: PropTypes.any,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n//# sourceMappingURL=Tab.js.map"]},"metadata":{},"sourceType":"module"}