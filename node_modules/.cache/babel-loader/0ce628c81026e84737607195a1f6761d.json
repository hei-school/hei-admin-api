{"ast":null,"code":"import isMatch from 'lodash/isMatch';\n/**\n * Checks if an array of permissions allows to execute the given action on the given resource.\n *\n * @example\n * canAccess({\n *     permissions: [\n *         { resource: 'user', action: 'read' },\n *         { resource: 'posts', action: ['read', 'edit', 'create', 'delete'] },\n *     ],\n *     action: \"edit\",\n *     resource: \"posts\"\n * }); // true\n */\nexport var canAccess = function (_a) {\n  var permissions = _a.permissions,\n    action = _a.action,\n    resource = _a.resource,\n    record = _a.record;\n  if (!permissions || permissions.length === 0) {\n    // permissions can be undefined while loading\n    return false;\n  }\n  // if one deny permission matches, return false\n  for (var _i = 0, _b = permissions.filter(function (p) {\n      return p != null && p.type === 'deny';\n    }); _i < _b.length; _i++) {\n    var permission = _b[_i];\n    if (matchTarget(permission, resource, action, record)) {\n      return false;\n    }\n  }\n  // if one allow permission matches, return true\n  for (var _c = 0, _d = permissions.filter(function (p) {\n      return p != null && p.type !== 'deny';\n    }); _c < _d.length; _c++) {\n    var permission = _d[_c];\n    if (matchTarget(permission, resource, action, record)) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Checks is a permission matches a target (action, resource, record)\n *\n * @example\n * matchTarget({ resource: 'user', action: 'read' }, 'user', 'read'); // true\n * matchTarget({ resource: 'user', action: 'read' }, 'user', 'edit'); // false\n */\nvar matchTarget = function (permission, resource, action, record) {\n  if (permission == null || !matchWildcard(permission.resource, resource)) {\n    return false;\n  }\n  if (Array.isArray(permission.action) && !permission.action.includes(action)) {\n    return false;\n  }\n  if (typeof permission.action === 'string' && permission.action !== '*' && permission.action !== action) {\n    return false;\n  }\n  if (permission.record) {\n    if (!record || !isMatch(record, permission.record)) {\n      return false;\n    }\n  }\n  return true;\n};\n/**\n * Checks if a permission matches a wildcard.\n *\n * @param permission The permission to check, e.g. 'posts.*'\n * @param resource The resource to check, e.g. 'posts'\n *\n * @example\n * matchWildCard('*', 'posts'); // true\n * matchWildCard('posts', 'posts'); // true\n * matchWildcard('posts.*', 'posts'); // true\n * matchWildcard('comments', 'posts'); // false\n */\nvar matchWildcard = function (pattern, resource) {\n  if (pattern === '*') {\n    return true;\n  }\n  if (pattern === resource) {\n    return true;\n  }\n  if (pattern.endsWith('*')) {\n    return resource.startsWith(pattern.slice(0, -1));\n  }\n  return false;\n};","map":{"version":3,"names":["isMatch","canAccess","_a","permissions","action","resource","record","length","_i","_b","filter","p","type","permission","matchTarget","_c","_d","matchWildcard","Array","isArray","includes","pattern","endsWith","startsWith","slice"],"sources":["F:/project/front-end/hei-admin-ui/node_modules/@react-admin/ra-rbac/esm/src/canAccess.js"],"sourcesContent":["import isMatch from 'lodash/isMatch';\n/**\n * Checks if an array of permissions allows to execute the given action on the given resource.\n *\n * @example\n * canAccess({\n *     permissions: [\n *         { resource: 'user', action: 'read' },\n *         { resource: 'posts', action: ['read', 'edit', 'create', 'delete'] },\n *     ],\n *     action: \"edit\",\n *     resource: \"posts\"\n * }); // true\n */\nexport var canAccess = function (_a) {\n    var permissions = _a.permissions, action = _a.action, resource = _a.resource, record = _a.record;\n    if (!permissions || permissions.length === 0) {\n        // permissions can be undefined while loading\n        return false;\n    }\n    // if one deny permission matches, return false\n    for (var _i = 0, _b = permissions.filter(function (p) { return p != null && p.type === 'deny'; }); _i < _b.length; _i++) {\n        var permission = _b[_i];\n        if (matchTarget(permission, resource, action, record)) {\n            return false;\n        }\n    }\n    // if one allow permission matches, return true\n    for (var _c = 0, _d = permissions.filter(function (p) { return p != null && p.type !== 'deny'; }); _c < _d.length; _c++) {\n        var permission = _d[_c];\n        if (matchTarget(permission, resource, action, record)) {\n            return true;\n        }\n    }\n    return false;\n};\n/**\n * Checks is a permission matches a target (action, resource, record)\n *\n * @example\n * matchTarget({ resource: 'user', action: 'read' }, 'user', 'read'); // true\n * matchTarget({ resource: 'user', action: 'read' }, 'user', 'edit'); // false\n */\nvar matchTarget = function (permission, resource, action, record) {\n    if (permission == null || !matchWildcard(permission.resource, resource)) {\n        return false;\n    }\n    if (Array.isArray(permission.action) &&\n        !permission.action.includes(action)) {\n        return false;\n    }\n    if (typeof permission.action === 'string' &&\n        permission.action !== '*' &&\n        permission.action !== action) {\n        return false;\n    }\n    if (permission.record) {\n        if (!record || !isMatch(record, permission.record)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * Checks if a permission matches a wildcard.\n *\n * @param permission The permission to check, e.g. 'posts.*'\n * @param resource The resource to check, e.g. 'posts'\n *\n * @example\n * matchWildCard('*', 'posts'); // true\n * matchWildCard('posts', 'posts'); // true\n * matchWildcard('posts.*', 'posts'); // true\n * matchWildcard('comments', 'posts'); // false\n */\nvar matchWildcard = function (pattern, resource) {\n    if (pattern === '*') {\n        return true;\n    }\n    if (pattern === resource) {\n        return true;\n    }\n    if (pattern.endsWith('*')) {\n        return resource.startsWith(pattern.slice(0, -1));\n    }\n    return false;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}