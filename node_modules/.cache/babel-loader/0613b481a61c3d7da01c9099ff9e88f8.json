{"ast":null,"code":"import * as React from 'react';\nimport { ResourceContext } from './ResourceContext';\n/**\n * Create a Resource Context with the resource name\n *\n * Some react-admin components rely on the resource name to be available in the context.\n * This component provides it.\n *\n * If the value is empty, the context is not provided.\n *\n * @param {string} value the resource name\n * @example\n *\n * import { ResourceContextProvider } from 'react-admin';\n *\n * const MyComponent = () => (\n *    <ResourceContextProvider value=\"posts\">\n *       <MyResourceSpecificComponent />\n *   </ResourceContextProvider>\n * );\n */\nexport var ResourceContextProvider = function (_a) {\n  var children = _a.children,\n    value = _a.value;\n  return value ? React.createElement(ResourceContext.Provider, {\n    value: value\n  }, children) : children;\n};","map":{"version":3,"sources":["../../../src/core/ResourceContextProvider.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAE9B,SAAS,eAAe,QAA8B,mBAAmB;AAEzE;;;;;;;;;;;;;;;;;;AAkBG;AACH,OAAO,IAAM,uBAAuB,GAAG,UAAC,EAMvC,EAAA;MALG,QAAQ,GAAA,EAAA,CAAA,QAAA;IACR,KAAK,GAAA,EAAA,CAAA,KAAA;EAKL,OAAA,KAAK,GACD,KAAA,CAAA,aAAA,CAAC,eAAe,CAAC,QAAQ,EAAA;IAAC,KAAK,EAAE;EAAK,CAAA,EACjC,QAAQ,CACc,GAE3B,QACH;AAND,CAMC","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { ResourceContext } from './ResourceContext';\n/**\n * Create a Resource Context with the resource name\n *\n * Some react-admin components rely on the resource name to be available in the context.\n * This component provides it.\n *\n * If the value is empty, the context is not provided.\n *\n * @param {string} value the resource name\n * @example\n *\n * import { ResourceContextProvider } from 'react-admin';\n *\n * const MyComponent = () => (\n *    <ResourceContextProvider value=\"posts\">\n *       <MyResourceSpecificComponent />\n *   </ResourceContextProvider>\n * );\n */\nexport var ResourceContextProvider = function (_a) {\n    var children = _a.children, value = _a.value;\n    return value ? (React.createElement(ResourceContext.Provider, { value: value }, children)) : (children);\n};\n//# sourceMappingURL=ResourceContextProvider.js.map"]},"metadata":{},"sourceType":"module"}