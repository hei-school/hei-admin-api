{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { createElement } from 'react';\nvar InferredElement = /** @class */function () {\n  function InferredElement(type, props, children) {\n    this.type = type;\n    this.props = props;\n    this.children = children;\n    this.type = type;\n    this.props = props;\n    this.children = children;\n  }\n  InferredElement.prototype.getElement = function (props) {\n    if (props === void 0) {\n      props = {};\n    }\n    if (!this.type || !this.type.component) {\n      return;\n    }\n    return this.children ? createElement(this.type.component, __assign(__assign({}, this.props), props), this.children.length > 0 ? this.children.map(function (child, index) {\n      return child.getElement({\n        key: index\n      });\n    }) : this.children.getElement()) : createElement(this.type.component, __assign(__assign({}, this.props), props));\n  };\n  InferredElement.prototype.getProps = function () {\n    return this.props;\n  };\n  InferredElement.prototype.isDefined = function () {\n    return !!this.type;\n  };\n  InferredElement.prototype.getRepresentation = function () {\n    if (!this.type) {\n      return;\n    }\n    if (this.type.representation) {\n      return this.type.representation(this.props, this.children);\n    }\n    if (this.type.component) {\n      return \"<\".concat(this.type.component.displayName || this.type.component.name, \" source=\\\"\").concat(this.props.source, \"\\\" />\");\n    }\n  };\n  return InferredElement;\n}();\nexport default InferredElement;","map":{"version":3,"sources":["../../../src/inference/InferredElement.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,SAAS,aAAa,QAAQ,OAAO;AAGrC,IAAA,eAAA,GAAA,aAAA,YAAA;EACI,SAAA,eAAA,CACY,IAAmB,EACnB,KAAW,EACX,QAAc,EAAA;IAFd,IAAA,CAAA,IAAI,GAAJ,IAAI;IACJ,IAAA,CAAA,KAAK,GAAL,KAAK;IACL,IAAA,CAAA,QAAQ,GAAR,QAAQ;IAEhB,IAAI,CAAC,IAAI,GAAG,IAAI;IAChB,IAAI,CAAC,KAAK,GAAG,KAAK;IAClB,IAAI,CAAC,QAAQ,GAAG,QAAQ;EAC5B;EAEA,eAAA,CAAA,SAAA,CAAA,UAAU,GAAV,UAAW,KAAU,EAAA;IAAV,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA;MAAA,KAAA,GAAA,CAAA,CAAU;IAAA;IACjB,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;MACpC;IACH;IACD,OAAO,IAAI,CAAC,QAAQ,GACd,aAAa,CACT,IAAI,CAAC,IAAI,CAAC,SAAS,EAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EACd,IAAI,CAAC,KAAK,CAAA,EAAK,KAAK,CAAA,EACzB,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,GAClB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,KAAK,EAAE,KAAK,EAAA;MAC3B,OAAA,KAAK,CAAC,UAAU,CAAC;QAAE,GAAG,EAAE;MAAK,CAAE,CAAC;IAAhC,CAAgC,CACnC,GACD,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CACnC,GACD,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAAO,IAAI,CAAC,KAAK,CAAA,EAAK,KAAK,CAAA,CAAG;EACzE,CAAC;EAED,eAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;IACI,OAAO,IAAI,CAAC,KAAK;EACrB,CAAC;EAED,eAAA,CAAA,SAAA,CAAA,SAAS,GAAT,YAAA;IACI,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI;EACtB,CAAC;EAED,eAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjB,YAAA;IACI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;MACZ;IACH;IACD,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;MAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC;IAC7D;IACD,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;MACrB,OAAO,GAAA,CAAA,MAAA,CACH,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAA,YAAA,CAAA,CAAA,MAAA,CACnD,IAAI,CAAC,KAAK,CAAC,MAAM,EAAA,OAAA,CAAM;IACtC;EACL,CAAC;EACL,OAAA,eAAC;AAAD,CAAC,EAAA;AAED,eAAe,eAAe","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { createElement } from 'react';\nvar InferredElement = /** @class */ (function () {\n    function InferredElement(type, props, children) {\n        this.type = type;\n        this.props = props;\n        this.children = children;\n        this.type = type;\n        this.props = props;\n        this.children = children;\n    }\n    InferredElement.prototype.getElement = function (props) {\n        if (props === void 0) { props = {}; }\n        if (!this.type || !this.type.component) {\n            return;\n        }\n        return this.children\n            ? createElement(this.type.component, __assign(__assign({}, this.props), props), this.children.length > 0\n                ? this.children.map(function (child, index) {\n                    return child.getElement({ key: index });\n                })\n                : this.children.getElement())\n            : createElement(this.type.component, __assign(__assign({}, this.props), props));\n    };\n    InferredElement.prototype.getProps = function () {\n        return this.props;\n    };\n    InferredElement.prototype.isDefined = function () {\n        return !!this.type;\n    };\n    InferredElement.prototype.getRepresentation = function () {\n        if (!this.type) {\n            return;\n        }\n        if (this.type.representation) {\n            return this.type.representation(this.props, this.children);\n        }\n        if (this.type.component) {\n            return \"<\".concat(this.type.component.displayName || this.type.component.name, \" source=\\\"\").concat(this.props.source, \"\\\" />\");\n        }\n    };\n    return InferredElement;\n}());\nexport default InferredElement;\n//# sourceMappingURL=InferredElement.js.map"]},"metadata":{},"sourceType":"module"}