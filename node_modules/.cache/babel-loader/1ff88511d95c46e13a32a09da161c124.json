{"ast":null,"code":"import { __asyncGenerator, __asyncValues, __await, __generator } from \"tslib\";\nimport { EventStreamMarshaller as EventMarshaller } from \"@aws-sdk/eventstream-marshaller\";\nimport { getChunkedStream } from \"./getChunkedStream\";\nimport { getUnmarshalledStream } from \"./getUnmarshalledStream\";\nvar EventStreamMarshaller = /** @class */function () {\n  function EventStreamMarshaller(_a) {\n    var utf8Encoder = _a.utf8Encoder,\n      utf8Decoder = _a.utf8Decoder;\n    this.eventMarshaller = new EventMarshaller(utf8Encoder, utf8Decoder);\n    this.utfEncoder = utf8Encoder;\n  }\n  EventStreamMarshaller.prototype.deserialize = function (body, deserializer) {\n    var chunkedStream = getChunkedStream(body);\n    var unmarshalledStream = getUnmarshalledStream(chunkedStream, {\n      eventMarshaller: this.eventMarshaller,\n      deserializer: deserializer,\n      toUtf8: this.utfEncoder\n    });\n    return unmarshalledStream;\n  };\n  EventStreamMarshaller.prototype.serialize = function (input, serializer) {\n    var _a;\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    var self = this;\n    var serializedIterator = function () {\n      return __asyncGenerator(this, arguments, function () {\n        var input_1, input_1_1, chunk, payloadBuf, e_1_1;\n        var e_1, _a;\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              _b.trys.push([0, 7, 8, 13]);\n              input_1 = __asyncValues(input);\n              _b.label = 1;\n            case 1:\n              return [4 /*yield*/, __await(input_1.next())];\n            case 2:\n              if (!(input_1_1 = _b.sent(), !input_1_1.done)) return [3 /*break*/, 6];\n              chunk = input_1_1.value;\n              payloadBuf = self.eventMarshaller.marshall(serializer(chunk));\n              return [4 /*yield*/, __await(payloadBuf)];\n            case 3:\n              return [4 /*yield*/, _b.sent()];\n            case 4:\n              _b.sent();\n              _b.label = 5;\n            case 5:\n              return [3 /*break*/, 1];\n            case 6:\n              return [3 /*break*/, 13];\n            case 7:\n              e_1_1 = _b.sent();\n              e_1 = {\n                error: e_1_1\n              };\n              return [3 /*break*/, 13];\n            case 8:\n              _b.trys.push([8,, 11, 12]);\n              if (!(input_1_1 && !input_1_1.done && (_a = input_1.return))) return [3 /*break*/, 10];\n              return [4 /*yield*/, __await(_a.call(input_1))];\n            case 9:\n              _b.sent();\n              _b.label = 10;\n            case 10:\n              return [3 /*break*/, 12];\n            case 11:\n              if (e_1) throw e_1.error;\n              return [7 /*endfinally*/];\n            case 12:\n              return [7 /*endfinally*/];\n            case 13:\n              return [4 /*yield*/, __await(new Uint8Array(0))];\n            case 14:\n              // Ending frame\n              return [4 /*yield*/, _b.sent()];\n            case 15:\n              // Ending frame\n              _b.sent();\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    return _a = {}, _a[Symbol.asyncIterator] = serializedIterator, _a;\n  };\n  return EventStreamMarshaller;\n}();\nexport { EventStreamMarshaller };","map":{"version":3,"sources":["../../src/EventStreamMarshaller.ts"],"names":[],"mappings":";AAAA,SAAS,qBAAqB,IAAI,eAAe,QAAQ,iCAAiC;AAG1F,SAAS,gBAAgB,QAAQ,oBAAoB;AACrD,SAAS,qBAAqB,QAAQ,yBAAyB;AAS/D,IAAA,qBAAA,GAAA,aAAA,YAAA;EAGE,SAAA,qBAAA,CAAY,EAA0D,EAAA;QAAxD,WAAW,GAAA,EAAA,CAAA,WAAA;MAAE,WAAW,GAAA,EAAA,CAAA,WAAA;IACpC,IAAI,CAAC,eAAe,GAAG,IAAI,eAAe,CAAC,WAAW,EAAE,WAAW,CAAC;IACpE,IAAI,CAAC,UAAU,GAAG,WAAW;EAC/B;EAEA,qBAAA,CAAA,SAAA,CAAA,WAAW,GAAX,UACE,IAA+B,EAC/B,YAAiE,EAAA;IAEjE,IAAM,aAAa,GAAG,gBAAgB,CAAC,IAAI,CAAC;IAC5C,IAAM,kBAAkB,GAAG,qBAAqB,CAAC,aAAa,EAAE;MAC9D,eAAe,EAAE,IAAI,CAAC,eAAe;MACrC,YAAY,EAAA,YAAA;MACZ,MAAM,EAAE,IAAI,CAAC;KACd,CAAC;IACF,OAAO,kBAAkB;EAC3B,CAAC;EAED,qBAAA,CAAA,SAAA,CAAA,SAAS,GAAT,UAAa,KAAuB,EAAE,UAAiC,EAAA;;IACrE;IACA,IAAM,IAAI,GAAG,IAAI;IACjB,IAAM,kBAAkB,GAAG,YAAA;;;;;;;;cACC,OAAA,GAAA,aAAA,CAAA,KAAK,CAAA;;;;;;cAAd,KAAK,GAAA,SAAA,CAAA,KAAA;cACd,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;2CAC7D,UAAU,CAAA,CAAA;;cAAhB,OAAA,CAAA,CAAA,CAAA,WAAA,EAAA,CAAA,IAAA,EAAA,CAAA;;cAAA,EAAA,CAAA,IAAA,EAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;2CAGZ,IAAI,UAAU,CAAC,CAAC,CAAC,CAAA,CAAA;;cADvB;cACA,OAAA,CAAA,CAAA,CAAA,WAAA,EAAA,CAAA,IAAA,EAAA,CAAA;;cADA;cACA,EAAA,CAAA,IAAA,EAAuB;;;;;KACxB;;IACD,OAAA,EAAA,GAAA,CAAA,CAAA,EACE,EAAA,CAAC,MAAM,CAAC,aAAa,CAAA,GAAG,kBAAkB,E,EAC1C;EACJ,CAAC;EACH,OAAA,qBAAC;AAAD,CAAC,EAAA","sourcesContent":["import { EventStreamMarshaller as EventMarshaller } from \"@aws-sdk/eventstream-marshaller\";\nimport { Decoder, Encoder, EventStreamMarshaller as IEventStreamMarshaller, Message } from \"@aws-sdk/types\";\n\nimport { getChunkedStream } from \"./getChunkedStream\";\nimport { getUnmarshalledStream } from \"./getUnmarshalledStream\";\n\nexport interface EventStreamMarshaller extends IEventStreamMarshaller {}\n\nexport interface EventStreamMarshallerOptions {\n  utf8Encoder: Encoder;\n  utf8Decoder: Decoder;\n}\n\nexport class EventStreamMarshaller {\n  private readonly eventMarshaller: EventMarshaller;\n  private readonly utfEncoder: Encoder;\n  constructor({ utf8Encoder, utf8Decoder }: EventStreamMarshallerOptions) {\n    this.eventMarshaller = new EventMarshaller(utf8Encoder, utf8Decoder);\n    this.utfEncoder = utf8Encoder;\n  }\n\n  deserialize<T>(\n    body: AsyncIterable<Uint8Array>,\n    deserializer: (input: { [event: string]: Message }) => Promise<T>\n  ): AsyncIterable<T> {\n    const chunkedStream = getChunkedStream(body);\n    const unmarshalledStream = getUnmarshalledStream(chunkedStream, {\n      eventMarshaller: this.eventMarshaller,\n      deserializer,\n      toUtf8: this.utfEncoder,\n    });\n    return unmarshalledStream;\n  }\n\n  serialize<T>(input: AsyncIterable<T>, serializer: (event: T) => Message): AsyncIterable<Uint8Array> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    const serializedIterator = async function* () {\n      for await (const chunk of input) {\n        const payloadBuf = self.eventMarshaller.marshall(serializer(chunk));\n        yield payloadBuf;\n      }\n      // Ending frame\n      yield new Uint8Array(0);\n    };\n    return {\n      [Symbol.asyncIterator]: serializedIterator,\n    };\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}