{"ast":null,"code":"import { useResourceContext } from 'react-admin';\nimport { useGetRecordId } from './useGetRecordId';\nimport { useSubscribe } from './useSubscribe';\n/**\n * Hook to subscribe to the events for a record\n * on mount (and unsubscribe on unmount).\n *\n * @param {SubscriptionCallback<RecordEvent>} subscriptionCallback the callback to be executed when an event is published concerning the record\n * @param {string} resource optional if used inside a ResourceContextProvider\n * @param {Identifier} recordId optional if used inside a RecordContextProvider or if recordId can be guessed from route\n *\n * @example // Auto-Updated PostShowView\n *\n * ```tsx\n * const PostShow = () => {\n *     const notify = useNotify();\n *     const refresh = useRefresh();\n *     useSubscribeToRecord(() => {\n *         refresh();\n *         notify('Record updated server-side');\n *     });\n *     return (\n *         <Show>\n *             <TextField source=\"title\" />\n *         </Show>\n *     );\n * };\n * ```\n *\n * @example // Providing resource and record id manually\n *\n * ```tsx\n * const PostShow = () => {\n *     const notify = useNotify();\n *     const refresh = useRefresh();\n *     useSubscribeToRecord(() => {\n *         refresh();\n *         notify('Record updated server-side');\n *     }, 'posts', 123);\n *     return <Show/>;\n * };\n * ```\n */\nexport var useSubscribeToRecord = function (subscriptionCallback, resource, id) {\n  var actualResource = useResourceContext({\n    resource: resource\n  });\n  var actualRecordId = useGetRecordId(id);\n  var topic = \"resource/\" + actualResource + \"/\" + actualRecordId;\n  useSubscribe(topic, subscriptionCallback);\n};","map":{"version":3,"names":["useResourceContext","useGetRecordId","useSubscribe","useSubscribeToRecord","subscriptionCallback","resource","id","actualResource","actualRecordId","topic"],"sources":["F:/project/front-end/hei-admin-ui/node_modules/@react-admin/ra-realtime/esm/src/dataProvider/useSubscribeToRecord.js"],"sourcesContent":["import { useResourceContext } from 'react-admin';\nimport { useGetRecordId } from './useGetRecordId';\nimport { useSubscribe } from './useSubscribe';\n/**\n * Hook to subscribe to the events for a record\n * on mount (and unsubscribe on unmount).\n *\n * @param {SubscriptionCallback<RecordEvent>} subscriptionCallback the callback to be executed when an event is published concerning the record\n * @param {string} resource optional if used inside a ResourceContextProvider\n * @param {Identifier} recordId optional if used inside a RecordContextProvider or if recordId can be guessed from route\n *\n * @example // Auto-Updated PostShowView\n *\n * ```tsx\n * const PostShow = () => {\n *     const notify = useNotify();\n *     const refresh = useRefresh();\n *     useSubscribeToRecord(() => {\n *         refresh();\n *         notify('Record updated server-side');\n *     });\n *     return (\n *         <Show>\n *             <TextField source=\"title\" />\n *         </Show>\n *     );\n * };\n * ```\n *\n * @example // Providing resource and record id manually\n *\n * ```tsx\n * const PostShow = () => {\n *     const notify = useNotify();\n *     const refresh = useRefresh();\n *     useSubscribeToRecord(() => {\n *         refresh();\n *         notify('Record updated server-side');\n *     }, 'posts', 123);\n *     return <Show/>;\n * };\n * ```\n */\nexport var useSubscribeToRecord = function (subscriptionCallback, resource, id) {\n    var actualResource = useResourceContext({ resource: resource });\n    var actualRecordId = useGetRecordId(id);\n    var topic = \"resource/\" + actualResource + \"/\" + actualRecordId;\n    useSubscribe(topic, subscriptionCallback);\n};\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,aAAa;AAChD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,QAAQ,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,oBAAoB,GAAG,UAAUC,oBAAoB,EAAEC,QAAQ,EAAEC,EAAE,EAAE;EAC5E,IAAIC,cAAc,GAAGP,kBAAkB,CAAC;IAAEK,QAAQ,EAAEA;EAAS,CAAC,CAAC;EAC/D,IAAIG,cAAc,GAAGP,cAAc,CAACK,EAAE,CAAC;EACvC,IAAIG,KAAK,GAAG,WAAW,GAAGF,cAAc,GAAG,GAAG,GAAGC,cAAc;EAC/DN,YAAY,CAACO,KAAK,EAAEL,oBAAoB,CAAC;AAC7C,CAAC"},"metadata":{},"sourceType":"module"}