{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { Children, cloneElement, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport { useParams } from 'react-router-dom';\nexport var TabbedFormTabs = function (props) {\n  var children = props.children,\n    url = props.url,\n    syncWithLocation = props.syncWithLocation,\n    value = props.value,\n    rest = __rest(props, [\"children\", \"url\", \"syncWithLocation\", \"value\"]);\n  var params = useParams();\n  // params will include eventual parameters from the root pathname and * for the remaining part\n  // which should match the tabs paths\n  var tabValue = params['*'];\n  return React.createElement(Tabs, __assign({\n    value: syncWithLocation ? tabValue : value,\n    indicatorColor: \"primary\"\n  }, rest), Children.map(children, function (tab, index) {\n    if (!isValidElement(tab)) return null;\n    // Builds the full tab which is the concatenation of the last matched route in the\n    // TabbedShowLayout hierarchy (ex: '/posts/create', '/posts/12', , '/posts/12/show')\n    // and the tab path.\n    // This will be used as the Tab's value\n    var tabPath = getTabbedFormTabFullPath(tab, index);\n    return cloneElement(tab, {\n      intent: 'header',\n      value: syncWithLocation ? tabPath : index,\n      syncWithLocation: syncWithLocation\n    });\n  }));\n};\nTabbedFormTabs.propTypes = {\n  children: PropTypes.node,\n  url: PropTypes.string,\n  tabsWithErrors: PropTypes.arrayOf(PropTypes.string)\n};\nexport var getTabbedFormTabFullPath = function (tab, index) {\n  return tab.props.path != null ? tab.props.path : index > 0 ? index.toString() : '';\n};","map":{"version":3,"sources":["../../../src/form/TabbedFormTabs.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,QAAQ,EAAE,YAAY,EAAE,cAAc,QAAsB,OAAO;AAC5E,OAAO,SAAS,MAAM,YAAY;AAClC,OAAO,IAAmB,MAAM,oBAAoB;AACpD,SAAS,SAAS,QAAQ,kBAAkB;AAE5C,OAAO,IAAM,cAAc,GAAG,UAAC,KAA0B,EAAA;EAC7C,IAAA,QAAQ,GAA4C,KAAK,CAAA,QAAjD;IAAE,GAAG,GAAuC,KAAK,CAAA,GAA5C;IAAE,gBAAgB,GAAqB,KAAK,CAAA,gBAA1B;IAAE,KAAK,GAAc,KAAK,CAAA,KAAnB;IAAK,IAAI,GAAA,MAAA,CAAK,KAAK,EAA3D,CAAA,UAAA,EAAA,KAAA,EAAA,kBAAA,EAAA,OAAA,CAAmD,CAAF;EAEvD,IAAM,MAAM,GAAG,SAAS,EAAE;EAE1B;EACA;EACA,IAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC;EAE5B,OACI,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA,QAAA,CAAA;IACD,KAAK,EAAE,gBAAgB,GAAG,QAAQ,GAAG,KAAK;IAC1C,cAAc,EAAC;EAAS,CAAA,EACpB,IAAI,CAAA,EAEP,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAC,GAAiB,EAAE,KAAK,EAAA;IAC7C,IAAI,CAAC,cAAc,CAAM,GAAG,CAAC,EAAE,OAAO,IAAI;IAE1C;IACA;IACA;IACA;IACA,IAAM,OAAO,GAAG,wBAAwB,CAAC,GAAG,EAAE,KAAK,CAAC;IAEpD,OAAO,YAAY,CAAC,GAAG,EAAE;MACrB,MAAM,EAAE,QAAQ;MAChB,KAAK,EAAE,gBAAgB,GAAG,OAAO,GAAG,KAAK;MACzC,gBAAgB,EAAA;KACnB,CAAC;EACN,CAAC,CAAC,CACC;AAEf,CAAC;AAED,cAAc,CAAC,SAAS,GAAG;EACvB,QAAQ,EAAE,SAAS,CAAC,IAAI;EACxB,GAAG,EAAE,SAAS,CAAC,MAAM;EACrB,cAAc,EAAE,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM;CACrD;AAED,OAAO,IAAM,wBAAwB,GAAG,UACpC,GAAiB,EACjB,KAAa,EAAA;EAEb,OAAA,GAAG,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE;AAA3E,CAA2E","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { Children, cloneElement, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport { useParams } from 'react-router-dom';\nexport var TabbedFormTabs = function (props) {\n    var children = props.children, url = props.url, syncWithLocation = props.syncWithLocation, value = props.value, rest = __rest(props, [\"children\", \"url\", \"syncWithLocation\", \"value\"]);\n    var params = useParams();\n    // params will include eventual parameters from the root pathname and * for the remaining part\n    // which should match the tabs paths\n    var tabValue = params['*'];\n    return (React.createElement(Tabs, __assign({ value: syncWithLocation ? tabValue : value, indicatorColor: \"primary\" }, rest), Children.map(children, function (tab, index) {\n        if (!isValidElement(tab))\n            return null;\n        // Builds the full tab which is the concatenation of the last matched route in the\n        // TabbedShowLayout hierarchy (ex: '/posts/create', '/posts/12', , '/posts/12/show')\n        // and the tab path.\n        // This will be used as the Tab's value\n        var tabPath = getTabbedFormTabFullPath(tab, index);\n        return cloneElement(tab, {\n            intent: 'header',\n            value: syncWithLocation ? tabPath : index,\n            syncWithLocation: syncWithLocation,\n        });\n    })));\n};\nTabbedFormTabs.propTypes = {\n    children: PropTypes.node,\n    url: PropTypes.string,\n    tabsWithErrors: PropTypes.arrayOf(PropTypes.string),\n};\nexport var getTabbedFormTabFullPath = function (tab, index) {\n    return tab.props.path != null ? tab.props.path : index > 0 ? index.toString() : '';\n};\n//# sourceMappingURL=TabbedFormTabs.js.map"]},"metadata":{},"sourceType":"module"}