{"ast":null,"code":"import { __assign } from \"tslib\";\nimport packageInfo from \"./package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { FetchHttpHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { invalidProvider } from \"@aws-sdk/invalid-dependency\";\nimport { DEFAULT_MAX_ATTEMPTS } from \"@aws-sdk/middleware-retry\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64-browser\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { ClientSharedValues } from \"./runtimeConfig.shared\";\n/**\n * @internal\n */\nexport var ClientDefaultValues = __assign(__assign({}, ClientSharedValues), {\n  runtime: \"browser\",\n  base64Decoder: fromBase64,\n  base64Encoder: toBase64,\n  bodyLengthChecker: calculateBodyLength,\n  credentialDefaultProvider: function (_) {\n    return function () {\n      return Promise.reject(new Error(\"Credential is missing\"));\n    };\n  },\n  defaultUserAgentProvider: defaultUserAgent({\n    serviceId: ClientSharedValues.serviceId,\n    clientVersion: packageInfo.version\n  }),\n  maxAttempts: DEFAULT_MAX_ATTEMPTS,\n  region: invalidProvider(\"Region is missing\"),\n  requestHandler: new FetchHttpHandler(),\n  sha256: Sha256,\n  streamCollector: streamCollector,\n  utf8Decoder: fromUtf8,\n  utf8Encoder: toUtf8\n});","map":{"version":3,"sources":["../../runtimeConfig.browser.ts"],"names":[],"mappings":";AAAA,OAAO,WAAW,MAAM,gBAAgB;AAExC,SAAS,MAAM,QAAQ,4BAA4B;AACnD,SAAS,gBAAgB,EAAE,eAAe,QAAQ,6BAA6B;AAC/E,SAAS,eAAe,QAAQ,6BAA6B;AAC7D,SAAS,oBAAoB,QAAQ,2BAA2B;AAChE,SAAS,UAAU,EAAE,QAAQ,QAAQ,8BAA8B;AACnE,SAAS,mBAAmB,QAAQ,mCAAmC;AACvE,SAAS,gBAAgB,QAAQ,kCAAkC;AACnE,SAAS,QAAQ,EAAE,MAAM,QAAQ,4BAA4B;AAE7D,SAAS,kBAAkB,QAAQ,wBAAwB;AAE3D;;AAEG;AACH,OAAO,IAAM,mBAAmB,GAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAC3B,kBAAkB,CAAA,EAAA;EACrB,OAAO,EAAE,SAAS;EAClB,aAAa,EAAE,UAAU;EACzB,aAAa,EAAE,QAAQ;EACvB,iBAAiB,EAAE,mBAAmB;EACtC,yBAAyB,EAAE,UAAC,CAAU,EAAA;IAAK,OAAA,YAAA;MAAM,OAAA,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;IAAlD,CAAkD;EAAxD,CAAwD;EACnG,wBAAwB,EAAE,gBAAgB,CAAC;IACzC,SAAS,EAAE,kBAAkB,CAAC,SAAS;IACvC,aAAa,EAAE,WAAW,CAAC;GAC5B,CAAC;EACF,WAAW,EAAE,oBAAoB;EACjC,MAAM,EAAE,eAAe,CAAC,mBAAmB,CAAC;EAC5C,cAAc,EAAE,IAAI,gBAAgB,EAAE;EACtC,MAAM,EAAE,MAAM;EACd,eAAe,EAAA,eAAA;EACf,WAAW,EAAE,QAAQ;EACrB,WAAW,EAAE;AAAM,CAAA,CACpB","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport packageInfo from \"./package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { FetchHttpHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { invalidProvider } from \"@aws-sdk/invalid-dependency\";\nimport { DEFAULT_MAX_ATTEMPTS } from \"@aws-sdk/middleware-retry\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64-browser\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { ClientSharedValues } from \"./runtimeConfig.shared\";\n/**\n * @internal\n */\nexport var ClientDefaultValues = __assign(__assign({}, ClientSharedValues), { runtime: \"browser\", base64Decoder: fromBase64, base64Encoder: toBase64, bodyLengthChecker: calculateBodyLength, credentialDefaultProvider: function (_) { return function () { return Promise.reject(new Error(\"Credential is missing\")); }; }, defaultUserAgentProvider: defaultUserAgent({\n        serviceId: ClientSharedValues.serviceId,\n        clientVersion: packageInfo.version,\n    }), maxAttempts: DEFAULT_MAX_ATTEMPTS, region: invalidProvider(\"Region is missing\"), requestHandler: new FetchHttpHandler(), sha256: Sha256, streamCollector: streamCollector, utf8Decoder: fromUtf8, utf8Encoder: toUtf8 });\n//# sourceMappingURL=runtimeConfig.browser.js.map"]},"metadata":{},"sourceType":"module"}