{"ast":null,"code":"import { useLocaleState } from './useLocaleState';\n/**\n * Get the current locale\n *\n * @example\n *\n * import { useLocale } from 'react-admin';\n *\n * const availableLanguages = {\n *     en: 'English',\n *     fr: 'Français',\n * }\n * const CurrentLanguage = () => {\n *     const locale = useLocale();\n *     return <span>{availableLanguages[locale]}</span>;\n * }\n *\n * @deprecated use useLocaleState instead\n */\nexport var useLocale = function () {\n  var locale = useLocaleState()[0];\n  return locale;\n};","map":{"version":3,"sources":["../../../src/i18n/useLocale.tsx"],"names":[],"mappings":"AAAA,SAAS,cAAc,QAAQ,kBAAkB;AAEjD;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,IAAM,SAAS,GAAG,YAAA;EACd,IAAA,MAAM,GAAI,cAAc,EAAE,CAAA,CAAA,CAApB;EACb,OAAO,MAAM;AACjB,CAAC","sourceRoot":"","sourcesContent":["import { useLocaleState } from './useLocaleState';\n/**\n * Get the current locale\n *\n * @example\n *\n * import { useLocale } from 'react-admin';\n *\n * const availableLanguages = {\n *     en: 'English',\n *     fr: 'Français',\n * }\n * const CurrentLanguage = () => {\n *     const locale = useLocale();\n *     return <span>{availableLanguages[locale]}</span>;\n * }\n *\n * @deprecated use useLocaleState instead\n */\nexport var useLocale = function () {\n    var locale = useLocaleState()[0];\n    return locale;\n};\n//# sourceMappingURL=useLocale.js.map"]},"metadata":{},"sourceType":"module"}