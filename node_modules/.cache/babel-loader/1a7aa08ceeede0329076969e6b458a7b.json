{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { UpdateEndpointRequest, UpdateEndpointResponse } from \"../models/models_1\";\nimport { deserializeAws_restJson1UpdateEndpointCommand, serializeAws_restJson1UpdateEndpointCommand } from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Creates a new endpoint for an application or updates the settings and attributes of an existing endpoint for an application. You can also use this operation to define custom attributes for an endpoint. If an update includes one or more values for a custom attribute, Amazon Pinpoint replaces (overwrites) any existing values with the new values.</p>\n */\nvar UpdateEndpointCommand = /** @class */function (_super) {\n  __extends(UpdateEndpointCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function UpdateEndpointCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  UpdateEndpointCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"PinpointClient\";\n    var commandName = \"UpdateEndpointCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: UpdateEndpointRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: UpdateEndpointResponse.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  UpdateEndpointCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restJson1UpdateEndpointCommand(input, context);\n  };\n  UpdateEndpointCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restJson1UpdateEndpointCommand(output, context);\n  };\n  return UpdateEndpointCommand;\n}($Command);\nexport { UpdateEndpointCommand };","map":{"version":3,"sources":["../../../commands/UpdateEndpointCommand.ts"],"names":[],"mappings":";AACA,SAAS,qBAAqB,EAAE,sBAAsB,QAAQ,oBAAoB;AAClF,SACE,6CAA6C,EAC7C,2CAA2C,QACtC,4BAA4B;AACnC,SAAS,cAAc,QAAQ,2BAA2B;AAE1D,SAAS,OAAO,IAAI,QAAQ,QAAQ,wBAAwB;AAc5D;;AAEG;AACH,IAAA,qBAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAA2C,SAAA,CAAA,qBAAA,EAAA,MAAA,CAAA;EAKzC;EACA;EAEA,SAAA,qBAAA,CAAqB,KAAiC,EAAA;IAAtD,IAAA,KAAA;IACE;IACA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAO,IAAA,IAAA;IAFY,KAAA,CAAA,KAAK,GAAL,KAAK;;IAGxB;EACF;EAEA;;AAEG;EACH,qBAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjB,UACE,WAAmE,EACnE,aAA2C,EAC3C,OAA8B,EAAA;IAE9B,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,cAAc,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAEzF,IAAM,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;IAE9C,IAAA,MAAM,GAAK,aAAa,CAAA,MAAlB;IACd,IAAM,UAAU,GAAG,gBAAgB;IACnC,IAAM,WAAW,GAAG,uBAAuB;IAC3C,IAAM,uBAAuB,GAA4B;MACvD,MAAM,EAAA,MAAA;MACN,UAAU,EAAA,UAAA;MACV,WAAW,EAAA,WAAA;MACX,uBAAuB,EAAE,qBAAqB,CAAC,kBAAkB;MACjE,wBAAwB,EAAE,sBAAsB,CAAC;KAClD;IACO,IAAA,cAAc,GAAK,aAAa,CAAA,cAAlB;IACtB,OAAO,KAAK,CAAC,OAAO,CAClB,UAAC,OAAsC,EAAA;MACrC,OAAA,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,OAAwB,EAAE,OAAO,IAAI,CAAA,CAAE,CAAC;IAAtE,CAAsE,EACxE,uBAAuB,CACxB;EACH,CAAC;EAEO,qBAAA,CAAA,SAAA,CAAA,SAAS,GAAjB,UAAkB,KAAiC,EAAE,OAAuB,EAAA;IAC1E,OAAO,2CAA2C,CAAC,KAAK,EAAE,OAAO,CAAC;EACpE,CAAC;EAEO,qBAAA,CAAA,SAAA,CAAA,WAAW,GAAnB,UAAoB,MAAsB,EAAE,OAAuB,EAAA;IACjE,OAAO,6CAA6C,CAAC,MAAM,EAAE,OAAO,CAAC;EACvE,CAAC;EAIH,OAAA,qBAAC;AAAD,CAAC,CAtD0C,QAAQ,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { UpdateEndpointRequest, UpdateEndpointResponse } from \"../models/models_1\";\nimport { deserializeAws_restJson1UpdateEndpointCommand, serializeAws_restJson1UpdateEndpointCommand, } from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Creates a new endpoint for an application or updates the settings and attributes of an existing endpoint for an application. You can also use this operation to define custom attributes for an endpoint. If an update includes one or more values for a custom attribute, Amazon Pinpoint replaces (overwrites) any existing values with the new values.</p>\n */\nvar UpdateEndpointCommand = /** @class */ (function (_super) {\n    __extends(UpdateEndpointCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function UpdateEndpointCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    UpdateEndpointCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"PinpointClient\";\n        var commandName = \"UpdateEndpointCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: UpdateEndpointRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: UpdateEndpointResponse.filterSensitiveLog,\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    UpdateEndpointCommand.prototype.serialize = function (input, context) {\n        return serializeAws_restJson1UpdateEndpointCommand(input, context);\n    };\n    UpdateEndpointCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_restJson1UpdateEndpointCommand(output, context);\n    };\n    return UpdateEndpointCommand;\n}($Command));\nexport { UpdateEndpointCommand };\n//# sourceMappingURL=UpdateEndpointCommand.js.map"]},"metadata":{},"sourceType":"module"}