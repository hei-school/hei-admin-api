{"ast":null,"code":"import { fetchActionsWithRecordResponse, fetchActionsWithArrayOfIdentifiedRecordsResponse, fetchActionsWithArrayOfRecordsResponse, fetchActionsWithTotalResponse } from './dataFetchActions';\nfunction validateResponseFormat(response, type, logger // eslint-disable-line no-console\n) {\n  if (logger === void 0) {\n    logger = console.error;\n  }\n  if (!response) {\n    logger(\"The dataProvider returned an empty response for '\".concat(type, \"'.\"));\n    throw new Error('ra.notification.data_provider_error');\n  }\n  if (!response.hasOwnProperty('data')) {\n    logger(\"The response to '\".concat(type, \"' must be like { data: ... }, but the received response does not have a 'data' key. The dataProvider is probably wrong for '\").concat(type, \"'.\"));\n    throw new Error('ra.notification.data_provider_error');\n  }\n  if (fetchActionsWithArrayOfRecordsResponse.includes(type) && !Array.isArray(response.data)) {\n    logger(\"The response to '\".concat(type, \"' must be like { data : [...] }, but the received data is not an array. The dataProvider is probably wrong for '\").concat(type, \"'\"));\n    throw new Error('ra.notification.data_provider_error');\n  }\n  if (fetchActionsWithArrayOfIdentifiedRecordsResponse.includes(type) && Array.isArray(response.data) && response.data.length > 0 && !response.data[0].hasOwnProperty('id')) {\n    logger(\"The response to '\".concat(type, \"' must be like { data : [{ id: 123, ...}, ...] }, but the received data items do not have an 'id' key. The dataProvider is probably wrong for '\").concat(type, \"'\"));\n    throw new Error('ra.notification.data_provider_error');\n  }\n  if (fetchActionsWithRecordResponse.includes(type) && !response.data.hasOwnProperty('id')) {\n    logger(\"The response to '\".concat(type, \"' must be like { data: { id: 123, ... } }, but the received data does not have an 'id' key. The dataProvider is probably wrong for '\").concat(type, \"'\"));\n    throw new Error('ra.notification.data_provider_error');\n  }\n  if (fetchActionsWithTotalResponse.includes(type) && !response.hasOwnProperty('total') && !response.hasOwnProperty('pageInfo')) {\n    logger(\"The response to '\".concat(type, \"' must be like  { data: [...], total: 123 }, but the received response does not have a 'total' key. The dataProvider is probably wrong for '\").concat(type, \"'\"));\n    throw new Error('ra.notification.data_provider_error');\n  }\n}\nexport default validateResponseFormat;","map":{"version":3,"sources":["../../../src/dataProvider/validateResponseFormat.ts"],"names":[],"mappings":"AAAA,SACI,8BAA8B,EAC9B,gDAAgD,EAChD,sCAAsC,EACtC,6BAA6B,QAC1B,oBAAoB;AAE3B,SAAS,sBAAsB,CAC3B,QAAQ,EACR,IAAI,EACJ,MAAsB,CAAC;AAAA,E;EAAvB,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA;IAAA,MAAA,GAAS,OAAO,CAAC,KAAK;EAAA;EAEtB,IAAI,CAAC,QAAQ,EAAE;IACX,MAAM,CAAC,mDAAA,CAAA,MAAA,CAAoD,IAAI,EAAA,IAAA,CAAI,CAAC;IACpE,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC;EACzD;EACD,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;IAClC,MAAM,CACF,mBAAA,CAAA,MAAA,CAAoB,IAAI,EAAA,8HAAA,CAAA,CAAA,MAAA,CAA+H,IAAI,EAAA,IAAA,CAAI,CAClK;IACD,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC;EACzD;EACD,IACI,sCAAsC,CAAC,QAAQ,CAAC,IAAI,CAAC,IACrD,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAC/B;IACE,MAAM,CACF,mBAAA,CAAA,MAAA,CAAoB,IAAI,EAAA,kHAAA,CAAA,CAAA,MAAA,CAAmH,IAAI,EAAA,GAAA,CAAG,CACrJ;IACD,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC;EACzD;EACD,IACI,gDAAgD,CAAC,QAAQ,CAAC,IAAI,CAAC,IAC/D,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAC5B,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IACxB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,EACxC;IACE,MAAM,CACF,mBAAA,CAAA,MAAA,CAAoB,IAAI,EAAA,iJAAA,CAAA,CAAA,MAAA,CAAkJ,IAAI,EAAA,GAAA,CAAG,CACpL;IACD,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC;EACzD;EACD,IACI,8BAA8B,CAAC,QAAQ,CAAC,IAAI,CAAC,IAC7C,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EACrC;IACE,MAAM,CACF,mBAAA,CAAA,MAAA,CAAoB,IAAI,EAAA,sIAAA,CAAA,CAAA,MAAA,CAAuI,IAAI,EAAA,GAAA,CAAG,CACzK;IACD,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC;EACzD;EACD,IACI,6BAA6B,CAAC,QAAQ,CAAC,IAAI,CAAC,IAC5C,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,IACjC,CAAC,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,EACtC;IACE,MAAM,CACF,mBAAA,CAAA,MAAA,CAAoB,IAAI,EAAA,8IAAA,CAAA,CAAA,MAAA,CAA+I,IAAI,EAAA,GAAA,CAAG,CACjL;IACD,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC;EACzD;AACL;AAEA,eAAe,sBAAsB","sourceRoot":"","sourcesContent":["import { fetchActionsWithRecordResponse, fetchActionsWithArrayOfIdentifiedRecordsResponse, fetchActionsWithArrayOfRecordsResponse, fetchActionsWithTotalResponse, } from './dataFetchActions';\nfunction validateResponseFormat(response, type, logger // eslint-disable-line no-console\n) {\n    if (logger === void 0) { logger = console.error; }\n    if (!response) {\n        logger(\"The dataProvider returned an empty response for '\".concat(type, \"'.\"));\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (!response.hasOwnProperty('data')) {\n        logger(\"The response to '\".concat(type, \"' must be like { data: ... }, but the received response does not have a 'data' key. The dataProvider is probably wrong for '\").concat(type, \"'.\"));\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (fetchActionsWithArrayOfRecordsResponse.includes(type) &&\n        !Array.isArray(response.data)) {\n        logger(\"The response to '\".concat(type, \"' must be like { data : [...] }, but the received data is not an array. The dataProvider is probably wrong for '\").concat(type, \"'\"));\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (fetchActionsWithArrayOfIdentifiedRecordsResponse.includes(type) &&\n        Array.isArray(response.data) &&\n        response.data.length > 0 &&\n        !response.data[0].hasOwnProperty('id')) {\n        logger(\"The response to '\".concat(type, \"' must be like { data : [{ id: 123, ...}, ...] }, but the received data items do not have an 'id' key. The dataProvider is probably wrong for '\").concat(type, \"'\"));\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (fetchActionsWithRecordResponse.includes(type) &&\n        !response.data.hasOwnProperty('id')) {\n        logger(\"The response to '\".concat(type, \"' must be like { data: { id: 123, ... } }, but the received data does not have an 'id' key. The dataProvider is probably wrong for '\").concat(type, \"'\"));\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (fetchActionsWithTotalResponse.includes(type) &&\n        !response.hasOwnProperty('total') &&\n        !response.hasOwnProperty('pageInfo')) {\n        logger(\"The response to '\".concat(type, \"' must be like  { data: [...], total: 123 }, but the received response does not have a 'total' key. The dataProvider is probably wrong for '\").concat(type, \"'\"));\n        throw new Error('ra.notification.data_provider_error');\n    }\n}\nexport default validateResponseFormat;\n//# sourceMappingURL=validateResponseFormat.js.map"]},"metadata":{},"sourceType":"module"}