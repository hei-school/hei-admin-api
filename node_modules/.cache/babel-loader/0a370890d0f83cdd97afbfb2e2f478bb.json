{"ast":null,"code":"import * as React from 'react';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, TableCell, TableHead, TableRow, TableBody, IconButton, Checkbox } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport clsx from 'clsx';\nimport { useTimeout } from 'ra-core';\nimport { DatagridClasses } from './useDatagridStyles';\nimport { Placeholder } from '../Placeholder';\nvar times = function (nbChildren, fn) {\n  return Array.from({\n    length: nbChildren\n  }, function (_, key) {\n    return fn(key);\n  });\n};\nvar DatagridLoading = function (_a) {\n  var className = _a.className,\n    expand = _a.expand,\n    hasBulkActions = _a.hasBulkActions,\n    nbChildren = _a.nbChildren,\n    _b = _a.nbFakeLines,\n    nbFakeLines = _b === void 0 ? 5 : _b,\n    size = _a.size;\n  var oneSecondHasPassed = useTimeout(1000);\n  return oneSecondHasPassed ? React.createElement(\"div\", {\n    className: DatagridClasses.root\n  }, React.createElement(Table, {\n    className: clsx(DatagridClasses.table, className),\n    size: size\n  }, React.createElement(TableHead, null, React.createElement(TableRow, {\n    className: DatagridClasses.row\n  }, expand && React.createElement(TableCell, {\n    padding: \"none\",\n    className: DatagridClasses.expandHeader\n  }), hasBulkActions && React.createElement(TableCell, {\n    padding: \"checkbox\",\n    className: DatagridClasses.expandIconCell\n  }, React.createElement(Checkbox, {\n    className: \"select-all\",\n    color: \"primary\",\n    checked: false\n  })), times(nbChildren, function (key) {\n    return React.createElement(TableCell, {\n      variant: \"head\",\n      className: DatagridClasses.headerCell,\n      key: key\n    }, React.createElement(Placeholder, null));\n  }))), React.createElement(TableBody, null, times(nbFakeLines, function (key1) {\n    return React.createElement(TableRow, {\n      key: key1,\n      style: {\n        opacity: 1 / (key1 + 1)\n      }\n    }, expand && React.createElement(TableCell, {\n      padding: \"none\",\n      className: DatagridClasses.expandIconCell\n    }, React.createElement(IconButton, {\n      className: DatagridClasses.expandIcon,\n      component: \"div\",\n      \"aria-hidden\": \"true\",\n      size: \"large\"\n    }, React.createElement(ExpandMoreIcon, null))), hasBulkActions && React.createElement(TableCell, {\n      padding: \"checkbox\",\n      className: DatagridClasses.expandIconCell\n    }, React.createElement(Checkbox, {\n      className: \"select-all\",\n      color: \"primary\",\n      checked: false\n    })), times(nbChildren, function (key2) {\n      return React.createElement(TableCell, {\n        className: DatagridClasses.rowCell,\n        key: key2\n      }, React.createElement(Placeholder, null));\n    }));\n  })))) : null;\n};\nDatagridLoading.propTypes = {\n  className: PropTypes.string,\n  expand: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\n  hasBulkActions: PropTypes.bool,\n  nbChildren: PropTypes.number,\n  nbFakeLines: PropTypes.number,\n  size: PropTypes.oneOf(['small', 'medium'])\n};\nexport default memo(DatagridLoading);","map":{"version":3,"sources":["../../../../src/list/datagrid/DatagridLoading.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, TableCell, TableHead, TableRow, TableBody, IconButton, Checkbox, } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport clsx from 'clsx';\nimport { useTimeout } from 'ra-core';\nimport { DatagridClasses } from './useDatagridStyles';\nimport { Placeholder } from '../Placeholder';\nvar times = function (nbChildren, fn) {\n    return Array.from({ length: nbChildren }, function (_, key) { return fn(key); });\n};\nvar DatagridLoading = function (_a) {\n    var className = _a.className, expand = _a.expand, hasBulkActions = _a.hasBulkActions, nbChildren = _a.nbChildren, _b = _a.nbFakeLines, nbFakeLines = _b === void 0 ? 5 : _b, size = _a.size;\n    var oneSecondHasPassed = useTimeout(1000);\n    return oneSecondHasPassed ? (React.createElement(\"div\", { className: DatagridClasses.root },\n        React.createElement(Table, { className: clsx(DatagridClasses.table, className), size: size },\n            React.createElement(TableHead, null,\n                React.createElement(TableRow, { className: DatagridClasses.row },\n                    expand && (React.createElement(TableCell, { padding: \"none\", className: DatagridClasses.expandHeader })),\n                    hasBulkActions && (React.createElement(TableCell, { padding: \"checkbox\", className: DatagridClasses.expandIconCell },\n                        React.createElement(Checkbox, { className: \"select-all\", color: \"primary\", checked: false }))),\n                    times(nbChildren, function (key) { return (React.createElement(TableCell, { variant: \"head\", className: DatagridClasses.headerCell, key: key },\n                        React.createElement(Placeholder, null))); }))),\n            React.createElement(TableBody, null, times(nbFakeLines, function (key1) { return (React.createElement(TableRow, { key: key1, style: { opacity: 1 / (key1 + 1) } },\n                expand && (React.createElement(TableCell, { padding: \"none\", className: DatagridClasses.expandIconCell },\n                    React.createElement(IconButton, { className: DatagridClasses.expandIcon, component: \"div\", \"aria-hidden\": \"true\", size: \"large\" },\n                        React.createElement(ExpandMoreIcon, null)))),\n                hasBulkActions && (React.createElement(TableCell, { padding: \"checkbox\", className: DatagridClasses.expandIconCell },\n                    React.createElement(Checkbox, { className: \"select-all\", color: \"primary\", checked: false }))),\n                times(nbChildren, function (key2) { return (React.createElement(TableCell, { className: DatagridClasses.rowCell, key: key2 },\n                    React.createElement(Placeholder, null))); }))); }))))) : null;\n};\nDatagridLoading.propTypes = {\n    className: PropTypes.string,\n    expand: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\n    hasBulkActions: PropTypes.bool,\n    nbChildren: PropTypes.number,\n    nbFakeLines: PropTypes.number,\n    size: PropTypes.oneOf(['small', 'medium']),\n};\nexport default memo(DatagridLoading);\n//# sourceMappingURL=DatagridLoading.js.map"]},"metadata":{},"sourceType":"module"}