{"ast":null,"code":"import { NO_RETRY_INCREMENT, RETRY_COST, TIMEOUT_RETRY_COST } from \"./constants\";\nexport var getDefaultRetryQuota = function (initialRetryTokens, options) {\n  var _a, _b, _c;\n  var MAX_CAPACITY = initialRetryTokens;\n  var noRetryIncrement = (_a = options === null || options === void 0 ? void 0 : options.noRetryIncrement) !== null && _a !== void 0 ? _a : NO_RETRY_INCREMENT;\n  var retryCost = (_b = options === null || options === void 0 ? void 0 : options.retryCost) !== null && _b !== void 0 ? _b : RETRY_COST;\n  var timeoutRetryCost = (_c = options === null || options === void 0 ? void 0 : options.timeoutRetryCost) !== null && _c !== void 0 ? _c : TIMEOUT_RETRY_COST;\n  var availableCapacity = initialRetryTokens;\n  var getCapacityAmount = function (error) {\n    return error.name === \"TimeoutError\" ? timeoutRetryCost : retryCost;\n  };\n  var hasRetryTokens = function (error) {\n    return getCapacityAmount(error) <= availableCapacity;\n  };\n  var retrieveRetryTokens = function (error) {\n    if (!hasRetryTokens(error)) {\n      throw new Error(\"No retry token available\");\n    }\n    var capacityAmount = getCapacityAmount(error);\n    availableCapacity -= capacityAmount;\n    return capacityAmount;\n  };\n  var releaseRetryTokens = function (capacityReleaseAmount) {\n    availableCapacity += capacityReleaseAmount !== null && capacityReleaseAmount !== void 0 ? capacityReleaseAmount : noRetryIncrement;\n    availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n  };\n  return Object.freeze({\n    hasRetryTokens: hasRetryTokens,\n    retrieveRetryTokens: retrieveRetryTokens,\n    releaseRetryTokens: releaseRetryTokens\n  });\n};","map":{"version":3,"names":["NO_RETRY_INCREMENT","RETRY_COST","TIMEOUT_RETRY_COST","getDefaultRetryQuota","initialRetryTokens","options","_a","_b","_c","MAX_CAPACITY","noRetryIncrement","retryCost","timeoutRetryCost","availableCapacity","getCapacityAmount","error","name","hasRetryTokens","retrieveRetryTokens","Error","capacityAmount","releaseRetryTokens","capacityReleaseAmount","Math","min","Object","freeze"],"sources":["F:/project/front-end/hei-admin-ui/node_modules/@aws-sdk/client-lex-runtime-service/node_modules/@aws-sdk/middleware-retry/dist-es/defaultRetryQuota.js"],"sourcesContent":["import { NO_RETRY_INCREMENT, RETRY_COST, TIMEOUT_RETRY_COST } from \"./constants\";\nexport var getDefaultRetryQuota = function (initialRetryTokens, options) {\n    var _a, _b, _c;\n    var MAX_CAPACITY = initialRetryTokens;\n    var noRetryIncrement = (_a = options === null || options === void 0 ? void 0 : options.noRetryIncrement) !== null && _a !== void 0 ? _a : NO_RETRY_INCREMENT;\n    var retryCost = (_b = options === null || options === void 0 ? void 0 : options.retryCost) !== null && _b !== void 0 ? _b : RETRY_COST;\n    var timeoutRetryCost = (_c = options === null || options === void 0 ? void 0 : options.timeoutRetryCost) !== null && _c !== void 0 ? _c : TIMEOUT_RETRY_COST;\n    var availableCapacity = initialRetryTokens;\n    var getCapacityAmount = function (error) { return (error.name === \"TimeoutError\" ? timeoutRetryCost : retryCost); };\n    var hasRetryTokens = function (error) { return getCapacityAmount(error) <= availableCapacity; };\n    var retrieveRetryTokens = function (error) {\n        if (!hasRetryTokens(error)) {\n            throw new Error(\"No retry token available\");\n        }\n        var capacityAmount = getCapacityAmount(error);\n        availableCapacity -= capacityAmount;\n        return capacityAmount;\n    };\n    var releaseRetryTokens = function (capacityReleaseAmount) {\n        availableCapacity += capacityReleaseAmount !== null && capacityReleaseAmount !== void 0 ? capacityReleaseAmount : noRetryIncrement;\n        availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n    };\n    return Object.freeze({\n        hasRetryTokens: hasRetryTokens,\n        retrieveRetryTokens: retrieveRetryTokens,\n        releaseRetryTokens: releaseRetryTokens,\n    });\n};\n"],"mappings":"AAAA,SAASA,kBAAkB,EAAEC,UAAU,EAAEC,kBAAkB,QAAQ,aAAa;AAChF,OAAO,IAAIC,oBAAoB,GAAG,UAAUC,kBAAkB,EAAEC,OAAO,EAAE;EACrE,IAAIC,EAAE,EAAEC,EAAE,EAAEC,EAAE;EACd,IAAIC,YAAY,GAAGL,kBAAkB;EACrC,IAAIM,gBAAgB,GAAG,CAACJ,EAAE,GAAGD,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACK,gBAAgB,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGN,kBAAkB;EAC5J,IAAIW,SAAS,GAAG,CAACJ,EAAE,GAAGF,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACM,SAAS,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGN,UAAU;EACtI,IAAIW,gBAAgB,GAAG,CAACJ,EAAE,GAAGH,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACO,gBAAgB,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGN,kBAAkB;EAC5J,IAAIW,iBAAiB,GAAGT,kBAAkB;EAC1C,IAAIU,iBAAiB,GAAG,UAAUC,KAAK,EAAE;IAAE,OAAQA,KAAK,CAACC,IAAI,KAAK,cAAc,GAAGJ,gBAAgB,GAAGD,SAAS;EAAG,CAAC;EACnH,IAAIM,cAAc,GAAG,UAAUF,KAAK,EAAE;IAAE,OAAOD,iBAAiB,CAACC,KAAK,CAAC,IAAIF,iBAAiB;EAAE,CAAC;EAC/F,IAAIK,mBAAmB,GAAG,UAAUH,KAAK,EAAE;IACvC,IAAI,CAACE,cAAc,CAACF,KAAK,CAAC,EAAE;MACxB,MAAM,IAAII,KAAK,CAAC,0BAA0B,CAAC;IAC/C;IACA,IAAIC,cAAc,GAAGN,iBAAiB,CAACC,KAAK,CAAC;IAC7CF,iBAAiB,IAAIO,cAAc;IACnC,OAAOA,cAAc;EACzB,CAAC;EACD,IAAIC,kBAAkB,GAAG,UAAUC,qBAAqB,EAAE;IACtDT,iBAAiB,IAAIS,qBAAqB,KAAK,IAAI,IAAIA,qBAAqB,KAAK,KAAK,CAAC,GAAGA,qBAAqB,GAAGZ,gBAAgB;IAClIG,iBAAiB,GAAGU,IAAI,CAACC,GAAG,CAACX,iBAAiB,EAAEJ,YAAY,CAAC;EACjE,CAAC;EACD,OAAOgB,MAAM,CAACC,MAAM,CAAC;IACjBT,cAAc,EAAEA,cAAc;IAC9BC,mBAAmB,EAAEA,mBAAmB;IACxCG,kBAAkB,EAAEA;EACxB,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module"}