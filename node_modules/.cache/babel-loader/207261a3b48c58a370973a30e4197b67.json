{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar inspect = require('object-inspect');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar Type = require('./Type');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-get-o-p\n\nmodule.exports = function Get(O, P) {\n  // 7.3.1.1\n  if (Type(O) !== 'Object') {\n    throw new $TypeError('Assertion failed: Type(O) is not Object');\n  }\n  // 7.3.1.2\n  if (!IsPropertyKey(P)) {\n    throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true, got ' + inspect(P));\n  }\n  // 7.3.1.3\n  return O[P];\n};","map":{"version":3,"names":["GetIntrinsic","require","$TypeError","inspect","IsPropertyKey","Type","module","exports","Get","O","P"],"sources":["F:/project/front-end/hei-admin-ui/node_modules/es-abstract/2022/Get.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar inspect = require('object-inspect');\n\nvar IsPropertyKey = require('./IsPropertyKey');\nvar Type = require('./Type');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-get-o-p\n\nmodule.exports = function Get(O, P) {\n\t// 7.3.1.1\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t}\n\t// 7.3.1.2\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true, got ' + inspect(P));\n\t}\n\t// 7.3.1.3\n\treturn O[P];\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE3C,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAa,CAAC;AAE5C,IAAIG,OAAO,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AAEvC,IAAIG,aAAa,GAAGH,OAAO,CAAC,iBAAiB,CAAC;AAC9C,IAAII,IAAI,GAAGJ,OAAO,CAAC,QAAQ,CAAC;;AAE5B;;AAEAK,MAAM,CAACC,OAAO,GAAG,SAASC,GAAG,CAACC,CAAC,EAAEC,CAAC,EAAE;EACnC;EACA,IAAIL,IAAI,CAACI,CAAC,CAAC,KAAK,QAAQ,EAAE;IACzB,MAAM,IAAIP,UAAU,CAAC,yCAAyC,CAAC;EAChE;EACA;EACA,IAAI,CAACE,aAAa,CAACM,CAAC,CAAC,EAAE;IACtB,MAAM,IAAIR,UAAU,CAAC,sDAAsD,GAAGC,OAAO,CAACO,CAAC,CAAC,CAAC;EAC1F;EACA;EACA,OAAOD,CAAC,CAACC,CAAC,CAAC;AACZ,CAAC"},"metadata":{},"sourceType":"script"}