{"ast":null,"code":"import { __read } from \"tslib\";\nexport var parseBoolean = function (value) {\n  switch (value) {\n    case \"true\":\n      return true;\n    case \"false\":\n      return false;\n    default:\n      throw new Error(\"Unable to parse boolean value \\\"\".concat(value, \"\\\"\"));\n  }\n};\nexport var expectBoolean = function (value) {\n  if (value === null || value === undefined) {\n    return undefined;\n  }\n  if (typeof value === \"number\") {\n    if (value === 0 || value === 1) {\n      logger.warn(stackTraceWarning(\"Expected boolean, got \".concat(typeof value, \": \").concat(value)));\n    }\n    if (value === 0) {\n      return false;\n    }\n    if (value === 1) {\n      return true;\n    }\n  }\n  if (typeof value === \"string\") {\n    var lower = value.toLowerCase();\n    if (lower === \"false\" || lower === \"true\") {\n      logger.warn(stackTraceWarning(\"Expected boolean, got \".concat(typeof value, \": \").concat(value)));\n    }\n    if (lower === \"false\") {\n      return false;\n    }\n    if (lower === \"true\") {\n      return true;\n    }\n  }\n  if (typeof value === \"boolean\") {\n    return value;\n  }\n  throw new TypeError(\"Expected boolean, got \".concat(typeof value, \": \").concat(value));\n};\nexport var expectNumber = function (value) {\n  if (value === null || value === undefined) {\n    return undefined;\n  }\n  if (typeof value === \"string\") {\n    var parsed = parseFloat(value);\n    if (!Number.isNaN(parsed)) {\n      if (String(parsed) !== String(value)) {\n        logger.warn(stackTraceWarning(\"Expected number but observed string: \".concat(value)));\n      }\n      return parsed;\n    }\n  }\n  if (typeof value === \"number\") {\n    return value;\n  }\n  throw new TypeError(\"Expected number, got \".concat(typeof value, \": \").concat(value));\n};\nvar MAX_FLOAT = Math.ceil(Math.pow(2, 127) * (2 - Math.pow(2, -23)));\nexport var expectFloat32 = function (value) {\n  var expected = expectNumber(value);\n  if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n    if (Math.abs(expected) > MAX_FLOAT) {\n      throw new TypeError(\"Expected 32-bit float, got \".concat(value));\n    }\n  }\n  return expected;\n};\nexport var expectLong = function (value) {\n  if (value === null || value === undefined) {\n    return undefined;\n  }\n  if (Number.isInteger(value) && !Number.isNaN(value)) {\n    return value;\n  }\n  throw new TypeError(\"Expected integer, got \".concat(typeof value, \": \").concat(value));\n};\nexport var expectInt = expectLong;\nexport var expectInt32 = function (value) {\n  return expectSizedInt(value, 32);\n};\nexport var expectShort = function (value) {\n  return expectSizedInt(value, 16);\n};\nexport var expectByte = function (value) {\n  return expectSizedInt(value, 8);\n};\nvar expectSizedInt = function (value, size) {\n  var expected = expectLong(value);\n  if (expected !== undefined && castInt(expected, size) !== expected) {\n    throw new TypeError(\"Expected \".concat(size, \"-bit integer, got \").concat(value));\n  }\n  return expected;\n};\nvar castInt = function (value, size) {\n  switch (size) {\n    case 32:\n      return Int32Array.of(value)[0];\n    case 16:\n      return Int16Array.of(value)[0];\n    case 8:\n      return Int8Array.of(value)[0];\n  }\n};\nexport var expectNonNull = function (value, location) {\n  if (value === null || value === undefined) {\n    if (location) {\n      throw new TypeError(\"Expected a non-null value for \".concat(location));\n    }\n    throw new TypeError(\"Expected a non-null value\");\n  }\n  return value;\n};\nexport var expectObject = function (value) {\n  if (value === null || value === undefined) {\n    return undefined;\n  }\n  if (typeof value === \"object\" && !Array.isArray(value)) {\n    return value;\n  }\n  var receivedType = Array.isArray(value) ? \"array\" : typeof value;\n  throw new TypeError(\"Expected object, got \".concat(receivedType, \": \").concat(value));\n};\nexport var expectString = function (value) {\n  if (value === null || value === undefined) {\n    return undefined;\n  }\n  if (typeof value === \"string\") {\n    return value;\n  }\n  if ([\"boolean\", \"number\", \"bigint\"].includes(typeof value)) {\n    logger.warn(stackTraceWarning(\"Expected string, got \".concat(typeof value, \": \").concat(value)));\n    return String(value);\n  }\n  throw new TypeError(\"Expected string, got \".concat(typeof value, \": \").concat(value));\n};\nexport var expectUnion = function (value) {\n  if (value === null || value === undefined) {\n    return undefined;\n  }\n  var asObject = expectObject(value);\n  var setKeys = Object.entries(asObject).filter(function (_a) {\n    var _b = __read(_a, 2),\n      v = _b[1];\n    return v != null;\n  }).map(function (_a) {\n    var _b = __read(_a, 1),\n      k = _b[0];\n    return k;\n  });\n  if (setKeys.length === 0) {\n    throw new TypeError(\"Unions must have exactly one non-null member. None were found.\");\n  }\n  if (setKeys.length > 1) {\n    throw new TypeError(\"Unions must have exactly one non-null member. Keys \".concat(setKeys, \" were not null.\"));\n  }\n  return asObject;\n};\nexport var strictParseDouble = function (value) {\n  if (typeof value == \"string\") {\n    return expectNumber(parseNumber(value));\n  }\n  return expectNumber(value);\n};\nexport var strictParseFloat = strictParseDouble;\nexport var strictParseFloat32 = function (value) {\n  if (typeof value == \"string\") {\n    return expectFloat32(parseNumber(value));\n  }\n  return expectFloat32(value);\n};\nvar NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nvar parseNumber = function (value) {\n  var matches = value.match(NUMBER_REGEX);\n  if (matches === null || matches[0].length !== value.length) {\n    throw new TypeError(\"Expected real number, got implicit NaN\");\n  }\n  return parseFloat(value);\n};\nexport var limitedParseDouble = function (value) {\n  if (typeof value == \"string\") {\n    return parseFloatString(value);\n  }\n  return expectNumber(value);\n};\nexport var handleFloat = limitedParseDouble;\nexport var limitedParseFloat = limitedParseDouble;\nexport var limitedParseFloat32 = function (value) {\n  if (typeof value == \"string\") {\n    return parseFloatString(value);\n  }\n  return expectFloat32(value);\n};\nvar parseFloatString = function (value) {\n  switch (value) {\n    case \"NaN\":\n      return NaN;\n    case \"Infinity\":\n      return Infinity;\n    case \"-Infinity\":\n      return -Infinity;\n    default:\n      throw new Error(\"Unable to parse float value: \".concat(value));\n  }\n};\nexport var strictParseLong = function (value) {\n  if (typeof value === \"string\") {\n    return expectLong(parseNumber(value));\n  }\n  return expectLong(value);\n};\nexport var strictParseInt = strictParseLong;\nexport var strictParseInt32 = function (value) {\n  if (typeof value === \"string\") {\n    return expectInt32(parseNumber(value));\n  }\n  return expectInt32(value);\n};\nexport var strictParseShort = function (value) {\n  if (typeof value === \"string\") {\n    return expectShort(parseNumber(value));\n  }\n  return expectShort(value);\n};\nexport var strictParseByte = function (value) {\n  if (typeof value === \"string\") {\n    return expectByte(parseNumber(value));\n  }\n  return expectByte(value);\n};\nvar stackTraceWarning = function (message) {\n  return String(new TypeError(message).stack || message).split(\"\\n\").slice(0, 5).filter(function (s) {\n    return !s.includes(\"stackTraceWarning\");\n  }).join(\"\\n\");\n};\nexport var logger = {\n  warn: console.warn\n};","map":{"version":3,"names":["__read","parseBoolean","value","Error","concat","expectBoolean","undefined","logger","warn","stackTraceWarning","lower","toLowerCase","TypeError","expectNumber","parsed","parseFloat","Number","isNaN","String","MAX_FLOAT","Math","ceil","pow","expectFloat32","expected","Infinity","abs","expectLong","isInteger","expectInt","expectInt32","expectSizedInt","expectShort","expectByte","size","castInt","Int32Array","of","Int16Array","Int8Array","expectNonNull","location","expectObject","Array","isArray","receivedType","expectString","includes","expectUnion","asObject","setKeys","Object","entries","filter","_a","_b","v","map","k","length","strictParseDouble","parseNumber","strictParseFloat","strictParseFloat32","NUMBER_REGEX","matches","match","limitedParseDouble","parseFloatString","handleFloat","limitedParseFloat","limitedParseFloat32","NaN","strictParseLong","strictParseInt","strictParseInt32","strictParseShort","strictParseByte","message","stack","split","slice","s","join","console"],"sources":["F:/project/front-end/hei-admin-ui/node_modules/@aws-sdk/client-location/node_modules/@aws-sdk/smithy-client/dist-es/parse-utils.js"],"sourcesContent":["import { __read } from \"tslib\";\nexport var parseBoolean = function (value) {\n    switch (value) {\n        case \"true\":\n            return true;\n        case \"false\":\n            return false;\n        default:\n            throw new Error(\"Unable to parse boolean value \\\"\".concat(value, \"\\\"\"));\n    }\n};\nexport var expectBoolean = function (value) {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"number\") {\n        if (value === 0 || value === 1) {\n            logger.warn(stackTraceWarning(\"Expected boolean, got \".concat(typeof value, \": \").concat(value)));\n        }\n        if (value === 0) {\n            return false;\n        }\n        if (value === 1) {\n            return true;\n        }\n    }\n    if (typeof value === \"string\") {\n        var lower = value.toLowerCase();\n        if (lower === \"false\" || lower === \"true\") {\n            logger.warn(stackTraceWarning(\"Expected boolean, got \".concat(typeof value, \": \").concat(value)));\n        }\n        if (lower === \"false\") {\n            return false;\n        }\n        if (lower === \"true\") {\n            return true;\n        }\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw new TypeError(\"Expected boolean, got \".concat(typeof value, \": \").concat(value));\n};\nexport var expectNumber = function (value) {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        var parsed = parseFloat(value);\n        if (!Number.isNaN(parsed)) {\n            if (String(parsed) !== String(value)) {\n                logger.warn(stackTraceWarning(\"Expected number but observed string: \".concat(value)));\n            }\n            return parsed;\n        }\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw new TypeError(\"Expected number, got \".concat(typeof value, \": \").concat(value));\n};\nvar MAX_FLOAT = Math.ceil(Math.pow(2, 127) * (2 - Math.pow(2, -23)));\nexport var expectFloat32 = function (value) {\n    var expected = expectNumber(value);\n    if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n        if (Math.abs(expected) > MAX_FLOAT) {\n            throw new TypeError(\"Expected 32-bit float, got \".concat(value));\n        }\n    }\n    return expected;\n};\nexport var expectLong = function (value) {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (Number.isInteger(value) && !Number.isNaN(value)) {\n        return value;\n    }\n    throw new TypeError(\"Expected integer, got \".concat(typeof value, \": \").concat(value));\n};\nexport var expectInt = expectLong;\nexport var expectInt32 = function (value) { return expectSizedInt(value, 32); };\nexport var expectShort = function (value) { return expectSizedInt(value, 16); };\nexport var expectByte = function (value) { return expectSizedInt(value, 8); };\nvar expectSizedInt = function (value, size) {\n    var expected = expectLong(value);\n    if (expected !== undefined && castInt(expected, size) !== expected) {\n        throw new TypeError(\"Expected \".concat(size, \"-bit integer, got \").concat(value));\n    }\n    return expected;\n};\nvar castInt = function (value, size) {\n    switch (size) {\n        case 32:\n            return Int32Array.of(value)[0];\n        case 16:\n            return Int16Array.of(value)[0];\n        case 8:\n            return Int8Array.of(value)[0];\n    }\n};\nexport var expectNonNull = function (value, location) {\n    if (value === null || value === undefined) {\n        if (location) {\n            throw new TypeError(\"Expected a non-null value for \".concat(location));\n        }\n        throw new TypeError(\"Expected a non-null value\");\n    }\n    return value;\n};\nexport var expectObject = function (value) {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    var receivedType = Array.isArray(value) ? \"array\" : typeof value;\n    throw new TypeError(\"Expected object, got \".concat(receivedType, \": \").concat(value));\n};\nexport var expectString = function (value) {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    if ([\"boolean\", \"number\", \"bigint\"].includes(typeof value)) {\n        logger.warn(stackTraceWarning(\"Expected string, got \".concat(typeof value, \": \").concat(value)));\n        return String(value);\n    }\n    throw new TypeError(\"Expected string, got \".concat(typeof value, \": \").concat(value));\n};\nexport var expectUnion = function (value) {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    var asObject = expectObject(value);\n    var setKeys = Object.entries(asObject)\n        .filter(function (_a) {\n        var _b = __read(_a, 2), v = _b[1];\n        return v != null;\n    })\n        .map(function (_a) {\n        var _b = __read(_a, 1), k = _b[0];\n        return k;\n    });\n    if (setKeys.length === 0) {\n        throw new TypeError(\"Unions must have exactly one non-null member. None were found.\");\n    }\n    if (setKeys.length > 1) {\n        throw new TypeError(\"Unions must have exactly one non-null member. Keys \".concat(setKeys, \" were not null.\"));\n    }\n    return asObject;\n};\nexport var strictParseDouble = function (value) {\n    if (typeof value == \"string\") {\n        return expectNumber(parseNumber(value));\n    }\n    return expectNumber(value);\n};\nexport var strictParseFloat = strictParseDouble;\nexport var strictParseFloat32 = function (value) {\n    if (typeof value == \"string\") {\n        return expectFloat32(parseNumber(value));\n    }\n    return expectFloat32(value);\n};\nvar NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nvar parseNumber = function (value) {\n    var matches = value.match(NUMBER_REGEX);\n    if (matches === null || matches[0].length !== value.length) {\n        throw new TypeError(\"Expected real number, got implicit NaN\");\n    }\n    return parseFloat(value);\n};\nexport var limitedParseDouble = function (value) {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectNumber(value);\n};\nexport var handleFloat = limitedParseDouble;\nexport var limitedParseFloat = limitedParseDouble;\nexport var limitedParseFloat32 = function (value) {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectFloat32(value);\n};\nvar parseFloatString = function (value) {\n    switch (value) {\n        case \"NaN\":\n            return NaN;\n        case \"Infinity\":\n            return Infinity;\n        case \"-Infinity\":\n            return -Infinity;\n        default:\n            throw new Error(\"Unable to parse float value: \".concat(value));\n    }\n};\nexport var strictParseLong = function (value) {\n    if (typeof value === \"string\") {\n        return expectLong(parseNumber(value));\n    }\n    return expectLong(value);\n};\nexport var strictParseInt = strictParseLong;\nexport var strictParseInt32 = function (value) {\n    if (typeof value === \"string\") {\n        return expectInt32(parseNumber(value));\n    }\n    return expectInt32(value);\n};\nexport var strictParseShort = function (value) {\n    if (typeof value === \"string\") {\n        return expectShort(parseNumber(value));\n    }\n    return expectShort(value);\n};\nexport var strictParseByte = function (value) {\n    if (typeof value === \"string\") {\n        return expectByte(parseNumber(value));\n    }\n    return expectByte(value);\n};\nvar stackTraceWarning = function (message) {\n    return String(new TypeError(message).stack || message)\n        .split(\"\\n\")\n        .slice(0, 5)\n        .filter(function (s) { return !s.includes(\"stackTraceWarning\"); })\n        .join(\"\\n\");\n};\nexport var logger = {\n    warn: console.warn,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}