{"ast":null,"code":"'use strict';\n\nconst preserveCamelCase = string => {\n  let isLastCharLower = false;\n  let isLastCharUpper = false;\n  let isLastLastCharUpper = false;\n  for (let i = 0; i < string.length; i++) {\n    const character = string[i];\n    if (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n      string = string.slice(0, i) + '-' + string.slice(i);\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n      string = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n    }\n  }\n  return string;\n};\nconst camelCase = (input, options) => {\n  if (!(typeof input === 'string' || Array.isArray(input))) {\n    throw new TypeError('Expected the input to be `string | string[]`');\n  }\n  options = Object.assign({\n    pascalCase: false\n  }, options);\n  const postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n  if (Array.isArray(input)) {\n    input = input.map(x => x.trim()).filter(x => x.length).join('-');\n  } else {\n    input = input.trim();\n  }\n  if (input.length === 0) {\n    return '';\n  }\n  if (input.length === 1) {\n    return options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n  }\n  const hasUpperCase = input !== input.toLowerCase();\n  if (hasUpperCase) {\n    input = preserveCamelCase(input);\n  }\n  input = input.replace(/^[_.\\- ]+/, '').toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase()).replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n  return postProcess(input);\n};\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;","map":{"version":3,"names":["preserveCamelCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","length","character","test","toUpperCase","slice","toLowerCase","camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","postProcess","x","charAt","map","trim","filter","join","hasUpperCase","replace","_","p1","m","module","exports","default"],"sources":["F:/project/front-end/hei-admin-ui/node_modules/camelcase/index.js"],"sourcesContent":["'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}