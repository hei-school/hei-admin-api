{"ast":null,"code":"import { __asyncGenerator, __await, __awaiter, __generator, __read, __spread } from \"tslib\";\nimport { Rekognition } from \"../Rekognition\";\nimport { RekognitionClient } from \"../RekognitionClient\";\nimport { GetPersonTrackingCommand } from \"../commands/GetPersonTrackingCommand\";\n/**\n * @private\n */\nvar makePagedClientRequest = function (client, input) {\n  var args = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    args[_i - 2] = arguments[_i];\n  }\n  return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, client.send.apply(client, __spread([new GetPersonTrackingCommand(input)], args))];\n        case 1:\n          // @ts-ignore\n          return [2 /*return*/, _a.sent()];\n      }\n    });\n  });\n};\n/**\n * @private\n */\nvar makePagedRequest = function (client, input) {\n  var args = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    args[_i - 2] = arguments[_i];\n  }\n  return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, client.getPersonTracking.apply(client, __spread([input], args))];\n        case 1:\n          // @ts-ignore\n          return [2 /*return*/, _a.sent()];\n      }\n    });\n  });\n};\nexport function paginateGetPersonTracking(config, input) {\n  var additionalArguments = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    additionalArguments[_i - 2] = arguments[_i];\n  }\n  return __asyncGenerator(this, arguments, function paginateGetPersonTracking_1() {\n    var token, hasNext, page;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          token = config.startingToken || undefined;\n          hasNext = true;\n          _a.label = 1;\n        case 1:\n          if (!hasNext) return [3 /*break*/, 9];\n          input.NextToken = token;\n          input[\"MaxResults\"] = config.pageSize;\n          if (!(config.client instanceof Rekognition)) return [3 /*break*/, 3];\n          return [4 /*yield*/, __await(makePagedRequest.apply(void 0, __spread([config.client, input], additionalArguments)))];\n        case 2:\n          page = _a.sent();\n          return [3 /*break*/, 6];\n        case 3:\n          if (!(config.client instanceof RekognitionClient)) return [3 /*break*/, 5];\n          return [4 /*yield*/, __await(makePagedClientRequest.apply(void 0, __spread([config.client, input], additionalArguments)))];\n        case 4:\n          page = _a.sent();\n          return [3 /*break*/, 6];\n        case 5:\n          throw new Error(\"Invalid client, expected Rekognition | RekognitionClient\");\n        case 6:\n          return [4 /*yield*/, __await(page)];\n        case 7:\n          return [4 /*yield*/, _a.sent()];\n        case 8:\n          _a.sent();\n          token = page.NextToken;\n          hasNext = !!token;\n          return [3 /*break*/, 1];\n        case 9:\n          return [4 /*yield*/, __await(undefined)];\n        case 10:\n          // @ts-ignore\n          return [2 /*return*/, _a.sent()];\n      }\n    });\n  });\n}","map":{"version":3,"sources":["../../../pagination/GetPersonTrackingPaginator.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __asyncGenerator, __await, __awaiter, __generator, __read, __spread } from \"tslib\";\nimport { Rekognition } from \"../Rekognition\";\nimport { RekognitionClient } from \"../RekognitionClient\";\nimport { GetPersonTrackingCommand, } from \"../commands/GetPersonTrackingCommand\";\n/**\n * @private\n */\nvar makePagedClientRequest = function (client, input) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, client.send.apply(client, __spread([new GetPersonTrackingCommand(input)], args))];\n                case 1: \n                // @ts-ignore\n                return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n};\n/**\n * @private\n */\nvar makePagedRequest = function (client, input) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, client.getPersonTracking.apply(client, __spread([input], args))];\n                case 1: \n                // @ts-ignore\n                return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n};\nexport function paginateGetPersonTracking(config, input) {\n    var additionalArguments = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        additionalArguments[_i - 2] = arguments[_i];\n    }\n    return __asyncGenerator(this, arguments, function paginateGetPersonTracking_1() {\n        var token, hasNext, page;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    token = config.startingToken || undefined;\n                    hasNext = true;\n                    _a.label = 1;\n                case 1:\n                    if (!hasNext) return [3 /*break*/, 9];\n                    input.NextToken = token;\n                    input[\"MaxResults\"] = config.pageSize;\n                    if (!(config.client instanceof Rekognition)) return [3 /*break*/, 3];\n                    return [4 /*yield*/, __await(makePagedRequest.apply(void 0, __spread([config.client, input], additionalArguments)))];\n                case 2:\n                    page = _a.sent();\n                    return [3 /*break*/, 6];\n                case 3:\n                    if (!(config.client instanceof RekognitionClient)) return [3 /*break*/, 5];\n                    return [4 /*yield*/, __await(makePagedClientRequest.apply(void 0, __spread([config.client, input], additionalArguments)))];\n                case 4:\n                    page = _a.sent();\n                    return [3 /*break*/, 6];\n                case 5: throw new Error(\"Invalid client, expected Rekognition | RekognitionClient\");\n                case 6: return [4 /*yield*/, __await(page)];\n                case 7: return [4 /*yield*/, _a.sent()];\n                case 8:\n                    _a.sent();\n                    token = page.NextToken;\n                    hasNext = !!token;\n                    return [3 /*break*/, 1];\n                case 9: return [4 /*yield*/, __await(undefined)];\n                case 10: \n                // @ts-ignore\n                return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\n//# sourceMappingURL=GetPersonTrackingPaginator.js.map"]},"metadata":{},"sourceType":"module"}