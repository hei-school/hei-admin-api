{"ast":null,"code":"export function fromUtf8(input) {\n  return new TextEncoder().encode(input);\n}\nexport function toUtf8(input) {\n  return new TextDecoder(\"utf-8\").decode(input);\n}","map":{"version":3,"sources":["../../src/whatwgEncodingApi.ts"],"names":[],"mappings":"AAyCA,OAAM,SAAU,QAAQ,CAAC,KAAa,EAAA;EACpC,OAAO,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;AACxC;AAEA,OAAM,SAAU,MAAM,CAAC,KAAiB,EAAA;EACtC,OAAO,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;AAC/C","sourcesContent":["/**\n * A declaration of the global TextEncoder and TextDecoder constructors.\n *\n * @see https://encoding.spec.whatwg.org/\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace Encoding {\n  interface TextDecoderOptions {\n    fatal?: boolean;\n    ignoreBOM?: boolean;\n  }\n\n  interface TextDecodeOptions {\n    stream?: boolean;\n  }\n\n  interface TextDecoder {\n    readonly encoding: string;\n    readonly fatal: boolean;\n    readonly ignoreBOM: boolean;\n    decode(input?: ArrayBuffer | ArrayBufferView, options?: TextDecodeOptions): string;\n  }\n\n  export interface TextDecoderConstructor {\n    new (label?: string, options?: TextDecoderOptions): TextDecoder;\n  }\n\n  interface TextEncoder {\n    readonly encoding: \"utf-8\";\n    encode(input?: string): Uint8Array;\n  }\n\n  export interface TextEncoderConstructor {\n    new (): TextEncoder;\n  }\n}\n\ndeclare const TextDecoder: Encoding.TextDecoderConstructor;\n\ndeclare const TextEncoder: Encoding.TextEncoderConstructor;\n\nexport function fromUtf8(input: string): Uint8Array {\n  return new TextEncoder().encode(input);\n}\n\nexport function toUtf8(input: Uint8Array): string {\n  return new TextDecoder(\"utf-8\").decode(input);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}